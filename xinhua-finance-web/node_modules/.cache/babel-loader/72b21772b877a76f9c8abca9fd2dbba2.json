{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\partner\\partner.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\partner\\partner.vue","mtime":1618794737789},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getDeptTree } from \"@/api/system/dept\";\nimport { regionTree } from \"@/api/base/region\";\nimport { add, getDetail, getList, remove, update } from \"@/api/partner/partner\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      parTypeDict: [],\n      // 合作商类型数据字典\n      option: {\n        height: 'auto',\n        calcHeight: 210,\n        labelWidth: 130,\n        searchLabelWidth: 100,\n        menuWidth: 300,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: true,\n        selection: true,\n        refreshBtn: false,\n        columnBtn: false,\n        searchShowBtn: false,\n        column: [{\n          label: \"主键id 雪花算法产生\",\n          prop: \"id\",\n          hide: true,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"合作商编码\",\n          prop: \"parCode\",\n          search: true,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          showWordLimit: true,\n          maxlength: 30\n        }, {\n          label: \"合作商名称\",\n          prop: \"parName\",\n          search: true,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          showWordLimit: true,\n          maxlength: 30\n        }, {\n          label: \"合作商类型\",\n          prop: \"parType\",\n          search: true,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          type: 'select',\n          props: {\n            label: 'dictValue',\n            value: 'dictKey'\n          },\n          dicUrl: this.getDicValue(\"partner_type\")\n        }, {\n          label: \"所属地区\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          prop: \"areaName\"\n        }, {\n          label: \"合作商联系人\",\n          prop: \"leaderPerson\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          showWordLimit: true,\n          maxlength: 10,\n          rules: [{\n            required: true,\n            message: \"请输入合作商联系人\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"创建人\",\n          prop: \"createUserName\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"最后更改人\",\n          prop: \"updateUserName\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"最后更改时间\",\n          prop: \"updateTime\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }],\n        group: [{\n          label: '客户经理信息',\n          prop: 'jbxx',\n          // icon: 'el-icon-edit-outline',\n          column: [{\n            label: '客户经理',\n            prop: 'managerName',\n            showWordLimit: true,\n            maxlength: 30\n          }, {\n            label: \"所属机构\",\n            prop: \"managerOrg\",\n            type: \"tree\",\n            multiple: false,\n            dicData: [],\n            props: {\n              label: \"title\"\n            },\n            slot: true,\n            checkStrictly: true\n          }]\n        }, {\n          label: '合作商信息',\n          prop: 'hzsxx',\n          // icon: 'el-icon-edit-outline',\n          column: [{\n            label: \"主键id 雪花算法产生\",\n            prop: \"id\",\n            hide: true,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          }, {\n            label: \"合作商编码\",\n            prop: \"parCode\",\n            showWordLimit: true,\n            maxlength: 30,\n            rules: [{\n              required: true,\n              message: \"请输入合作商编码\",\n              trigger: \"blur\"\n            }]\n          }, {\n            label: \"合作商名称\",\n            prop: \"parName\",\n            showWordLimit: true,\n            maxlength: 30,\n            rules: [{\n              required: true,\n              message: \"请输入合作商名称\",\n              trigger: \"blur\"\n            }]\n          }, {\n            label: \"合作商类型\",\n            prop: \"parType\",\n            type: 'select',\n            dicUrl: this.getDicValue(\"partner_type\"),\n            props: {\n              label: 'dictValue',\n              value: 'dictKey'\n            },\n            rules: [{\n              required: true,\n              message: \"请输入合作商类型\",\n              trigger: \"blur\"\n            }]\n          }, {\n            label: \"所属地区\",\n            prop: \"area\",\n            type: 'tree',\n            dicData: [],\n            leafOnly: true,\n            viewDisplay: false,\n            props: {\n              label: 'title',\n              value: 'value'\n            },\n            multiple: false,\n            slot: true,\n            checkStrictly: true,\n            // lazy: true,\n            // treeLoad: function (node, resolve) {\n            //   console.log(\"加载数\", node.data.data.id);\n            //   const parentCode = (node.level === 0) ? \"00\" : node.data.id;\n            //   getLazyTree(parentCode).then(res => {\n            //     resolve(res.data.data.map(item => {\n            //       return {\n            //         ...item,\n            //         leaf: !item.hasChildren\n            //       }\n            //     }))\n            //   });\n            // },\n            rules: []\n          }, {\n            label: \"所属地区\",\n            prop: \"areaName\",\n            editDisplay: false,\n            addDisplay: false\n          }, {\n            label: \"合作商联系人\",\n            prop: \"leaderPerson\",\n            showWordLimit: true,\n            maxlength: 10,\n            rules: [{\n              required: true,\n              message: \"请输入合作商联系人\",\n              trigger: \"blur\"\n            }]\n          }, {\n            label: \"合作商联系电话\",\n            prop: \"userTelphone\",\n            hide: true,\n            rules: [{\n              required: true,\n              message: \"请输入合作商联系电话\",\n              trigger: \"blur\"\n            }, {\n              pattern: /(^([0-9]{3,4}-)?[0-9]{7,8}$)|(^1[0-9]{10}$)/,\n              message: '请输入正确的联系电话'\n            }]\n          }, {\n            label: \"邮箱\",\n            prop: \"userEmail\",\n            hide: true,\n            rules: [{\n              pattern: /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/,\n              message: '请输入正确的邮箱'\n            }]\n          }, {\n            label: \"固话\",\n            prop: \"userPhone\",\n            hide: true,\n            rules: [{\n              pattern: /^([0-9]{3,4}-)?[0-9]{7,8}$/,\n              message: '请输入正确的固话'\n            }]\n          }, {\n            label: \"地址\",\n            prop: \"address\",\n            span: 24,\n            hide: true,\n            showWordLimit: true,\n            maxlength: 50,\n            rules: []\n          }, {\n            label: \"备注信息\",\n            prop: \"remark\",\n            type: 'textarea',\n            span: 24,\n            hide: true,\n            showWordLimit: true,\n            maxlength: 100,\n            rules: []\n          }, {\n            label: \"创建人\",\n            prop: \"createUser\",\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          }, {\n            label: \"创建时间\",\n            prop: \"createTime\",\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          }, {\n            label: \"最后更改人\",\n            prop: \"updateUser\",\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          }, {\n            label: \"最后更改时间\",\n            prop: \"updateTime\",\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.partner_add, false),\n        viewBtn: this.vaildData(this.permission.partner_view, false),\n        delBtn: this.vaildData(this.permission.partner_delete, false),\n        editBtn: this.vaildData(this.permission.partner_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, done, loading) {\n      var _this = this;\n\n      console.log(row);\n      add(row).then(function () {\n        done();\n\n        _this.onLoad(_this.page);\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this2 = this;\n\n      console.info(row);\n      row.areaName = encodeURI(row.areaName);\n      update(row).then(function () {\n        done();\n\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"是否确定删除（若合作商有关联产品则无法删除）?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {// this.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this5 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        decodeURI(data);\n        _this5.page.total = data.total;\n        console.info(data.records);\n        _this5.data = data.records;\n        _this5.loading = false;\n\n        _this5.selectionClear();\n      }); // 初始化部门数据\n\n      getDeptTree('000000').then(function (res) {\n        var column = _this5.findObject(_this5.option.group[0].column, \"managerOrg\");\n\n        column.dicData = res.data.data;\n      }); //初始化\n\n      regionTree(3).then(function (res) {\n        console.log(\"加载初始区域\");\n\n        var column = _this5.findObject(_this5.option.group[1].column, \"area\");\n\n        column.dicData = res.data.data;\n      });\n    },\n    // 查看合作商产品\n    viewPartnerProduct: function viewPartnerProduct(row) {\n      this.$router.push({\n        path: '/partner/partnerProduct',\n        query: {\n          id: row.id\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["partner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :before-open=\"beforeOpen\"\r\n               :data=\"data\"\r\n               :option=\"option\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :table-loading=\"loading\"\r\n               @current-change=\"currentChange\"\r\n               @on-load=\"onLoad\"\r\n               @row-del=\"rowDel\"\r\n               @row-save=\"rowSave\"\r\n               @row-update=\"rowUpdate\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @size-change=\"sizeChange\"\r\n               ref=\"crud\"\r\n               v-model=\"form\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button @click=\"handleDelete\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   size=\"small\"\r\n                   type=\"danger\"\r\n                   v-if=\"permission.partner_delete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <!--      <template slot-scope=\"{row}\"\r\n                      slot=\"parType\">\r\n              <el-tag>{{ row.parTypeName }}</el-tag>\r\n            </template> -->\r\n      <template slot=\"menu\" slot-scope=\"scope\">\r\n        <el-button @click=\"viewPartnerProduct(scope.row)\"\r\n                   icon=\"el-icon-view\"\r\n                   size=\"small\" type=\"text\">查看产品\r\n        </el-button>\r\n      </template>\r\n    </avue-crud>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getDeptTree} from \"@/api/system/dept\";\r\n  import {regionTree} from \"@/api/base/region\";\r\n  import {add, getDetail, getList, remove, update} from \"@/api/partner/partner\";\r\n  import {mapGetters} from \"vuex\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        parTypeDict: [],  // 合作商类型数据字典\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 210,\r\n          labelWidth: 130,\r\n          searchLabelWidth: 100,\r\n          menuWidth: 300,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          viewBtn: true,\r\n          selection: true,\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"合作商编码\",\r\n              prop: \"parCode\",\r\n              search: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              showWordLimit: true,\r\n              maxlength: 30\r\n            },\r\n            {\r\n              label: \"合作商名称\",\r\n              prop: \"parName\",\r\n              search: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              showWordLimit: true,\r\n              maxlength: 30\r\n            },\r\n            {\r\n              label: \"合作商类型\",\r\n              prop: \"parType\",\r\n              search: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              type: 'select',\r\n              props: {\r\n                label: 'dictValue',\r\n                value: 'dictKey'\r\n              },\r\n              dicUrl: this.getDicValue(\"partner_type\")\r\n            },\r\n            {\r\n              label: \"所属地区\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              prop: \"areaName\"\r\n            },\r\n            {\r\n              label: \"合作商联系人\",\r\n              prop: \"leaderPerson\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              showWordLimit: true,\r\n              maxlength: 10,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入合作商联系人\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"最后更改人\",\r\n              prop: \"updateUserName\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"最后更改时间\",\r\n              prop: \"updateTime\",\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            }\r\n          ],\r\n          group: [\r\n            {\r\n              label: '客户经理信息',\r\n              prop: 'jbxx',\r\n              // icon: 'el-icon-edit-outline',\r\n              column: [\r\n                {\r\n                  label: '客户经理',\r\n                  prop: 'managerName',\r\n                  showWordLimit: true,\r\n                  maxlength: 30\r\n                },\r\n                {\r\n                  label: \"所属机构\",\r\n                  prop: \"managerOrg\",\r\n                  type: \"tree\",\r\n                  multiple: false,\r\n                  dicData: [],\r\n                  props: {\r\n                    label: \"title\"\r\n                  },\r\n                  slot: true,\r\n                  checkStrictly: true\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              label: '合作商信息',\r\n              prop: 'hzsxx',\r\n              // icon: 'el-icon-edit-outline',\r\n              column: [\r\n                {\r\n                  label: \"主键id 雪花算法产生\",\r\n                  prop: \"id\",\r\n                  hide: true,\r\n                  addDisplay: false,\r\n                  editDisplay: false,\r\n                  viewDisplay: false\r\n                },\r\n                {\r\n                  label: \"合作商编码\",\r\n                  prop: \"parCode\",\r\n                  showWordLimit: true,\r\n                  maxlength: 30,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入合作商编码\",\r\n                    trigger: \"blur\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"合作商名称\",\r\n                  prop: \"parName\",\r\n                  showWordLimit: true,\r\n                  maxlength: 30,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入合作商名称\",\r\n                    trigger: \"blur\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"合作商类型\",\r\n                  prop: \"parType\",\r\n                  type: 'select',\r\n                  dicUrl: this.getDicValue(\"partner_type\"),\r\n                  props: {\r\n                    label: 'dictValue',\r\n                    value: 'dictKey'\r\n                  },\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入合作商类型\",\r\n                    trigger: \"blur\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"所属地区\",\r\n                  prop: \"area\",\r\n                  type: 'tree',\r\n                  dicData: [],\r\n                  leafOnly: true,\r\n                  viewDisplay: false,\r\n                  props: {\r\n                    label: 'title',\r\n                    value: 'value'\r\n                  },\r\n                  multiple: false,\r\n                  slot: true,\r\n                  checkStrictly: true,\r\n                  // lazy: true,\r\n                  // treeLoad: function (node, resolve) {\r\n                  //   console.log(\"加载数\", node.data.data.id);\r\n                  //   const parentCode = (node.level === 0) ? \"00\" : node.data.id;\r\n                  //   getLazyTree(parentCode).then(res => {\r\n                  //     resolve(res.data.data.map(item => {\r\n                  //       return {\r\n                  //         ...item,\r\n                  //         leaf: !item.hasChildren\r\n                  //       }\r\n                  //     }))\r\n                  //   });\r\n                  // },\r\n                  rules: []\r\n                },\r\n                {\r\n                  label: \"所属地区\",\r\n                  prop: \"areaName\",\r\n                  editDisplay: false,\r\n                  addDisplay: false\r\n                },\r\n                {\r\n                  label: \"合作商联系人\",\r\n                  prop: \"leaderPerson\",\r\n                  showWordLimit: true,\r\n                  maxlength: 10,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入合作商联系人\",\r\n                    trigger: \"blur\"\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"合作商联系电话\",\r\n                  prop: \"userTelphone\",\r\n                  hide: true,\r\n                  rules: [{\r\n                    required: true,\r\n                    message: \"请输入合作商联系电话\",\r\n                    trigger: \"blur\"\r\n                  }, {pattern: /(^([0-9]{3,4}-)?[0-9]{7,8}$)|(^1[0-9]{10}$)/, message: '请输入正确的联系电话'}]\r\n                },\r\n                {\r\n                  label: \"邮箱\",\r\n                  prop: \"userEmail\",\r\n                  hide: true,\r\n                  rules: [{\r\n                    pattern: /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/,\r\n                    message: '请输入正确的邮箱'\r\n                  }]\r\n                },\r\n                {\r\n                  label: \"固话\",\r\n                  prop: \"userPhone\",\r\n                  hide: true,\r\n                  rules: [{pattern: /^([0-9]{3,4}-)?[0-9]{7,8}$/, message: '请输入正确的固话'}]\r\n                },\r\n                {\r\n                  label: \"地址\",\r\n                  prop: \"address\",\r\n                  span: 24,\r\n                  hide: true,\r\n                  showWordLimit: true,\r\n                  maxlength: 50,\r\n                  rules: []\r\n                },\r\n                {\r\n                  label: \"备注信息\",\r\n                  prop: \"remark\",\r\n                  type: 'textarea',\r\n                  span: 24,\r\n                  hide: true,\r\n                  showWordLimit: true,\r\n                  maxlength: 100,\r\n                  rules: []\r\n                },\r\n                {\r\n                  label: \"创建人\",\r\n                  prop: \"createUser\",\r\n                  addDisplay: false,\r\n                  editDisplay: false,\r\n                  viewDisplay: false\r\n                },\r\n                {\r\n                  label: \"创建时间\",\r\n                  prop: \"createTime\",\r\n                  addDisplay: false,\r\n                  editDisplay: false,\r\n                  viewDisplay: false\r\n                },\r\n                {\r\n                  label: \"最后更改人\",\r\n                  prop: \"updateUser\",\r\n                  addDisplay: false,\r\n                  editDisplay: false,\r\n                  viewDisplay: false\r\n                },\r\n                {\r\n                  label: \"最后更改时间\",\r\n                  prop: \"updateTime\",\r\n                  addDisplay: false,\r\n                  editDisplay: false,\r\n                  viewDisplay: false\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.partner_add, false),\r\n          viewBtn: this.vaildData(this.permission.partner_view, false),\r\n          delBtn: this.vaildData(this.permission.partner_delete, false),\r\n          editBtn: this.vaildData(this.permission.partner_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        console.log(row);\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        console.info(row);\r\n        row.areaName = encodeURI(row.areaName);\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"是否确定删除（若合作商有关联产品则无法删除）?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            // this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          decodeURI(data);\r\n          this.page.total = data.total;\r\n          console.info(data.records);\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n\r\n        // 初始化部门数据\r\n        getDeptTree('000000').then(res => {\r\n          const column = this.findObject(this.option.group[0].column, \"managerOrg\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        //初始化\r\n        regionTree(3).then(res => {\r\n          console.log(\"加载初始区域\")\r\n          const column = this.findObject(this.option.group[1].column, \"area\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      },\r\n      // 查看合作商产品\r\n      viewPartnerProduct(row) {\r\n        this.$router.push({path: '/partner/partnerProduct', query: {id: row.id}})\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/partner"}]}