{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\util\\func.js","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\util\\func.js","mtime":1618367977417},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-nan\";\nimport _classCallCheck from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * 通用工具类\r\n */\nvar func = /*#__PURE__*/function () {\n  function func() {\n    _classCallCheck(this, func);\n  }\n\n  _createClass(func, null, [{\n    key: \"notEmpty\",\n    value:\n    /**\r\n     * 不为空\r\n     * @param val\r\n     * @returns {boolean}\r\n     */\n    function notEmpty(val) {\n      return !this.isEmpty(val);\n    }\n    /**\r\n     * 是否为定义\r\n     * @param val\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isUndefined\",\n    value: function isUndefined(val) {\n      return val === null || typeof val === 'undefined';\n    }\n    /**\r\n     * 为空\r\n     * @param val\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty(val) {\n      if (val === null || typeof val === 'undefined' || typeof val === 'string' && val === '' && val !== 'undefined') {\n        return true;\n      }\n\n      return false;\n    }\n    /**\r\n     * 强转int型\r\n     * @param val\r\n     * @param defaultValue\r\n     * @returns {number}\r\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(val, defaultValue) {\n      if (this.isEmpty(val)) {\n        return defaultValue === undefined ? -1 : defaultValue;\n      }\n\n      var num = parseInt(val, 0);\n      return Number.isNaN(num) ? defaultValue === undefined ? -1 : defaultValue : num;\n    }\n    /**\r\n     * Json强转为Form类型\r\n     * @param obj\r\n     * @returns {FormData}\r\n     */\n\n  }, {\n    key: \"toFormData\",\n    value: function toFormData(obj) {\n      var data = new FormData();\n      Object.keys(obj).forEach(function (key) {\n        data.append(key, Array.isArray(obj[key]) ? obj[key].join(',') : obj[key]);\n      });\n      return data;\n    }\n    /**\r\n     * date类转为字符串格式\r\n     * @param date\r\n     * @param format\r\n     * @returns {null}\r\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(date) {\n      var _format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';\n\n      return date ? date.format(_format) : null;\n    }\n    /**\r\n     * 根据逗号联合\r\n     * @param arr\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(arr) {\n      return arr ? arr.join(',') : '';\n    }\n    /**\r\n     * 根据逗号分隔\r\n     * @param str\r\n     * @returns {string}\r\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(str) {\n      return str ? String(str).split(',') : '';\n    }\n  }]);\n\n  return func;\n}();\n\nexport { func as default };",{"version":3,"sources":["F:/东方通/source/b_zwj/xinhua-finance-web/src/util/func.js"],"names":["func","val","isEmpty","defaultValue","undefined","num","parseInt","Number","isNaN","obj","data","FormData","Object","keys","forEach","key","append","Array","isArray","join","date","format","arr","str","String","split"],"mappings":";;;;;;;;AAAA;AACA;AACA;IACqBA,I;;;;;;;;AACnB;AACF;AACA;AACA;AACA;AACE,sBAAgBC,GAAhB,EAAqB;AACnB,aAAO,CAAC,KAAKC,OAAL,CAAaD,GAAb,CAAR;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,qBAAmBA,GAAnB,EAAwB;AACtB,aAAOA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAtC;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,iBAAeA,GAAf,EAAoB;AAClB,UACEA,GAAG,KAAK,IAAR,IACA,OAAOA,GAAP,KAAe,WADf,IAEC,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EAAnC,IAAyCA,GAAG,KAAK,WAHpD,EAIE;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,eAAaA,GAAb,EAAkBE,YAAlB,EAAgC;AAC9B,UAAI,KAAKD,OAAL,CAAaD,GAAb,CAAJ,EAAuB;AACrB,eAAOE,YAAY,KAAKC,SAAjB,GAA6B,CAAC,CAA9B,GAAkCD,YAAzC;AACD;;AACD,UAAME,GAAG,GAAGC,QAAQ,CAACL,GAAD,EAAM,CAAN,CAApB;AACA,aAAOM,MAAM,CAACC,KAAP,CAAaH,GAAb,IAAqBF,YAAY,KAAKC,SAAjB,GAA6B,CAAC,CAA9B,GAAkCD,YAAvD,GAAuEE,GAA9E;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,oBAAkBI,GAAlB,EAAuB;AACrB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYJ,GAAZ,EAAiBK,OAAjB,CAAyB,UAAAC,GAAG,EAAI;AAC9BL,QAAAA,IAAI,CAACM,MAAL,CAAYD,GAAZ,EAAiBE,KAAK,CAACC,OAAN,CAAcT,GAAG,CAACM,GAAD,CAAjB,IAA0BN,GAAG,CAACM,GAAD,CAAH,CAASI,IAAT,CAAc,GAAd,CAA1B,GAA+CV,GAAG,CAACM,GAAD,CAAnE;AACD,OAFD;AAGA,aAAOL,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,gBAAcU,IAAd,EAAoD;AAAA,UAAhCC,OAAgC,uEAAvB,qBAAuB;;AAClD,aAAOD,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAYA,OAAZ,CAAH,GAAyB,IAApC;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,cAAYC,GAAZ,EAAiB;AACf,aAAOA,GAAG,GAAGA,GAAG,CAACH,IAAJ,CAAS,GAAT,CAAH,GAAmB,EAA7B;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,eAAaI,GAAb,EAAkB;AAChB,aAAOA,GAAG,GAAGC,MAAM,CAACD,GAAD,CAAN,CAAYE,KAAZ,CAAkB,GAAlB,CAAH,GAA4B,EAAtC;AACD;;;;;;SAxFkBzB,I","sourcesContent":["/**\r\n * 通用工具类\r\n */\r\nexport default class func {\r\n  /**\r\n   * 不为空\r\n   * @param val\r\n   * @returns {boolean}\r\n   */\r\n  static notEmpty(val) {\r\n    return !this.isEmpty(val);\r\n  }\r\n\r\n  /**\r\n   * 是否为定义\r\n   * @param val\r\n   * @returns {boolean}\r\n   */\r\n  static isUndefined(val) {\r\n    return val === null || typeof val === 'undefined';\r\n  }\r\n\r\n  /**\r\n   * 为空\r\n   * @param val\r\n   * @returns {boolean}\r\n   */\r\n  static isEmpty(val) {\r\n    if (\r\n      val === null ||\r\n      typeof val === 'undefined' ||\r\n      (typeof val === 'string' && val === '' && val !== 'undefined')\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 强转int型\r\n   * @param val\r\n   * @param defaultValue\r\n   * @returns {number}\r\n   */\r\n  static toInt(val, defaultValue) {\r\n    if (this.isEmpty(val)) {\r\n      return defaultValue === undefined ? -1 : defaultValue;\r\n    }\r\n    const num = parseInt(val, 0);\r\n    return Number.isNaN(num) ? (defaultValue === undefined ? -1 : defaultValue) : num;\r\n  }\r\n\r\n  /**\r\n   * Json强转为Form类型\r\n   * @param obj\r\n   * @returns {FormData}\r\n   */\r\n  static toFormData(obj) {\r\n    const data = new FormData();\r\n    Object.keys(obj).forEach(key => {\r\n      data.append(key, Array.isArray(obj[key]) ? obj[key].join(',') : obj[key]);\r\n    });\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * date类转为字符串格式\r\n   * @param date\r\n   * @param format\r\n   * @returns {null}\r\n   */\r\n  static format(date, format = 'YYYY-MM-DD HH:mm:ss') {\r\n    return date ? date.format(format) : null;\r\n  }\r\n\r\n  /**\r\n   * 根据逗号联合\r\n   * @param arr\r\n   * @returns {string}\r\n   */\r\n  static join(arr) {\r\n    return arr ? arr.join(',') : '';\r\n  }\r\n\r\n  /**\r\n   * 根据逗号分隔\r\n   * @param str\r\n   * @returns {string}\r\n   */\r\n  static split(str) {\r\n    return str ? String(str).split(',') : '';\r\n  }\r\n}\r\n"]}]}