{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\blackList\\blackwhitelist.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\blackList\\blackwhitelist.vue","mtime":1618367977420},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getDetail, add, update, remove, listcustomer } from \"@/api/contract/blackList/blackwhitelist\";\nimport website from '@/config/website';\nimport { getToken } from '@/util/auth';\nimport { mapGetters } from \"vuex\";\nimport importDialog from \"./importdialog\";\nvar DIC = [{\n  label: '全部',\n  value: \"\"\n}, {\n  label: '审批通过',\n  value: \"审批通过\"\n}, {\n  label: '审批不通过',\n  value: \"审批不通过\"\n}, {\n  label: '审批中',\n  value: \"审批中\"\n}];\nexport default {\n  components: {\n    importDialog: importDialog\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      showDialog: false,\n      form: {},\n      search: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      customer: [],\n      option: {\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: true,\n        selection: true,\n        dialogWidth: \"35%\",\n        menuPosition: \"center\",\n        column: [{\n          label: \"交易所\",\n          prop: \"exchange\",\n          order: 140,\n          rules: [{\n            required: true,\n            message: \"请输入交易所\",\n            trigger: \"blur\"\n          }, {\n            min: 1,\n            max: 50,\n            message: '交易所必填，限制50字以内',\n            trigger: 'blur'\n          }],\n          span: 24,\n          search: true,\n          searchOrder: 6\n        }, {\n          label: \"数据编码\",\n          prop: \"dataCode\",\n          order: 130,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入数据编码\",\n            trigger: \"blur\"\n          }, {\n            min: 1,\n            max: 50,\n            message: '数据编码必填，限制50字以内',\n            trigger: 'blur'\n          }],\n          search: true,\n          searchOrder: 5\n        }, {\n          label: \"类型\",\n          prop: \"type\",\n          order: 120,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请选择类型\",\n            trigger: \"blur\"\n          }],\n          type: 'select',\n          dicUrl: this.getDicValue(this.CONSTANT.BLACKLIST_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          search: true,\n          searchOrder: 1,\n          editDisabled: true\n        }, {\n          label: \"客户名称\",\n          prop: \"custName\",\n          order: 110,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入客户名称\",\n            trigger: \"blur\"\n          }, {\n            min: 1,\n            max: 50,\n            message: '客户名称必填，限制50字以内',\n            trigger: 'blur'\n          }],\n          search: true,\n          searchOrder: 3\n        }, {\n          label: \"客户编码\",\n          prop: \"custCode\",\n          order: 100,\n          span: 24,\n          search: true,\n          searchOrder: 3,\n          type: \"select\",\n          searchslot: true,\n          dicData: [],\n          props: {\n            label: \"custCode\",\n            value: \"custCode\"\n          },\n          change: function change(_ref) {\n            var value = _ref.value;\n\n            _this.custCodeList.forEach(function (item) {\n              if (item.custCode == value) {\n                _this.form.custId = item.id;\n                console.log(\"客户表id\", _this.form.custId);\n              }\n            });\n          }\n        }, {\n          label: \"备注\",\n          prop: \"remark\",\n          order: 90,\n          span: 24,\n          rules: [{\n            required: false,\n            message: \"请输入\",\n            trigger: \"blur\"\n          }, {\n            min: 0,\n            max: 100,\n            message: '备注非必要，限制100个字内',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"审批状态\",\n          prop: \"auditState\",\n          addDisplay: false,\n          editDisplay: false,\n          order: 20,\n          search: true,\n          searchOrder: 1,\n          type: \"select\",\n          dicData: DIC\n        }, {\n          label: \"创建人\",\n          prop: \"createUserName\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 80\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 70\n        }, {\n          label: \"最后更改人\",\n          prop: \"updateUserName\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 60\n        }, {\n          label: \"最后更改时间\",\n          prop: \"updateTime\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 50\n        }, {\n          label: \"审核人\",\n          prop: \"auditUser\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 40\n        }, {\n          label: \"审核时间\",\n          prop: \"auditTime\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 30\n        }, {\n          label: \"审核意见\",\n          prop: \"auditResult\",\n          addDisplay: false,\n          editDisplay: false,\n          hide: true,\n          order: 10\n        }, {\n          label: \"客户表id\",\n          prop: \"custId\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          hide: true,\n          order: 10\n        }]\n      },\n      data: [],\n      custCodeList: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.blackwhitelist_add, false),\n        viewBtn: this.vaildData(this.permission.blackwhitelist_view, false),\n        delBtn: this.vaildData(this.permission.blackwhitelist_delete, false),\n        editBtn: this.vaildData(this.permission.blackwhitelist_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  watch: {\n    'form.custName': function formCustName() {\n      var _this2 = this;\n\n      var column = this.findObject(this.option.column, \"custCode\");\n\n      if (this.form.custName != '' && this.form.custName != undefined) {\n        listcustomer(1, 20, {\n          custName: this.form.custName\n        }).then(function (res) {\n          _this2.custCodeList = res.data.data.records.length > 0 ? res.data.data.records : [_defineProperty({\n            custCode: \"\"\n          }, \"custCode\", \"无数据\")];\n          column.dicData = _this2.custCodeList;\n        });\n      }\n    }\n  },\n  methods: {\n    rowSave: function rowSave(row, done, loading) {\n      var _this3 = this;\n\n      add(row).then(function () {\n        done();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this4 = this;\n\n      update(row).then(function () {\n        done();\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    handleUpload: function handleUpload() {\n      this.showDialog = true;\n      this.$refs.importDialog.activeStep = 1;\n    },\n    closeImportDialog: function closeImportDialog() {\n      this.showDialog = false;\n    },\n    handleExport: function handleExport() {\n      var _this7 = this;\n\n      this.$confirm(\"是否导出黑白名单数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        var exchange = \"\",\n            dataCode = \"\",\n            type = \"\",\n            custName = \"\",\n            custCode = \"\",\n            auditState = \"\";\n\n        if (_this7.search.exchange) {\n          exchange = _this7.search.exchange;\n        }\n\n        if (_this7.search.dataCode) {\n          dataCode = _this7.search.dataCode;\n        }\n\n        if (_this7.search.type) {\n          type = _this7.search.type;\n        }\n\n        if (_this7.search.custName) {\n          custName = _this7.search.custName;\n        }\n\n        if (_this7.search.custCode) {\n          custCode = _this7.search.custCode;\n        }\n\n        if (_this7.search.auditState) {\n          auditState = _this7.search.auditState;\n        }\n\n        window.open(\"/api/cnfic-contract-manage/blackwhitelist/export-blackwhitelist?\".concat(website.tokenHeader, \"=\").concat(getToken(), \"&exchange=\").concat(exchange, \"&dataCode=\").concat(dataCode, \"&type=\").concat(type, \"&custName=\").concat(custName, \"&custCode=\").concat(custCode, \"&auditState=\").concat(auditState));\n      });\n    },\n    beforeClose: function beforeClose(done, type) {\n      this.custCodeList = [_defineProperty({\n        custCode: \"\"\n      }, \"custCode\", \"无数据\")];\n      var column = this.findObject(this.option.column, \"custCode\");\n      column.dicData = this.custCodeList;\n      this.$forceUpdate();\n      done();\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this8 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          done();\n          _this8.form = res.data.data;\n        }, function (error) {\n          window.console.log(error);\n\n          _this8.onLoad(_this8.page);\n        });\n      } else {\n        done();\n      }\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this9 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this9.page.total = data.total;\n        _this9.data = data.records;\n        _this9.loading = false;\n\n        _this9.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"sources":["blackwhitelist.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :search.sync=\"search\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-close=\"beforeClose\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.blackwhitelist_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"success\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-upload2\"\r\n                   @click=\"handleUpload\">导入\r\n        </el-button>\r\n        <el-button type=\"warning\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-download\"\r\n                   @click=\"handleExport\">导出\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"custCodeSearch\">\r\n        <el-input placeholder=\"请输入客户编码\" v-model=\"search.custCode\"></el-input>\r\n      </template>\r\n    </avue-crud>\r\n    <import-dialog ref=\"importDialog\" :showDialog=\"showDialog\" @close=\"closeImportDialog\"></import-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove, listcustomer} from \"@/api/contract/blackList/blackwhitelist\";\r\n  import website from '@/config/website';\r\n  import {getToken} from '@/util/auth';\r\n  import {mapGetters} from \"vuex\";\r\n  import importDialog from './importdialog'\r\n  const DIC=[{\r\n    label:'全部',\r\n    value:\"\"\r\n  },{\r\n    label:'审批通过',\r\n    value:\"审批通过\"\r\n  },{\r\n    label:'审批不通过',\r\n    value:\"审批不通过\"\r\n  },{\r\n    label:'审批中',\r\n    value:\"审批中\"\r\n  }];\r\n  export default {\r\n    components:{importDialog},\r\n    data() {\r\n      return {\r\n        showDialog:false,\r\n        form: {},\r\n        search:{},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        customer:[],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 210,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogWidth:\"35%\",\r\n          menuPosition:\"center\",\r\n          column: [\r\n            {\r\n              label: \"交易所\",\r\n              prop: \"exchange\",\r\n              order:140,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入交易所\",\r\n                trigger: \"blur\"\r\n              }, {\r\n                min: 1,\r\n                max: 50,\r\n                message: '交易所必填，限制50字以内',\r\n                trigger: 'blur'\r\n              }],\r\n              span:24,\r\n              search:true,\r\n              searchOrder:6\r\n            },\r\n            {\r\n              label: \"数据编码\",\r\n              prop: \"dataCode\",\r\n              order:130,\r\n              span:24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入数据编码\",\r\n                trigger: \"blur\"\r\n              }, {\r\n                min: 1,\r\n                max: 50,\r\n                message: '数据编码必填，限制50字以内',\r\n                trigger: 'blur'\r\n              }],\r\n              search:true,\r\n              searchOrder:5\r\n            },\r\n            {\r\n              label: \"类型\",\r\n              prop: \"type\",\r\n              order:120,\r\n              span:24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择类型\",\r\n                trigger: \"blur\"\r\n              }],\r\n              type: 'select',\r\n              dicUrl: this.getDicValue(this.CONSTANT.BLACKLIST_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              search:true,\r\n              searchOrder:1,\r\n              editDisabled:true\r\n            },\r\n            {\r\n              label: \"客户名称\",\r\n              prop: \"custName\",\r\n              order:110,\r\n              span:24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入客户名称\",\r\n                trigger: \"blur\"\r\n              },{\r\n                min: 1,\r\n                max: 50,\r\n                message: '客户名称必填，限制50字以内',\r\n                trigger: 'blur'\r\n               }],\r\n              search:true,\r\n              searchOrder:3,\r\n            },\r\n            {\r\n              label: \"客户编码\",\r\n              prop: \"custCode\",\r\n              order:100,\r\n              span:24,\r\n              search:true,\r\n              searchOrder:3,\r\n              type:\"select\",\r\n              searchslot:true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"custCode\",\r\n                value: \"custCode\"\r\n              },\r\n              change:({value})=>{\r\n                this.custCodeList.forEach(item=>{\r\n                  if(item.custCode==value){\r\n                     this.form.custId=item.id;\r\n                    console.log(\"客户表id\",this.form.custId);\r\n                  }\r\n                })\r\n              },\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              order:90,\r\n              span:24,\r\n              rules: [{\r\n                required: false,\r\n                message: \"请输入\",\r\n                trigger: \"blur\"\r\n              },{\r\n                min: 0,\r\n                max: 100,\r\n                message: '备注非必要，限制100个字内',\r\n                trigger: 'blur'\r\n              }],\r\n            },\r\n            {\r\n              label: \"审批状态\",\r\n              prop: \"auditState\",\r\n              addDisplay: false,\r\n              editDisplay:false,\r\n              order:20,\r\n              search:true,\r\n              searchOrder:1,\r\n              type:\"select\",\r\n              dicData:DIC\r\n\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:80,\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:70,\r\n            },\r\n            {\r\n              label: \"最后更改人\",\r\n              prop: \"updateUserName\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:60,\r\n            },\r\n            {\r\n              label: \"最后更改时间\",\r\n              prop: \"updateTime\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:50,\r\n            },\r\n            {\r\n              label: \"审核人\",\r\n              prop: \"auditUser\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:40,\r\n            },\r\n            {\r\n              label: \"审核时间\",\r\n              prop: \"auditTime\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:30,\r\n            },\r\n            {\r\n              label: \"审核意见\",\r\n              prop: \"auditResult\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:10,\r\n            },\r\n            {\r\n              label: \"客户表id\",\r\n              prop: \"custId\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              viewDisplay:false,\r\n              hide:true,\r\n              order:10,\r\n            },\r\n          ]\r\n        },\r\n        data: [],\r\n        custCodeList:[]\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.blackwhitelist_add, false),\r\n          viewBtn: this.vaildData(this.permission.blackwhitelist_view, false),\r\n          delBtn: this.vaildData(this.permission.blackwhitelist_delete, false),\r\n          editBtn: this.vaildData(this.permission.blackwhitelist_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    watch:{\r\n       'form.custName'() {\r\n          const column = this.findObject(this.option.column, \"custCode\");\r\n        if (this.form.custName!=''&&this.form.custName!=undefined) {\r\n          listcustomer(1, 20, {custName:this.form.custName}).then(res => {\r\n              this.custCodeList=res.data.data.records.length>0?res.data.data.records:[{custCode:\"\",custCode:\"无数据\"}];\r\n              column.dicData=this.custCodeList;\r\n            });\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      handleUpload(){\r\n        this.showDialog=true;\r\n        this.$refs.importDialog.activeStep=1;\r\n      },\r\n      closeImportDialog(){\r\n        this.showDialog=false;\r\n      },\r\n      handleExport(){\r\n        this.$confirm(\"是否导出黑白名单数据?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          let exchange = \"\", dataCode = \"\", type=\"\",custName=\"\",custCode=\"\",auditState=\"\";\r\n          if (this.search.exchange){\r\n            exchange = this.search.exchange;\r\n          }\r\n          if (this.search.dataCode){\r\n            dataCode = this.search.dataCode;\r\n          }\r\n          if (this.search.type){\r\n            type = this.search.type;\r\n          }\r\n          if (this.search.custName){\r\n            custName = this.search.custName;\r\n          }\r\n          if (this.search.custCode){\r\n            custCode = this.search.custCode;\r\n          }\r\n          if (this.search.auditState){\r\n            auditState = this.search.auditState;\r\n          }\r\n          window.open(`/api/cnfic-contract-manage/blackwhitelist/export-blackwhitelist?${website.tokenHeader}=${getToken()}&exchange=${exchange}&dataCode=${dataCode}&type=${type}&custName=${custName}&custCode=${custCode}&auditState=${auditState}`);\r\n      });\r\n      },\r\n      beforeClose(done, type){\r\n        this.custCodeList=[{custCode:\"\",custCode:\"无数据\"}];\r\n        const column = this.findObject(this.option.column, \"custCode\");\r\n        column.dicData=this.custCodeList;\r\n        this.$forceUpdate();\r\n        done();\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            done();\r\n          this.form = res.data.data;\r\n        }, error => {\r\n            window.console.log(error);\r\n            this.onLoad(this.page);\r\n          });\r\n        }else{\r\n          done();\r\n        }\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage){\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize){\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\r\n"],"sourceRoot":"src/views/contract/blackList"}]}