{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\user\\mechanismUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\user\\mechanismUser.vue","mtime":1618541026433},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getDetail, add, update, remove, getContractList } from \"@/api/contract/user/orguser\";\nimport { getCustomerList } from \"@/api/contract/customer/orgcustomer\";\nimport { getDeptList } from \"@/api/system/dept\";\nimport { mapGetters } from \"vuex\";\nimport detailOrgUserDialog from \"./detailOrgUserDialog\";\nimport addEmailOrPhone from \"./addEmailOrPhone\";\nimport customerDialog from \"../customer/customerDialog\";\nimport uploadUserDialog from \"./uploadUserDialog\";\nimport exportUserDialog from \"./exportUserDialog\";\nimport addAccountUser from \"./addAccountUser\";\nexport default {\n  components: {\n    addAccountUser: addAccountUser,\n    exportUserDialog: exportUserDialog,\n    uploadUserDialog: uploadUserDialog,\n    customerDialog: customerDialog,\n    addEmailOrPhone: addEmailOrPhone,\n    detailOrgUserDialog: detailOrgUserDialog\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    //初始化机构树\n    getDeptList('000000').then(function (res) {\n      _this.depts = res.data.data;\n    });\n  },\n  data: function data() {\n    var _this2 = this;\n\n    return {\n      type: '',\n      depts: [],\n      custId: null,\n      contracts: [],\n      createTime: [],\n      addEmailOrPhoneDialogFlag: false,\n      exportDialogFlag: false,\n      uploadUserDialogFlag: false,\n      addAccountUserFlag: false,\n      customerDialogFlag: false,\n      showDetailFlag: false,\n      updateTime: [],\n      dicCreateAccountData: [{\n        label: '全部',\n        value: null\n      }, {\n        label: '否',\n        value: 0\n      }, {\n        label: '是',\n        value: 1\n      }],\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        index: false,\n        searchLabelWidth: 100,\n        calcHeight: 210,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        viewBtn: false,\n        saveBtn: false,\n        addBtn: false,\n        updateBtn: false,\n        cancelBtn: false,\n        menuAlign: 'center',\n        align: 'center',\n        selection: true,\n        searchShow: true,\n        column: [{\n          label: \"主键id 雪花算法产生\",\n          prop: \"id\",\n          hide: true,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"用户编码\",\n          prop: \"userNo\",\n          search: true,\n          searchOrder: 7,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          slot: true\n        }, {\n          label: \"姓名\",\n          prop: \"userName\",\n          search: true,\n          searchOrder: 10,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            message: \"请输入姓名\",\n            trigger: \"blur\"\n          }, {\n            min: 0,\n            max: 5,\n            message: '最长限5个字',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"性别\",\n          prop: \"userSex\",\n          hide: true,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            message: \"请选择性别\",\n            trigger: \"blur\"\n          }],\n          type: \"radio\",\n          dicUrl: this.getDicValue(this.CONSTANT.SEX),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }, {\n          label: '客户名称',\n          prop: 'addCustName',\n          formslot: true,\n          hide: true,\n          rules: [{\n            required: true,\n            message: \"\\u5BA2\\u6237\\u540D\\u79F0\\u4E0D\\u80FD\\u4E3A\\u7A7A\",\n            trigger: 'blur'\n          }]\n        }, {\n          label: '部门',\n          prop: \"custOrg\",\n          hide: true,\n          rules: [{\n            min: 0,\n            max: 10,\n            message: '最长限10个字',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"邮箱\",\n          prop: \"userEmail\",\n          search: true,\n          searchOrder: 9,\n          formslot: true,\n          rules: [{\n            min: 0,\n            max: 100,\n            message: '最长限100个字',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"手机号\",\n          prop: \"userPhone\",\n          search: true,\n          searchOrder: 8,\n          formslot: true\n        }, {\n          label: \"客户编码\",\n          prop: \"custCode\",\n          search: true,\n          searchOrder: 6,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"客户名称\",\n          prop: \"custName\",\n          search: true,\n          searchOrder: 5,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          rules: [{\n            required: true,\n            message: \"请选择客户名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"用户类型\",\n          prop: \"userType\",\n          search: true,\n          searchOrder: 4,\n          viewDisplay: false,\n          type: \"select\",\n          searchMultiple: true,\n          dicUrl: this.getDicValue(this.CONSTANT.USER_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }, {\n          label: \"用户描述\",\n          prop: \"userDesc\",\n          type: \"textarea\",\n          hide: true,\n          span: 24,\n          rules: [{\n            min: 0,\n            max: 100,\n            message: '最长限100个字',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"固定电话\",\n          prop: \"userTele\",\n          hide: true,\n          rules: [{\n            min: 0,\n            max: 20,\n            message: '最长限20个字',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"传真\",\n          prop: \"userFax\",\n          hide: true,\n          rules: [{\n            min: 0,\n            max: 20,\n            message: '最长限20个字',\n            trigger: 'blur'\n          }]\n        }, {\n          label: \"客户经理\",\n          prop: \"custManager\",\n          hide: true,\n          type: \"select\",\n          dicData: [],\n          props: {\n            label: \"custManager\",\n            value: \"id\"\n          },\n          change: function change(_ref) {\n            var value = _ref.value,\n                column = _ref.column;\n\n            if (!value) {\n              _this2.form.custOrgName = null;\n            }\n\n            if (column.dicData) {\n              var contract = column.dicData.find(function (item) {\n                return item.id == value;\n              });\n\n              if (contract) {\n                _this2.depts.find(function (dic) {\n                  if (dic.id == contract.custOrg) {\n                    _this2.form.custOrgName = dic.deptName;\n                  }\n                });\n              }\n\n              ;\n            }\n          }\n        }, {\n          label: \"所属机构\",\n          prop: \"custOrgName\",\n          hide: true,\n          detail: true\n        }, {\n          label: \"是否生成账号\",\n          prop: \"isCreateAccount\",\n          labelWidth: 100,\n          type: 'select',\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          dicData: [{\n            label: '否',\n            value: 0\n          }, {\n            label: '是',\n            value: 1\n          }]\n        }, {\n          label: '是否生成账号',\n          prop: 'isCreateAccountQuery',\n          searchOrder: 3,\n          searchslot: true,\n          search: true,\n          hide: true,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\",\n          searchslot: true,\n          type: 'date',\n          format: 'yyyy-MM-dd',\n          valueFormat: 'yyyy-MM-dd',\n          search: true,\n          span: 12,\n          searchOrder: 2,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }, {\n          label: \"最后修改时间\",\n          prop: \"updateTime\",\n          searchOrder: 1,\n          searchslot: true,\n          type: 'date',\n          format: 'yyyy-MM-dd',\n          valueFormat: 'yyyy-MM-dd',\n          search: true,\n          span: 12,\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.orguser_add, false),\n        viewBtn: this.vaildData(this.permission.orguser_view, false),\n        delBtn: this.vaildData(this.permission.orguser_delete, false),\n        editBtn: this.vaildData(this.permission.orguser_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, done, loading) {\n      var _this3 = this;\n\n      add(row).then(function () {\n        done();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this4 = this;\n\n      update(row).then(function () {\n        done();\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this6 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this6.ids);\n      }).then(function () {\n        _this6.onLoad(_this6.page);\n\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this7 = this;\n\n      this.type = type;\n\n      var _that = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this7.form = res.data.data; //添加编辑时展示的客户名称\n\n          _this7.form.addCustName = _this7.form.custName; // this.detailManagerName(this.form.custManager);\n          //加载客户经理下拉树\n\n          getContractList(_that.form.custId).then(function (res) {\n            _this7.option.column.find(function (item) {\n              if (item.prop == 'custManager') {\n                var manager = res.data.data;\n                item.dicData = manager; //加载机构名称\n\n                if (manager) {\n                  var contract = manager.find(function (item) {\n                    return item.id == _that.form.custManager;\n                  });\n\n                  if (contract) {\n                    _this7.depts.find(function (dic) {\n                      if (dic.id == contract.custOrg) {\n                        _that.form.custOrgName = dic.deptName;\n                      }\n                    });\n                  }\n\n                  ;\n                }\n              }\n            });\n          });\n        });\n        console.log(_that.form);\n      } else {\n        this.form.userPhone = null;\n        this.form.userEmail = null;\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.createTime = [];\n      this.updateTime = [];\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n\n      if (params.userType) {\n        params.userTypes = params.userType;\n        params.userType = null;\n      }\n\n      if (this.form.isCreateAccount != null) {\n        params.isCreateAccount = this.form.isCreateAccount;\n      }\n\n      if (this.updateTime) {\n        this.query.updateTimeStartTime = this.updateTime[0];\n        this.query.updateTimeEndTime = this.updateTime[1];\n      }\n\n      if (this.createTime) {\n        this.query.createStartTime = this.createTime[0];\n        this.query.createEndTime = this.createTime[1];\n      }\n\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this8 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this8.page.total = data.total;\n        _this8.data = data.records;\n        _this8.loading = false;\n\n        _this8.selectionClear();\n      });\n    },\n    detailDialog: function detailDialog(row) {\n      this.showDetailFlag = true;\n      this.$refs.detailOrgUserDialog.initData(row.id);\n    },\n    addPhone: function addPhone(field, label) {\n      this.$refs.addEmailOrPhone.openType({\n        'field': field,\n        'label': label,\n        'value': this.form[field]\n      });\n      this.addEmailOrPhoneDialogFlag = true;\n    },\n    cancelEmailOrPhoneDialog: function cancelEmailOrPhoneDialog() {\n      this.addEmailOrPhoneDialogFlag = false;\n    },\n    acceptEmailAndPhone: function acceptEmailAndPhone(obj) {\n      this.form[obj.field] = obj.arrValue;\n    },\n    cancelDetail: function cancelDetail() {\n      this.showDetailFlag = false;\n    },\n    //客户弹窗\n    addSuperUnit: function addSuperUnit() {\n      this.customerDialogFlag = true;\n    },\n    cancelCustomerDialog: function cancelCustomerDialog() {\n      this.customerDialogFlag = false;\n    },\n    //接受上级单位\n    acceptSuperUnit: function acceptSuperUnit(row) {\n      this.form.addCustName = row.custName;\n      this.form.custId = row.id;\n      this.form.custManager = \"\";\n      this.form.custOrgName = \"\";\n      this.detailManagerName(row.id);\n    },\n    restMange: function restMange() {\n      this.form.custManager = \"\";\n    },\n    detailManagerName: function detailManagerName(custId) {\n      var _this9 = this;\n\n      getContractList(custId).then(function (res) {\n        //加载联系人下拉\n        _this9.option.column.find(function (item) {\n          if (item.dicData) {\n            item.dicData = [];\n            item.dicData = res.data.data;\n\n            if (res.data.data.length == 1) {\n              _this9.form.custManager = res.data.data[0].id;\n            }\n          }\n        });\n      });\n    },\n    handleUpload: function handleUpload() {\n      this.uploadUserDialogFlag = true;\n    },\n    cancelUploadUserDialog: function cancelUploadUserDialog() {\n      this.uploadUserDialogFlag = false;\n    },\n    handleExport: function handleExport() {\n      this.exportDialogFlag = true;\n      this.$refs.exportUserDialog.accept(this.query);\n    },\n    cancelExportDialog: function cancelExportDialog() {\n      this.exportDialogFlag = false;\n    },\n    addAccount: function addAccount() {\n      this.addAccountUserFlag = true;\n    },\n    cancelAddAccountUserDialog: function cancelAddAccountUserDialog() {\n      this.addAccountUserFlag = false;\n    },\n    handleAdd: function handleAdd() {\n      this.$refs.crud.rowAdd();\n    },\n    handleEdit: function handleEdit(row, index) {\n      this.$refs.crud.rowEdit(row, index);\n    }\n  }\n};",{"version":3,"sources":["mechanismUser.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n\r\n        <el-button type=\"primary\" size=\"small\"\r\n                   icon=\"el-icon-plus\" @click=\"handleAdd\"\r\n                    >新增</el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.orguser_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"success\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-upload2\"\r\n                   @click=\"handleUpload\">导入\r\n        </el-button>\r\n        <el-button type=\"warning\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-download\"\r\n                   @click=\"handleExport\">导出\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menuForm\">\r\n        <el-button type=\"primary\" icon=\"el-icon-s-check\" size=\"small\"   @click=\"addAccount \">生成账号</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-check\" size=\"small\"  v-if=\"type=='add'\" @click=\"$refs.crud.rowSave()\">保存</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-check\" size=\"small\"  v-if=\"type=='edit'\" @click=\"$refs.crud.rowUpdate()\">修改</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-close\" size=\"small\"  @click=\"$refs.crud.closeDialog()\">取消</el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"userNo\">\r\n        <el-button\r\n          type=\"text\"\r\n          size=\"mini\"\r\n          @click=\"detailDialog(row)\">\r\n          {{row.userNo}}\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"isCreateAccountQuerySearch\">\r\n        <el-radio-group v-model=\"form.isCreateAccount\">\r\n          <el-radio v-for=\"item in dicCreateAccountData \" :key=\"item.value\"\r\n                    :value=\"item.value\"\r\n                    :label=\"item.value\"\r\n          >{{item.label}}\r\n          </el-radio>\r\n        </el-radio-group>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"createTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"createTime\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"updateTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"updateTime\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"userPhoneForm\">\r\n        <div>\r\n          <el-input  v-model=\"form.userPhone\" disabled placeholder=\"请添加手机号\" style=\"width: 100%;\">\r\n            <el-button slot=\"append\" icon=\"el-icon-plus\" size=\"mini\" @click=\"addPhone('userPhone','手机号')\" style=\"width: 10%;\">请添加手机号</el-button>\r\n          </el-input>\r\n        </div>\r\n      </template>\r\n\r\n      <template slot-scope=\"\" slot=\"addCustNameForm\">\r\n        <div>\r\n          <el-input  v-model=\"form.addCustName\"   disabled placeholder=\"请选择客户\"   style=\"width: 100%;\">\r\n            <el-button slot=\"append\" icon=\"el-icon-plus\" size=\"mini\" @click=\"addSuperUnit\" style=\"width: 10%;\">请选择客户</el-button>\r\n          </el-input>\r\n        </div>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"userEmailForm\">\r\n        <div>\r\n          <el-input  v-model=\"form.userEmail\" disabled placeholder=\"请添加邮件\" style=\"width: 100%;\">\r\n            <el-button  slot=\"append\" icon=\"el-icon-plus\" size=\"mini\" @click=\"addPhone('userEmail','邮件')\" style=\"width: 10%;\">请添加邮件</el-button>\r\n          </el-input>\r\n\r\n        </div>\r\n      </template>\r\n    </avue-crud>\r\n    <add-email-or-phone ref=\"addEmailOrPhone\" :emailOrPhoneData=\"emailOrPhoneData\" :addEmailOrPhoneDialogFlag=\"addEmailOrPhoneDialogFlag\"  @cancelEmailOrPhoneDialog=\"cancelEmailOrPhoneDialog\" @accept=\"acceptEmailAndPhone\" ></add-email-or-phone>\r\n    <detail-org-user-dialog ref=\"detailOrgUserDialog\"  :showDetailFlag=\"showDetailFlag\" @cancel=\"cancelDetail\" ></detail-org-user-dialog>\r\n    <customer-dialog ref=\"customerDialog\" :customerDialogFlag=\"customerDialogFlag\" @acceptSuperUnit=\"acceptSuperUnit\" @cancelCustomerDialog=\"cancelCustomerDialog\" ></customer-dialog>\r\n    <upload-user-dialog  ref=\"uploadUserDialog\" :uploadUserDialogFlag=\"uploadUserDialogFlag\" @cancelUploadUserDialog=\"cancelUploadUserDialog\"></upload-user-dialog>\r\n    <export-user-dialog ref=\"exportUserDialog\" :exportDialogFlag=\"exportDialogFlag\" @cancel=\"cancelExportDialog\"></export-user-dialog>\r\n    <add-account-user ref=\"addAccountUser\" :addAccountUserFlag=\"addAccountUserFlag\" @cancelDialog=\"cancelAddAccountUserDialog\"></add-account-user>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove, getContractList} from \"@/api/contract/user/orguser\";\r\n  import {getCustomerList} from \"@/api/contract/customer/orgcustomer\";\r\n  import {getDeptList} from \"@/api/system/dept\";\r\n  import {mapGetters} from \"vuex\";\r\n  import detailOrgUserDialog from \"./detailOrgUserDialog\";\r\n  import addEmailOrPhone from \"./addEmailOrPhone\";\r\n  import customerDialog from \"../customer/customerDialog\";\r\n  import uploadUserDialog from \"./uploadUserDialog\";\r\n  import exportUserDialog from \"./exportUserDialog\";\r\n  import addAccountUser from \"./addAccountUser\";\r\n  export default {\r\n    components: {\r\n      addAccountUser,\r\n      exportUserDialog,\r\n      uploadUserDialog,\r\n      customerDialog,\r\n      addEmailOrPhone,detailOrgUserDialog\r\n    },\r\n    mounted(){\r\n      //初始化机构树\r\n      getDeptList('000000').then(res => {\r\n      this.depts=res.data.data;\r\n  });\r\n    },\r\n    data() {\r\n      return {\r\n        type:'',\r\n        depts:[],\r\n        custId: null,\r\n        contracts: [],\r\n        createTime: [],\r\n        addEmailOrPhoneDialogFlag:false,\r\n        exportDialogFlag:false,\r\n        uploadUserDialogFlag:false,\r\n        addAccountUserFlag:false,\r\n        customerDialogFlag:false,\r\n        showDetailFlag:false,\r\n        updateTime: [],\r\n        dicCreateAccountData: [{\r\n          label: '全部',\r\n          value: null\r\n        }, {\r\n          label: '否',\r\n          value: 0\r\n        }, {\r\n          label: '是',\r\n          value: 1\r\n        }],\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          index: false,\r\n          searchLabelWidth: 100,\r\n          calcHeight: 210,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          border: true,\r\n          viewBtn: false,\r\n          saveBtn:false,\r\n          addBtn:false,\r\n          updateBtn:false,\r\n          cancelBtn:false,\r\n          menuAlign:'center',\r\n          align:'center',\r\n          selection: true,\r\n          searchShow: true,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"用户编码\",\r\n              prop: \"userNo\",\r\n              search: true,\r\n              searchOrder: 7,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              slot:true\r\n            },\r\n            {\r\n              label: \"姓名\",\r\n              prop: \"userName\",\r\n              search: true,\r\n              searchOrder: 10,\r\n              viewDisplay: false,\r\n              rules: [{required: true,message: \"请输入姓名\",trigger: \"blur\"},\r\n                { min: 0, max: 5, message: '最长限5个字', trigger: 'blur' }],\r\n            },\r\n            {\r\n              label: \"性别\",\r\n              prop: \"userSex\",\r\n              hide: true,\r\n              viewDisplay: false,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择性别\",\r\n                trigger: \"blur\"\r\n              }],\r\n              type: \"radio\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.SEX),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n            },\r\n            {\r\n              label: '客户名称',\r\n              prop: 'addCustName',\r\n              formslot:true,\r\n              hide: true,\r\n              rules:[{\r\n                required: true, message:`客户名称不能为空`, trigger: 'blur'\r\n              }]\r\n\r\n            },\r\n            {\r\n              label: '部门',\r\n              prop: \"custOrg\",\r\n              hide: true,\r\n              rules: [{ min: 0, max: 10, message: '最长限10个字', trigger: 'blur' }],\r\n            },\r\n            {\r\n              label: \"邮箱\",\r\n              prop: \"userEmail\",\r\n              search: true,\r\n              searchOrder: 9,\r\n              formslot:true,\r\n              rules:[{ min: 0, max: 100, message: '最长限100个字', trigger: 'blur' }],\r\n\r\n\r\n            },\r\n            {\r\n              label: \"手机号\",\r\n              prop: \"userPhone\",\r\n              search: true,\r\n              searchOrder: 8,\r\n              formslot:true,\r\n\r\n            },\r\n            {\r\n              label: \"客户编码\",\r\n              prop: \"custCode\",\r\n              search: true,\r\n              searchOrder: 6,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"客户名称\",\r\n              prop: \"custName\",\r\n              search: true,\r\n              searchOrder: 5,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              rules:[\r\n                {required: true,message: \"请选择客户名称\",trigger: \"blur\"}\r\n              ]\r\n            },\r\n            {\r\n              label: \"用户类型\",\r\n              prop: \"userType\",\r\n              search: true,\r\n              searchOrder: 4,\r\n              viewDisplay: false,\r\n              type: \"select\",\r\n              searchMultiple: true,\r\n              dicUrl: this.getDicValue(this.CONSTANT.USER_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n            },\r\n            {\r\n              label: \"用户描述\",\r\n              prop: \"userDesc\",\r\n              type: \"textarea\",\r\n              hide: true,\r\n              span: 24,\r\n              rules:[{ min: 0, max: 100, message: '最长限100个字', trigger: 'blur' }],\r\n            },\r\n            {\r\n              label: \"固定电话\",\r\n              prop: \"userTele\",\r\n              hide: true,\r\n              rules:[{ min: 0, max: 20, message: '最长限20个字', trigger: 'blur' }],\r\n\r\n            },\r\n            {\r\n              label: \"传真\",\r\n              prop: \"userFax\",\r\n              hide: true,\r\n              rules:[{ min: 0, max: 20, message: '最长限20个字', trigger: 'blur' }],\r\n\r\n            },\r\n            {\r\n              label: \"客户经理\",\r\n              prop: \"custManager\",\r\n              hide: true,\r\n              type: \"select\",\r\n              dicData: [],\r\n              props: {\r\n                label: \"custManager\",\r\n                value: \"id\"\r\n              },\r\n              change: ({value,column}) => {\r\n                if (!value){\r\n                  this.form.custOrgName=null;\r\n                }\r\n                if (column.dicData){\r\n                  var contract=column.dicData.find(item=>{\r\n                    return item.id==value;\r\n                  });\r\n                  if (contract){\r\n                    this.depts.find(dic=>{\r\n                      if (dic.id==contract.custOrg){\r\n                        this.form.custOrgName=dic.deptName;\r\n                      }\r\n                    })\r\n                  } ;\r\n                }\r\n\r\n              },\r\n\r\n            },\r\n            {\r\n              label: \"所属机构\",\r\n              prop: \"custOrgName\",\r\n              hide: true,\r\n              detail:true\r\n            },\r\n            {\r\n              label: \"是否生成账号\",\r\n              prop: \"isCreateAccount\",\r\n              labelWidth: 100,\r\n              type: 'select',\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              dicData: [{\r\n                label: '否',\r\n                value: 0\r\n              }, {\r\n                label: '是',\r\n                value: 1\r\n              }],\r\n            },\r\n            {\r\n              label: '是否生成账号',\r\n              prop: 'isCreateAccountQuery',\r\n              searchOrder: 3,\r\n              searchslot: true,\r\n              search: true,\r\n              hide: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              searchslot: true,\r\n              type: 'date',\r\n              format: 'yyyy-MM-dd',\r\n              valueFormat: 'yyyy-MM-dd',\r\n              search: true,\r\n              span: 12,\r\n              searchOrder: 2,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n            }, {\r\n              label: \"最后修改时间\",\r\n              prop: \"updateTime\",\r\n              searchOrder: 1,\r\n              searchslot: true,\r\n              type: 'date',\r\n              format: 'yyyy-MM-dd',\r\n              valueFormat: 'yyyy-MM-dd',\r\n              search: true,\r\n              span: 12,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n            }\r\n          ],\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.orguser_add, false),\r\n          viewBtn: this.vaildData(this.permission.orguser_view, false),\r\n          delBtn: this.vaildData(this.permission.orguser_delete, false),\r\n          editBtn: this.vaildData(this.permission.orguser_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        this.type=type;\r\n        var _that=this;\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n            //添加编辑时展示的客户名称\r\n            this.form.addCustName=this.form.custName;\r\n            // this.detailManagerName(this.form.custManager);\r\n            //加载客户经理下拉树\r\n            getContractList(_that.form.custId).then(res => {\r\n              this.option.column.find(item=>{\r\n                if (item.prop=='custManager'){\r\n                  var manager = res.data.data;\r\n                  item.dicData=manager;\r\n                  //加载机构名称\r\n                  if (manager){\r\n                    var contract=manager.find(item=>{\r\n                      return item.id==_that.form.custManager;\r\n                    });\r\n                    if (contract){\r\n                      this.depts.find(dic=>{\r\n                        if (dic.id==contract.custOrg){\r\n                          _that.form.custOrgName=dic.deptName;\r\n                        }\r\n                      })\r\n                    } ;\r\n                  }\r\n                }\r\n              })\r\n            });\r\n          });\r\n\r\n          console.log(_that.form)\r\n\r\n        }else {\r\n          this.form.userPhone=null;\r\n          this.form.userEmail=null;\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.createTime=[];\r\n        this.updateTime=[];\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        if (params.userType) {\r\n          params.userTypes = params.userType;\r\n          params.userType = null;\r\n        }\r\n        if (this.form.isCreateAccount != null) {\r\n          params.isCreateAccount = this.form.isCreateAccount;\r\n        }\r\n        if (this.updateTime) {\r\n          this.query.updateTimeStartTime = this.updateTime[0];\r\n          this.query.updateTimeEndTime = this.updateTime[1];\r\n        }\r\n        if (this.createTime) {\r\n          this.query.createStartTime = this.createTime[0];\r\n          this.query.createEndTime = this.createTime[1];\r\n        }\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n\r\n      },\r\n      detailDialog(row){\r\n        this.showDetailFlag=true;\r\n        this.$refs.detailOrgUserDialog.initData(row.id);\r\n      },\r\n      addPhone(field,label){\r\n\r\n        this.$refs.addEmailOrPhone.openType({\r\n          'field':field,\r\n          'label':label,\r\n          'value':this.form[field]\r\n        })\r\n        this.addEmailOrPhoneDialogFlag=true;\r\n      },\r\n      cancelEmailOrPhoneDialog(){\r\n        this.addEmailOrPhoneDialogFlag=false;\r\n      },\r\n      acceptEmailAndPhone(obj){\r\n        this.form[obj.field]=obj.arrValue;\r\n      },\r\n      cancelDetail(){\r\n        this.showDetailFlag=false;\r\n      },\r\n      //客户弹窗\r\n      addSuperUnit() {\r\n        this.customerDialogFlag = true\r\n      },\r\n      cancelCustomerDialog(){\r\n        this.customerDialogFlag = false\r\n      },\r\n      //接受上级单位\r\n      acceptSuperUnit(row) {\r\n        this.form.addCustName = row.custName;\r\n        this.form.custId = row.id;\r\n        this.form.custManager=\"\";\r\n        this.form.custOrgName=\"\";\r\n        this.detailManagerName(row.id)\r\n      },\r\n      restMange(){\r\n        this.form.custManager=\"\";\r\n      },\r\n      detailManagerName(custId){\r\n        getContractList(custId).then(res => {\r\n          //加载联系人下拉\r\n          this.option.column.find(item=>{\r\n            if (item.dicData){\r\n              item.dicData=[];\r\n              item.dicData=res.data.data;\r\n              if (res.data.data.length==1){\r\n                this.form.custManager=res.data.data[0].id\r\n\r\n              }\r\n            }\r\n          })\r\n        })\r\n      },\r\n      handleUpload(){\r\n        this.uploadUserDialogFlag=true;\r\n      },\r\n      cancelUploadUserDialog(){\r\n        this.uploadUserDialogFlag=false;\r\n      },\r\n      handleExport(){\r\n       this.exportDialogFlag=true;\r\n        this.$refs.exportUserDialog.accept(this.query);\r\n      },\r\n      cancelExportDialog(){\r\n        this.exportDialogFlag=false;\r\n      },\r\n      addAccount(){\r\n        this.addAccountUserFlag=true;\r\n      },\r\n      cancelAddAccountUserDialog(){\r\n        this.addAccountUserFlag=false;\r\n      },\r\n      handleAdd(){\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      handleEdit (row, index) {\r\n        this.$refs.crud.rowEdit(row, index);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/contract/user"}]}