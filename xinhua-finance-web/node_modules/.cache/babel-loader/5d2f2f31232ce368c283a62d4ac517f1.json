{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\category.vue","mtime":1618367977446},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { add, getDetail, getList, remove, update } from \"@/api/contract/product/category\";\nimport { mapGetters } from \"vuex\";\nimport categoryDialog from \"./category-dialog\";\nimport categoryProperty from \"./category-property\";\nexport default {\n  components: {\n    categoryDialog: categoryDialog,\n    categoryProperty: categoryProperty\n  },\n  data: function data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      productItemBox: false,\n      showConfige: false,\n      id: {},\n      title: \"\",\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        dialogWidth: \"40%\",\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        align: 'center',\n        menuAlign: 'center',\n        tip: false,\n        border: true,\n        index: false,\n        indexLabel: '序号',\n        viewBtn: false,\n        emptyBtn: false,\n        selection: true,\n        refreshBtn: false,\n        columnBtn: false,\n        searchShowBtn: false,\n        column: [{\n          label: \"产品类型编码\",\n          labelWidth: \"20%\",\n          searchLabelWidth: 100,\n          prop: \"cateCode\",\n          maxlength: 20,\n          minlength: 1,\n          search: true,\n          searchOrder: 2,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入产品类型编码\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"产品类型名称\",\n          labelWidth: \"20%\",\n          searchLabelWidth: 100,\n          prop: \"cateName\",\n          maxlength: 20,\n          minlength: 1,\n          search: true,\n          order: 1,\n          searchOrder: 1,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入产品类型名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"产品项\",\n          prop: \"productItemCount\",\n          display: false,\n          formatter: function formatter(row, value) {\n            if (value > 0) {\n              return \"<div style='color:blue;cursor: pointer;'>\" + value + \"</div>\";\n            } else {\n              return 0;\n            }\n          }\n        }, {\n          label: \"创建人\",\n          prop: \"createUserName\",\n          span: 24,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\",\n          span: 24,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"更新人\",\n          prop: \"updateUserName\",\n          span: 24,\n          hide: false,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"更新时间\",\n          prop: \"updateTime\",\n          span: 24,\n          hide: false,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"备注\",\n          labelWidth: \"20%\",\n          prop: \"remark\",\n          maxlength: 100,\n          minlength: 1,\n          span: 24,\n          rules: [{\n            required: false,\n            message: \"请输入备注\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.category_add, false),\n        viewBtn: this.vaildData(this.permission.category_view, false),\n        delBtn: this.vaildData(this.permission.category_delete, false),\n        editBtn: this.vaildData(this.permission.category_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    rowSave: function rowSave(row, done, loading) {\n      var _this = this;\n\n      add(row).then(function () {\n        done();\n\n        _this.onLoad(_this.page);\n\n        _this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this2 = this;\n\n      update(row).then(function () {\n        done();\n\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n\n      if (row.productItemCount > 0) {\n        this.$message.warning(\"已经关联产品，不能删除\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      for (var i = 0; i < this.selectionList.length; i++) {\n        if (this.selectionList[i].productItemCount > 0) {\n          this.$message.warning(\"已经关联产品，不能删除\");\n          return;\n        }\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this5 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this5.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this6 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this6.page.total = data.total;\n        _this6.data = data.records;\n        _this6.loading = false;\n\n        _this6.selectionClear();\n      });\n    },\n    categoryConfige: function categoryConfige(row) {\n      // console.log(row.id);\n      this.id = row.id;\n      this.title = row.cateName;\n      this.showConfige = true; // this.$router.push({path: '/contract/product/category-property', query: {cateId: row.id}});\n      // this.$route.query.cateId;\n      // this.$message({\n      //   type: \"success\",\n      //   message: \"操作成功!\"\n      // });\n    },\n    back: function back() {\n      this.showConfige = false;\n    },\n    closeDialog: function closeDialog(val) {\n      this.productItemBox = val;\n      this.$emit(\"close\", false);\n    },\n    productItemList: function productItemList(row, column) {\n      if (column.property == \"productItemCount\" && row.productItemCount > 0) {\n        this.id = row.id;\n        this.$refs.refProductItemBox.searchById(this.id);\n        this.productItemBox = true;\n      }\n    }\n  }\n};",{"version":3,"sources":["category.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAA,GAAA,EAAA,SAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,QAAA,iCAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,cAAA;AACA,OAAA,gBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,cAAA,EAAA,cAAA;AAAA,IAAA,gBAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,cAAA,EAAA,KAJA;AAKA,MAAA,WAAA,EAAA,KALA;AAMA,MAAA,EAAA,EAAA,EANA;AAOA,MAAA,KAAA,EAAA,EAPA;AAQA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OARA;AAaA,MAAA,aAAA,EAAA,EAbA;AAcA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,WAAA,EAAA,KAFA;AAGA,QAAA,UAAA,EAAA,GAHA;AAIA,QAAA,UAAA,EAAA,IAJA;AAKA,QAAA,cAAA,EAAA,CALA;AAMA,QAAA,KAAA,EAAA,QANA;AAOA,QAAA,SAAA,EAAA,QAPA;AAQA,QAAA,GAAA,EAAA,KARA;AASA,QAAA,MAAA,EAAA,IATA;AAUA,QAAA,KAAA,EAAA,KAVA;AAWA,QAAA,UAAA,EAAA,IAXA;AAYA,QAAA,OAAA,EAAA,KAZA;AAaA,QAAA,QAAA,EAAA,KAbA;AAcA,QAAA,SAAA,EAAA,IAdA;AAeA,QAAA,UAAA,EAAA,KAfA;AAgBA,QAAA,SAAA,EAAA,KAhBA;AAiBA,QAAA,aAAA,EAAA,KAjBA;AAkBA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,UAAA,EAAA,KAFA;AAGA,UAAA,gBAAA,EAAA,GAHA;AAIA,UAAA,IAAA,EAAA,UAJA;AAKA,UAAA,SAAA,EAAA,EALA;AAMA,UAAA,SAAA,EAAA,CANA;AAOA,UAAA,MAAA,EAAA,IAPA;AAQA,UAAA,WAAA,EAAA,CARA;AASA,UAAA,IAAA,EAAA,EATA;AAUA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,WAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAVA,SADA,EAiBA;AACA,UAAA,KAAA,EAAA,QADA;AAEA,UAAA,UAAA,EAAA,KAFA;AAGA,UAAA,gBAAA,EAAA,GAHA;AAIA,UAAA,IAAA,EAAA,UAJA;AAKA,UAAA,SAAA,EAAA,EALA;AAMA,UAAA,SAAA,EAAA,CANA;AAOA,UAAA,MAAA,EAAA,IAPA;AAQA,UAAA,KAAA,EAAA,CARA;AASA,UAAA,WAAA,EAAA,CATA;AAUA,UAAA,IAAA,EAAA,EAVA;AAWA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,WAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAXA,SAjBA,EAkCA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,kBAFA;AAGA,UAAA,OAAA,EAAA,KAHA;AAIA,UAAA,SAAA,EAAA,mBAAA,GAAA,EAAA,KAAA,EAAA;AACA,gBAAA,KAAA,GAAA,CAAA,EAAA;AACA,qBAAA,8CAAA,KAAA,GAAA,QAAA;AACA,aAFA,MAEA;AACA,qBAAA,CAAA;AACA;AAEA;AAXA,SAlCA,EAgDA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,gBAFA;AAGA,UAAA,IAAA,EAAA,EAHA;AAIA,UAAA,UAAA,EAAA,KAJA;AAIA;AACA,UAAA,WAAA,EAAA,KALA;AAKA;AACA,UAAA,WAAA,EAAA,IANA;AAMA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAPA,SAhDA,EA6DA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,YAFA;AAGA,UAAA,IAAA,EAAA,EAHA;AAIA,UAAA,UAAA,EAAA,KAJA;AAIA;AACA,UAAA,WAAA,EAAA,KALA;AAKA;AACA,UAAA,WAAA,EAAA,IANA;AAMA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAPA,SA7DA,EA0EA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,IAAA,EAAA,gBAFA;AAGA,UAAA,IAAA,EAAA,EAHA;AAIA,UAAA,IAAA,EAAA,KAJA;AAKA,UAAA,UAAA,EAAA,KALA;AAKA;AACA,UAAA,WAAA,EAAA,KANA;AAMA;AACA,UAAA,WAAA,EAAA,IAPA;AAOA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AARA,SA1EA,EAwFA;AACA,UAAA,KAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,YAFA;AAGA,UAAA,IAAA,EAAA,EAHA;AAIA,UAAA,IAAA,EAAA,KAJA;AAKA,UAAA,UAAA,EAAA,KALA;AAKA;AACA,UAAA,WAAA,EAAA,KANA;AAMA;AACA,UAAA,WAAA,EAAA,IAPA;AAOA;AACA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,EAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AARA,SAxFA,EAsGA;AACA,UAAA,KAAA,EAAA,IADA;AAEA,UAAA,UAAA,EAAA,KAFA;AAGA,UAAA,IAAA,EAAA,QAHA;AAIA,UAAA,SAAA,EAAA,GAJA;AAKA,UAAA,SAAA,EAAA,CALA;AAMA,UAAA,IAAA,EAAA,EANA;AAOA,UAAA,KAAA,EAAA,CAAA;AACA,YAAA,QAAA,EAAA,KADA;AAEA,YAAA,OAAA,EAAA,OAFA;AAGA,YAAA,OAAA,EAAA;AAHA,WAAA;AAPA,SAtGA;AAlBA,OAdA;AAqJA,MAAA,IAAA,EAAA;AArJA,KAAA;AAuJA,GA1JA;AA2JA,EAAA,QAAA,kCACA,UAAA,CAAA,CAAA,YAAA,CAAA,CADA;AAEA,IAAA,cAFA,4BAEA;AACA,aAAA;AACA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,YAAA,EAAA,KAAA,CADA;AAEA,QAAA,OAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,aAAA,EAAA,KAAA,CAFA;AAGA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,eAAA,EAAA,KAAA,CAHA;AAIA,QAAA,OAAA,EAAA,KAAA,SAAA,CAAA,KAAA,UAAA,CAAA,aAAA,EAAA,KAAA;AAJA,OAAA;AAMA,KATA;AAUA,IAAA,GAVA,iBAUA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,WAAA,aAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,OAFA;AAGA,aAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;AAhBA,IA3JA;AA6KA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA,IADA,EACA,OADA,EACA;AAAA;;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA;;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA;;AACA,QAAA,KAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OAPA,EAOA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,OAAA;AACA,OAVA;AAWA,KAbA;AAcA,IAAA,SAdA,qBAcA,GAdA,EAcA,KAdA,EAcA,IAdA,EAcA,OAdA,EAcA;AAAA;;AACA,MAAA,MAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA;;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OAPA,EAOA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,QAAA,OAAA;AACA,OAVA;AAWA,KA1BA;AA2BA,IAAA,MA3BA,kBA2BA,GA3BA,EA2BA;AAAA;;AACA,UAAA,GAAA,CAAA,gBAAA,GAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAKA,IALA,CAKA,YAAA;AACA,eAAA,MAAA,CAAA,GAAA,CAAA,EAAA,CAAA;AACA,OAPA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;AAIA,OAdA;AAeA,KA/CA;AAgDA,IAAA,YAhDA,0BAgDA;AAAA;;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,WAAA;AACA;AACA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,aAAA,CAAA,CAAA,EAAA,gBAAA,GAAA,CAAA,EAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,aAAA;AACA;AACA;AACA;;AACA,WAAA,QAAA,CAAA,YAAA,EAAA;AACA,QAAA,iBAAA,EAAA,IADA;AAEA,QAAA,gBAAA,EAAA,IAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAAA,EAKA,IALA,CAKA,YAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AACA,OAPA,EAQA,IARA,CAQA,YAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA;AAFA,SAAA;;AAIA,QAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,eAAA;AACA,OAfA;AAgBA,KA3EA;AA4EA,IAAA,UA5EA,sBA4EA,IA5EA,EA4EA,IA5EA,EA4EA;AAAA;;AACA,UAAA,CAAA,MAAA,EAAA,MAAA,EAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,QAAA,SAAA,CAAA,KAAA,IAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAFA;AAGA;;AACA,MAAA,IAAA;AACA,KAnFA;AAoFA,IAAA,WApFA,yBAoFA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,MAAA,CAAA,KAAA,IAAA;AACA,KAvFA;AAwFA,IAAA,YAxFA,wBAwFA,MAxFA,EAwFA,IAxFA,EAwFA;AACA,WAAA,KAAA,GAAA,MAAA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,KAAA,IAAA,EAAA,MAAA;AACA,MAAA,IAAA;AACA,KA7FA;AA8FA,IAAA,eA9FA,2BA8FA,IA9FA,EA8FA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAhGA;AAiGA,IAAA,cAjGA,4BAiGA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,eAAA;AACA,KApGA;AAqGA,IAAA,aArGA,yBAqGA,WArGA,EAqGA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,WAAA;AACA,KAvGA;AAwGA,IAAA,UAxGA,sBAwGA,QAxGA,EAwGA;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AACA,KA1GA;AA2GA,IAAA,MA3GA,kBA2GA,IA3GA,EA2GA;AAAA;;AAAA,UAAA,MAAA,uEAAA,EAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,IAAA,CAAA,OAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AACA,QAAA,MAAA,CAAA,cAAA;AACA,OANA;AAOA,KApHA;AAqHA,IAAA,eArHA,2BAqHA,GArHA,EAqHA;AACA;AACA,WAAA,EAAA,GAAA,GAAA,CAAA,EAAA;AACA,WAAA,KAAA,GAAA,GAAA,CAAA,QAAA;AACA,WAAA,WAAA,GAAA,IAAA,CAJA,CAKA;AACA;AACA;AACA;AACA;AACA;AACA,KAhIA;AAiIA,IAAA,IAjIA,kBAiIA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAnIA;AAoIA,IAAA,WApIA,uBAoIA,GApIA,EAoIA;AACA,WAAA,cAAA,GAAA,GAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,KAvIA;AAwIA,IAAA,eAxIA,2BAwIA,GAxIA,EAwIA,MAxIA,EAwIA;AACA,UAAA,MAAA,CAAA,QAAA,IAAA,kBAAA,IAAA,GAAA,CAAA,gBAAA,GAAA,CAAA,EAAA;AACA,aAAA,EAAA,GAAA,GAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,iBAAA,CAAA,UAAA,CAAA,KAAA,EAAA;AACA,aAAA,cAAA,GAAA,IAAA;AACA;AACA;AA9IA;AA7KA,CAAA","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud v-show=\"!showConfige\"\r\n               :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @cell-click=\"productItemList\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.category_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\" size=\"small\" icon=\"el-icon-check\"\r\n                   v-if=\"permission.category_configure\"\r\n                   @click.native=\"categoryConfige(scope.row)\">属性配置\r\n        </el-button>\r\n      </template>\r\n    </avue-crud>\r\n    <category-dialog ref=\"refProductItemBox\" :productItemBox=\"productItemBox\" :id=\"id\"\r\n                     @close=\"closeDialog\"></category-dialog>\r\n    <category-property v-if=\"showConfige\" @back=\"back\" :cateId=\"id\" :title=\"title\"></category-property>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {add, getDetail, getList, remove, update} from \"@/api/contract/product/category\";\r\n  import {mapGetters} from \"vuex\";\r\n  import categoryDialog from \"./category-dialog\";\r\n  import categoryProperty from \"./category-property\";\r\n\r\n  export default {\r\n    components: {categoryDialog, categoryProperty},\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        productItemBox: false,\r\n        showConfige: false,\r\n        id: {},\r\n        title: \"\",\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          dialogWidth: \"40%\",\r\n          calcHeight: 210,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          align: 'center',\r\n          menuAlign: 'center',\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          indexLabel: '序号',\r\n          viewBtn: false,\r\n          emptyBtn: false,\r\n          selection: true,\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          column: [\r\n            {\r\n              label: \"产品类型编码\",\r\n              labelWidth: \"20%\",\r\n              searchLabelWidth: 100,\r\n              prop: \"cateCode\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              search: true,\r\n              searchOrder: 2,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入产品类型编码\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"产品类型名称\",\r\n              labelWidth: \"20%\",\r\n              searchLabelWidth: 100,\r\n              prop: \"cateName\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              search: true,\r\n              order: 1,\r\n              searchOrder: 1,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入产品类型名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"产品项\",\r\n              prop: \"productItemCount\",\r\n              display: false,\r\n              formatter: (row, value) => {\r\n                if (value > 0) {\r\n                  return \"<div style='color:blue;cursor: pointer;'>\" + value + \"</div>\";\r\n                } else {\r\n                  return 0;\r\n                }\r\n\r\n              },\r\n\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"更新人\",\r\n              prop: \"updateUserName\",\r\n              span: 24,\r\n              hide: false,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"更新时间\",\r\n              prop: \"updateTime\",\r\n              span: 24,\r\n              hide: false,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              labelWidth: \"20%\",\r\n              prop: \"remark\",\r\n              maxlength: 100,\r\n              minlength: 1,\r\n              span: 24,\r\n              rules: [{\r\n                required: false,\r\n                message: \"请输入备注\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.category_add, false),\r\n          viewBtn: this.vaildData(this.permission.category_view, false),\r\n          delBtn: this.vaildData(this.permission.category_delete, false),\r\n          editBtn: this.vaildData(this.permission.category_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        if (row.productItemCount > 0) {\r\n          this.$message.warning(\"已经关联产品，不能删除\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        for (let i = 0; i < this.selectionList.length; i++) {\r\n          if (this.selectionList[i].productItemCount > 0) {\r\n            this.$message.warning(\"已经关联产品，不能删除\");\r\n            return;\r\n          }\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      categoryConfige(row) {\r\n        // console.log(row.id);\r\n        this.id = row.id;\r\n        this.title = row.cateName;\r\n        this.showConfige = true;\r\n        // this.$router.push({path: '/contract/product/category-property', query: {cateId: row.id}});\r\n        // this.$route.query.cateId;\r\n        // this.$message({\r\n        //   type: \"success\",\r\n        //   message: \"操作成功!\"\r\n        // });\r\n      },\r\n      back() {\r\n        this.showConfige = false;\r\n      },\r\n      closeDialog(val) {\r\n        this.productItemBox = val;\r\n        this.$emit(\"close\", false);\r\n      },\r\n      productItemList(row, column) {\r\n        if (column.property == \"productItemCount\" && row.productItemCount > 0) {\r\n          this.id = row.id;\r\n          this.$refs.refProductItemBox.searchById(this.id);\r\n          this.productItemBox = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/contract/product"}]}