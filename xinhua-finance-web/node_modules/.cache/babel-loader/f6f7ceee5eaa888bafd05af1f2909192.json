{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\router\\axios.js","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\router\\axios.js","mtime":1618794737776},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\n/**\r\n * 全站http配置\r\n *\r\n * axios参数说明\r\n * isSerialize是否开启form表单提交\r\n * isToken是否需要token\r\n */\nimport axios from 'axios';\nimport store from '@/store/';\nimport router from '@/router/router';\nimport { serialize } from '@/util/util';\nimport { getToken } from '@/util/auth';\nimport { Message } from 'element-ui';\nimport website from '@/config/website';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { Base64 } from 'js-base64';\naxios.defaults.timeout = 10000; //返回其他状态吗\n\naxios.defaults.validateStatus = function (status) {\n  return status >= 200 && status <= 500; // 默认的\n}; //跨域请求，允许保存cookie\n\n\naxios.defaults.withCredentials = true; // NProgress Configuration\n\nNProgress.configure({\n  showSpinner: false\n}); //HTTPrequest拦截\n\naxios.interceptors.request.use(function (config) {\n  NProgress.start(); // start progress bar\n\n  var meta = config.meta || {};\n  var isToken = meta.isToken === false;\n  config.headers['Authorization'] = \"Basic \".concat(Base64.encode(\"\".concat(website.clientId, \":\").concat(website.clientSecret)));\n\n  if (getToken() && !isToken) {\n    config.headers['TongTech-Auth'] = 'bearer ' + getToken(); // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\n  } //headers中配置serialize为true开启序列化\n\n\n  if (config.method === 'post' && meta.isSerialize === true) {\n    config.data = serialize(config.data);\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //HTTPresponse拦截\n\naxios.interceptors.response.use(function (res) {\n  NProgress.done();\n  var status = res.data.code || 200;\n  var statusWhiteList = website.statusWhiteList || [];\n  var message = res.data.msg || '未知错误'; //如果在白名单里则自行catch逻辑处理\n\n  if (statusWhiteList.includes(status)) return Promise.reject(res); //如果是401则跳转到登录页面\n\n  if (status === 401) store.dispatch('FedLogOut').then(function () {\n    return router.push({\n      path: '/login'\n    });\n  });\n  if (status === 407) store.dispatch('FedLogOut').then(function () {\n    return router.push({\n      path: '/updatepass'\n    });\n  }); // 如果请求为非200否者默认统一处理\n\n  if (status !== 200) {\n    Message({\n      message: message,\n      type: 'error'\n    });\n    return Promise.reject(new Error(message));\n  }\n\n  return res;\n}, function (error) {\n  NProgress.done();\n  return Promise.reject(new Error(error));\n});\nexport default axios;",{"version":3,"sources":["F:/东方通/source/b_zwj/xinhua-finance-web/src/router/axios.js"],"names":["axios","store","router","serialize","getToken","Message","website","NProgress","Base64","defaults","timeout","validateStatus","status","withCredentials","configure","showSpinner","interceptors","request","use","config","start","meta","isToken","headers","encode","clientId","clientSecret","method","isSerialize","data","error","Promise","reject","response","res","done","code","statusWhiteList","message","msg","includes","dispatch","then","push","path","type","Error"],"mappings":"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","sourcesContent":["/**\r\n * 全站http配置\r\n *\r\n * axios参数说明\r\n * isSerialize是否开启form表单提交\r\n * isToken是否需要token\r\n */\r\nimport axios from 'axios'\r\nimport store from '@/store/';\r\nimport router from '@/router/router'\r\nimport {serialize} from '@/util/util'\r\nimport {getToken} from '@/util/auth'\r\nimport {Message} from 'element-ui'\r\nimport website from '@/config/website';\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css' // progress bar style\r\nimport {Base64} from 'js-base64';\r\n\r\naxios.defaults.timeout = 10000;\r\n//返回其他状态吗\r\naxios.defaults.validateStatus = function (status) {\r\n  return status >= 200 && status <= 500; // 默认的\r\n};\r\n//跨域请求，允许保存cookie\r\naxios.defaults.withCredentials = true;\r\n// NProgress Configuration\r\nNProgress.configure({\r\n  showSpinner: false\r\n});\r\n//HTTPrequest拦截\r\naxios.interceptors.request.use(config => {\r\n  NProgress.start() // start progress bar\r\n  const meta = (config.meta || {});\r\n  const isToken = meta.isToken === false;\r\n  config.headers['Authorization'] = `Basic ${Base64.encode(`${website.clientId}:${website.clientSecret}`)}`;\r\n  if (getToken() && !isToken) {\r\n    config.headers['TongTech-Auth'] = 'bearer ' + getToken() // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改\r\n  }\r\n  //headers中配置serialize为true开启序列化\r\n  if (config.method === 'post' && meta.isSerialize === true) {\r\n    config.data = serialize(config.data);\r\n  }\r\n  return config\r\n}, error => {\r\n  return Promise.reject(error)\r\n});\r\n//HTTPresponse拦截\r\naxios.interceptors.response.use(res => {\r\n  NProgress.done();\r\n  const status = res.data.code || 200\r\n  const statusWhiteList = website.statusWhiteList || [];\r\n  const message = res.data.msg || '未知错误';\r\n  //如果在白名单里则自行catch逻辑处理\r\n  if (statusWhiteList.includes(status)) return Promise.reject(res);\r\n  //如果是401则跳转到登录页面\r\n  if (status === 401) store.dispatch('FedLogOut').then(() => router.push({path: '/login'}));\r\n  if (status === 407)  store.dispatch('FedLogOut').then(() => router.push({path: '/updatepass'}));\r\n\r\n  // 如果请求为非200否者默认统一处理\r\n  if (status !== 200) {\r\n    Message({\r\n      message: message,\r\n      type: 'error'\r\n    })\r\n    return Promise.reject(new Error(message));\r\n  }\r\n  return res;\r\n}, error => {\r\n  NProgress.done();\r\n  return Promise.reject(new Error(error));\r\n})\r\n\r\nexport default axios;\r\n"]}]}