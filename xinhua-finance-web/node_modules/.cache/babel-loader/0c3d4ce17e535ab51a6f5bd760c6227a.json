{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\product.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\product.vue","mtime":1618541026426},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, updateState, remove, exportData } from \"@/api/contract/product/product\";\nimport productAdd from \"./product/product-add\";\nimport { getDeptTree } from \"@/api/system/dept\";\nimport { mapGetters } from \"vuex\";\nimport website from '@/config/website';\nimport { getToken } from '@/util/auth';\nexport default {\n  components: {\n    productAdd: productAdd\n  },\n  data: function data() {\n    return {\n      showAdd: false,\n      id: '',\n      isView: false,\n      form: {},\n      query: {},\n      createTime: [],\n      updateTime: [],\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        menuWidth: 280,\n        calcHeight: 210,\n        refreshBtn: false,\n        columnBtn: false,\n        searchShowBtn: false,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: false,\n        addBtn: false,\n        editBtn: false,\n        delBtn: false,\n        menuFixed: false,\n        selection: true,\n        column: [{\n          label: \"主键id 雪花算法产生\",\n          prop: \"id\",\n          hide: true\n        }, {\n          label: \"产品名称\",\n          width: 240,\n          prop: \"prodName\",\n          slot: true,\n          fixed: true,\n          search: true,\n          searchOrder: 8\n        }, {\n          label: \"产品编码\",\n          prop: \"prodCode\",\n          fixed: true,\n          search: true,\n          searchOrder: 7\n        }, {\n          label: \"所属部门\",\n          prop: \"propDept\",\n          type: \"select\",\n          search: true,\n          searchOrder: 4,\n          searchFilterable: true,\n          dicData: [],\n          props: {\n            label: \"title\",\n            value: \"value\"\n          }\n        }, {\n          label: \"应用分类\",\n          prop: \"prodType\",\n          search: true,\n          searchOrder: 3,\n          type: \"select\",\n          searchFilterable: true,\n          dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }, {\n          label: \"发布范围\",\n          prop: \"releaseScope\",\n          search: true,\n          searchOrder: 6,\n          type: \"select\",\n          searchFilterable: true,\n          dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_RANGE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\",\n          width: 150,\n          search: true,\n          searchOrder: 2,\n          searchslot: true,\n          searchSpan: 12,\n          type: 'datetimerange',\n          row: true,\n          startPlaceholder: '时间日期开始范围自定义',\n          endPlaceholder: '时间日期结束范围自定义'\n        }, {\n          label: \"创建人\",\n          prop: \"createUserName\"\n        }, {\n          label: \"修改时间\",\n          prop: \"updateTime\",\n          width: 150,\n          search: true,\n          searchOrder: 1,\n          searchslot: true,\n          type: 'datetimerange',\n          searchSpan: 12,\n          row: true,\n          startPlaceholder: '时间日期开始范围自定义',\n          endPlaceholder: '时间日期结束范围自定义'\n        }, {\n          label: \"更新人\",\n          prop: \"updateUserName\"\n        }, {\n          label: \"上架日期\",\n          prop: \"addedDate\",\n          width: 150\n        }, {\n          label: \"下架日期\",\n          prop: \"expiredDate\",\n          width: 150\n        }, {\n          label: \"产品状态\",\n          prop: \"prodState\",\n          search: true,\n          searchOrder: 5,\n          type: \"select\",\n          dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_STATE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          }\n        }]\n      },\n      data: []\n    };\n  },\n  watch: {\n    'form.tenantId': function formTenantId() {\n      var _this = this;\n\n      if (this.form.tenantId !== '') {\n        getDeptTree(this.form.tenantId).then(function (res) {\n          var column = _this.findObject(_this.option.column, \"propDept\");\n\n          column.dicData = res.data.data;\n        });\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    handleExport: function handleExport() {\n      this.query;\n      this.$confirm(\"是否导出产品数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        var url = exportData();\n        window.open(url + \"?\".concat(website.tokenHeader, \"=\").concat(getToken()));\n      });\n    },\n    back: function back() {\n      this.showAdd = false;\n      this.onLoad(this.page);\n    },\n    rowState: function rowState(ids, state) {\n      var _this2 = this;\n\n      this.$confirm(state === 1 ? \"确定将选择数据上架?\" : \"确定将选择数据下架?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return updateState(ids, state);\n      }).then(function () {\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleState: function handleState(state) {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      for (var i = 0; i < this.selectionList.length; i++) {\n        if (this.selectionList[i].prodState === 4) {\n          this.$message.warning(\"草稿数据不能进行上下架操作!\");\n          return;\n        }\n      }\n\n      this.rowState(this.ids, state);\n    },\n    handleAdd: function handleAdd() {\n      this.showAdd = true;\n      this.isView = false;\n      this.id = \"\"; //this.$router.push({path: '/contract/product/productitemAdd'});\n    },\n    rowView: function rowView(row) {\n      console.log('view', row.id);\n      this.id = row.id;\n      this.isView = true;\n      this.showAdd = true;\n    },\n    rowEdit: function rowEdit(row) {\n      console.log('edit', row.id);\n      this.id = row.id;\n      this.isView = false;\n      this.showAdd = true;\n    },\n    rowDel: function rowDel(row) {\n      var _this3 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.ids);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.$refs.crud.toggleSelection();\n      });\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.createTime = [];\n      this.updateTime = [];\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n\n      if (this.createTime && this.createTime.length > 0) {\n        this.query.createStartTime = this.createTime[0];\n        this.query.createEndTime = this.createTime[1];\n      }\n\n      if (this.updateTime && this.updateTime.length > 0) {\n        this.query.updateStartTime = this.updateTime[0];\n        this.query.updateEndTime = this.updateTime[1];\n      }\n\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this5 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this5.page.total = data.total;\n        _this5.data = data.records;\n        _this5.loading = false;\n\n        _this5.selectionClear();\n      });\n      getDeptTree(this.form.tenantId).then(function (res) {\n        var column = _this5.findObject(_this5.option.column, \"propDept\");\n\n        column.dicData = res.data.data;\n      });\n    }\n  }\n};",{"version":3,"sources":["product.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud v-show=\"!showAdd\"\r\n      :option=\"option\"\r\n      :table-loading=\"loading\"\r\n      :data=\"data\"\r\n      :page=\"page\"\r\n      :permission=\"permissionList\"\r\n      :before-open=\"beforeOpen\"\r\n      v-model=\"form\"\r\n      ref=\"crud\"\r\n      @search-change=\"searchChange\"\r\n      @search-reset=\"searchReset\"\r\n      @selection-change=\"selectionChange\"\r\n      @current-change=\"currentChange\"\r\n      @size-change=\"sizeChange\"\r\n      @on-load=\"onLoad\">\r\n      <template slot=\"prodName\" slot-scope=\"scope\">\r\n        <el-link type=\"primary\" @click.native=\"rowView(scope.row)\">{{scope.row.prodName}}</el-link>\r\n        <el-tag size=\"small\" v-if=\"scope.row.prodState == 1\" effect=\"plain\" style=\"float:right;\">{{scope.row.prodStateName}}</el-tag>\r\n        <el-tag size=\"small\" v-if=\"scope.row.prodState == 2\" effect=\"plain\" type=\"warning\" style=\"float:right;\">{{scope.row.prodStateName}}</el-tag>\r\n        <el-tag size=\"small\" v-if=\"scope.row.prodState == 3\" effect=\"plain\" type=\"info\" style=\"float:right;\">{{scope.row.prodStateName}}</el-tag>\r\n        <el-tag size=\"small\" v-if=\"scope.row.prodState == 4\" effect=\"plain\" type=\"success\" style=\"float:right;\">{{scope.row.prodStateName}}</el-tag>\r\n      </template>\r\n      <template  slot-scope=\"{}\" slot='createTimeSearch'>\r\n        <el-date-picker\r\n          v-model=\"createTime\"\r\n          type=\"datetimerange\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n          :default-time=\"['12:00:00']\">\r\n        </el-date-picker>\r\n      </template> \r\n      <template  slot-scope=\"{}\" slot='updateTimeSearch'>\r\n        <el-date-picker\r\n          v-model=\"updateTime\"\r\n          type=\"datetimerange\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n          :default-time=\"['12:00:00']\">\r\n        </el-date-picker>\r\n      </template>      \r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\" size=\"small\"\r\n          icon=\"el-icon-plus\"\r\n          v-if=\"permission.product_add\"\r\n          @click=\"handleAdd\"\r\n          >新 增</el-button>\r\n            <!-- @click=\"handleAdd\" -->\r\n        <el-button type=\"primary\"\r\n          size=\"small\"\r\n          icon=\"el-icon-sell\"\r\n          v-if=\"permission.product_added\"\r\n          @click=\"handleState(1)\">上 架\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n          size=\"small\"\r\n          icon=\"el-icon-sold-out\"\r\n          v-if=\"permission.product_expired\"\r\n          @click=\"handleState(2)\">下 架\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n          size=\"small\"\r\n          v-if=\"permission.product_export\"\r\n          icon=\"el-icon-download\"\r\n          @click=\"handleExport\">导出\r\n        </el-button>\r\n        <el-button type=\"danger\"\r\n          size=\"small\"\r\n          icon=\"el-icon-delete\"\r\n          v-if=\"permission.product_delete\"\r\n          @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        \r\n      </template>\r\n     <template slot-scope=\"scope\" slot=\"menu\">\r\n      <el-button v-if=\"permission.product_edit\" icon=\"el-icon-edit-outline\" type=\"text\" size=\"small\" @click.native=\"rowEdit(scope.row)\">编辑</el-button>\r\n      <el-button v-if=\"permission.product_added && (scope.row.prodState == 2 || scope.row.prodState == 3)\" icon=\"el-icon-sell\" type=\"text\" size=\"small\" @click.native=\"rowState(scope.row.id,1)\">上架</el-button>\r\n      <el-button v-if=\"permission.product_expired && scope.row.prodState == 1\" icon=\"el-icon-sold-out\" type=\"text\" size=\"small\" @click.native=\"rowState(scope.row.id,2)\">下架</el-button>\r\n      <el-button v-if=\"permission.product_delete\" icon=\"el-icon-delete\" type=\"text\" size=\"small\" @click.native=\"rowDel(scope.row)\" style='color: #E02020;'>删除</el-button>\r\n      <el-button v-if=\"permission.product_view\" icon=\"el-icon-reading\" type=\"text\" size=\"small\" @click.native=\"rowView(scope.row)\">详情</el-button>\r\n    </template>\r\n    </avue-crud>\r\n    <product-add v-if=\"showAdd\" @back=\"back\" :id=\"id\" :is-view=\"isView\" ></product-add>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, updateState, remove, exportData} from \"@/api/contract/product/product\";\r\n  import productAdd from './product/product-add';\r\n  import {getDeptTree} from \"@/api/system/dept\";\r\n  import {mapGetters} from \"vuex\";\r\n  import website from '@/config/website';\r\n  import {getToken} from '@/util/auth';\r\n  export default {\r\n    components:{productAdd},\r\n    data() {\r\n      return {\r\n        showAdd:false,\r\n        id:'',\r\n        isView:false,\r\n        form: {},\r\n        query: {},\r\n        createTime:[],\r\n        updateTime:[],\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          menuWidth:280,\r\n          calcHeight: 210,\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          viewBtn: false,\r\n          addBtn:false,\r\n          editBtn:false,\r\n          delBtn:false,\r\n          menuFixed:false,\r\n          selection: true,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"产品名称\",\r\n              width: 240,\r\n              prop: \"prodName\",\r\n              slot:true,\r\n              fixed: true,\r\n              search: true,\r\n              searchOrder:8\r\n            },\r\n            {\r\n              label: \"产品编码\",\r\n              prop: \"prodCode\",\r\n              fixed: true,\r\n              search: true,\r\n              searchOrder:7\r\n            },\r\n            \r\n            {\r\n              label: \"所属部门\",\r\n              prop: \"propDept\",\r\n              type: \"select\",\r\n              search: true,\r\n              searchOrder:4,\r\n              searchFilterable:true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"title\",\r\n                value: \"value\"\r\n              }\r\n            },\r\n            {\r\n              label: \"应用分类\",\r\n              prop: \"prodType\",\r\n              search: true,\r\n              searchOrder:3,\r\n              type: \"select\",\r\n              searchFilterable:true,\r\n              dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              }\r\n            },\r\n            {\r\n              label: \"发布范围\",\r\n              prop: \"releaseScope\",\r\n              search: true,\r\n              searchOrder:6,\r\n              type: \"select\",\r\n              searchFilterable:true,\r\n              dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_RANGE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              }\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              width: 150,\r\n              search: true,\r\n              searchOrder:2,\r\n              searchslot: true,\r\n              searchSpan:12,\r\n              type: 'datetimerange',\r\n              row:true,\r\n              startPlaceholder: '时间日期开始范围自定义',\r\n              endPlaceholder: '时间日期结束范围自定义'\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\"\r\n            },\r\n            {\r\n              label: \"修改时间\",\r\n              prop: \"updateTime\",\r\n              width: 150,\r\n              search: true,\r\n              searchOrder:1,\r\n              searchslot: true,\r\n              type: 'datetimerange',\r\n              searchSpan:12,\r\n              row:true,\r\n              startPlaceholder: '时间日期开始范围自定义',\r\n              endPlaceholder: '时间日期结束范围自定义'\r\n            },\r\n            {\r\n              label: \"更新人\",\r\n              prop: \"updateUserName\"\r\n            },\r\n            {\r\n              label: \"上架日期\",\r\n              prop: \"addedDate\",\r\n              width: 150,\r\n            },\r\n            {\r\n              label: \"下架日期\",\r\n              prop: \"expiredDate\",\r\n              width: 150,\r\n            },\r\n            {\r\n              label: \"产品状态\",\r\n              prop: \"prodState\",\r\n              search: true,\r\n              searchOrder:5,\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_STATE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    watch: {\r\n      'form.tenantId'() {\r\n        if (this.form.tenantId !== '') {\r\n          getDeptTree(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"propDept\");\r\n            column.dicData = res.data.data;\r\n          });\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      handleExport(){\r\n        (this.query)\r\n        this.$confirm(\"是否导出产品数据?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          let url = exportData();\r\n          window.open(url+`?${website.tokenHeader}=${getToken()}`);\r\n        });\r\n      },\r\n      back(){\r\n        this.showAdd=false;\r\n        this.onLoad(this.page);\r\n      },\r\n      rowState(ids, state){\r\n        this.$confirm(state===1?\"确定将选择数据上架?\":\"确定将选择数据下架?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          return updateState(ids,state);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n      },\r\n      handleState(state){\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        for(let i =0; i<this.selectionList.length; i++){\r\n          if(this.selectionList[i].prodState === 4){\r\n            this.$message.warning(\"草稿数据不能进行上下架操作!\");\r\n            return;\r\n          }\r\n        }\r\n        this.rowState(this.ids,state);\r\n      },\r\n      handleAdd(){\r\n        this.showAdd=true;\r\n        this.isView=false;\r\n        this.id=\"\";\r\n        //this.$router.push({path: '/contract/product/productitemAdd'});\r\n      },\r\n      rowView(row) {\r\n        console.log('view',row.id)\r\n        this.id=row.id;\r\n        this.isView=true;\r\n        this.showAdd=true\r\n      },\r\n      rowEdit(row) {\r\n        console.log('edit',row.id)\r\n        this.id=row.id;\r\n        this.isView=false;\r\n        this.showAdd=true;\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.createTime=[]\r\n        this.updateTime=[]\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        if(this.createTime && this.createTime.length > 0){\r\n          this.query.createStartTime=this.createTime[0] \r\n          this.query.createEndTime=this.createTime[1] \r\n        }\r\n        if(this.updateTime && this.updateTime.length > 0){\r\n          this.query.updateStartTime=this.updateTime[0] \r\n          this.query.updateEndTime=this.updateTime[1] \r\n        }\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage){\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize){\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n        getDeptTree(this.form.tenantId).then(res => {\r\n          const column = this.findObject(this.option.column, \"propDept\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views/contract/product"}]}