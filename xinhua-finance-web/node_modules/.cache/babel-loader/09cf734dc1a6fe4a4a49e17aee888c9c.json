{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\permission.js","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\permission.js","mtime":1618367977403},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n/**\r\n * 全站权限配置\r\n *\r\n */\nimport router from \"./router/router\";\nimport store from \"./store\";\nimport { validatenull } from '@/util/validate';\nimport { getToken } from '@/util/auth';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nNProgress.configure({\n  showSpinner: false\n});\nvar lockPage = store.getters.website.lockPage; //锁屏页\n\nrouter.beforeEach(function (to, from, next) {\n  var meta = to.meta || {};\n  var isMenu = meta.menu === undefined ? to.query.menu : meta.menu;\n  store.commit('SET_IS_MENU', isMenu === undefined);\n\n  if (getToken()) {\n    if (store.getters.isLock && to.path !== lockPage) {\n      //如果系统激活锁屏，全部跳转到锁屏页\n      next({\n        path: lockPage\n      });\n    } else if (to.path === '/login') {\n      //如果登录成功访问登录页跳转到主页\n      next({\n        path: '/'\n      });\n    } else {\n      //如果用户信息为空则获取用户信息，获取用户信息失败，跳转到登录页\n      if (store.getters.token.length === 0) {\n        store.dispatch('FedLogOut').then(function () {\n          next({\n            path: '/login'\n          });\n        });\n      } else {\n        var value = to.query.src || to.fullPath;\n        var label = to.query.name || to.name;\n\n        var _meta = to.meta || router.$avueRouter.meta || {};\n\n        var i18n = to.query.i18n;\n\n        if (_meta.isTab !== false && !validatenull(value) && !validatenull(label)) {\n          store.commit('ADD_TAG', {\n            label: label,\n            value: value,\n            params: to.params,\n            query: to.query,\n            meta: function () {\n              if (!i18n) {\n                return _meta;\n              }\n\n              return {\n                i18n: i18n\n              };\n            }(),\n            group: router.$avueRouter.group || []\n          });\n        }\n\n        next();\n      }\n    }\n  } else {\n    //判断是否需要认证，没有登录访问去登录页\n    if (meta.isAuth === false) {\n      next();\n    } else {\n      next('/login');\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done();\n  var title = store.getters.tag.label;\n  var i18n = store.getters.tag.meta.i18n;\n  title = router.$avueRouter.generateTitle(title, i18n); //根据当前的标签也获取label的值动态设置浏览器标题\n\n  router.$avueRouter.setTitle(title);\n});",{"version":3,"sources":["F:/东方通/source/b_zwj/xinhua-finance-web/src/permission.js"],"names":["router","store","validatenull","getToken","NProgress","configure","showSpinner","lockPage","getters","website","beforeEach","to","from","next","meta","isMenu","menu","undefined","query","commit","isLock","path","token","length","dispatch","then","value","src","fullPath","label","name","$avueRouter","i18n","isTab","params","group","isAuth","afterEach","done","title","tag","generateTitle","setTitle"],"mappings":"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","sourcesContent":["/**\r\n * 全站权限配置\r\n *\r\n */\r\nimport router from './router/router'\r\nimport store from './store'\r\nimport {validatenull} from '@/util/validate'\r\nimport {getToken} from '@/util/auth'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css' // progress bar style\r\nNProgress.configure({showSpinner: false});\r\nconst lockPage = store.getters.website.lockPage; //锁屏页\r\nrouter.beforeEach((to, from, next) => {\r\n  const meta = to.meta || {};\r\n  const isMenu = meta.menu === undefined ? to.query.menu : meta.menu;\r\n  store.commit('SET_IS_MENU', isMenu === undefined);\r\n  if (getToken()) {\r\n    if (store.getters.isLock && to.path !== lockPage) { //如果系统激活锁屏，全部跳转到锁屏页\r\n      next({path: lockPage})\r\n    } else if (to.path === '/login') { //如果登录成功访问登录页跳转到主页\r\n      next({path: '/'})\r\n    } else {\r\n      //如果用户信息为空则获取用户信息，获取用户信息失败，跳转到登录页\r\n      if (store.getters.token.length === 0) {\r\n        store.dispatch('FedLogOut').then(() => {\r\n          next({path: '/login'})\r\n        })\r\n      } else {\r\n        const value = to.query.src || to.fullPath;\r\n        const label = to.query.name || to.name;\r\n        const meta = to.meta || router.$avueRouter.meta || {};\r\n        const i18n = to.query.i18n;\r\n        if (meta.isTab !== false && !validatenull(value) && !validatenull(label)) {\r\n          store.commit('ADD_TAG', {\r\n            label: label,\r\n            value: value,\r\n            params: to.params,\r\n            query: to.query,\r\n            meta: (() => {\r\n              if (!i18n) {\r\n                return meta\r\n              }\r\n              return {\r\n                i18n: i18n\r\n              }\r\n            })(),\r\n            group: router.$avueRouter.group || []\r\n          });\r\n        }\r\n        next()\r\n      }\r\n    }\r\n  } else {\r\n    //判断是否需要认证，没有登录访问去登录页\r\n    if (meta.isAuth === false) {\r\n      next()\r\n    } else {\r\n      next('/login')\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done();\r\n  let title = store.getters.tag.label;\r\n  let i18n = store.getters.tag.meta.i18n;\r\n  title = router.$avueRouter.generateTitle(title, i18n)\r\n  //根据当前的标签也获取label的值动态设置浏览器标题\r\n  router.$avueRouter.setTitle(title);\r\n});\r\n"]}]}