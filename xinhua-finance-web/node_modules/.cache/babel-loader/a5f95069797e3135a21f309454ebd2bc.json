{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\base\\region.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\base\\region.vue","mtime":1618367977419},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getLazyTree, getDetail, submit, remove } from \"@/api/base/region\";\nimport { mapGetters } from \"vuex\";\nimport { validatenull } from \"@/util/validate\";\nexport default {\n  data: function data() {\n    return {\n      topCode: '00',\n      treeCode: '',\n      treeParentCode: '',\n      treeData: [],\n      treeOption: {\n        nodeKey: 'id',\n        lazy: true,\n        treeLoad: function treeLoad(node, resolve) {\n          var parentCode = node.level === 0 ? \"00\" : node.data.id;\n          getLazyTree(parentCode).then(function (res) {\n            resolve(res.data.data.map(function (item) {\n              return _objectSpread(_objectSpread({}, item), {}, {\n                leaf: !item.hasChildren\n              });\n            }));\n          });\n        },\n        addBtn: false,\n        menu: false,\n        size: 'small',\n        props: {\n          labelText: '标题',\n          label: 'title',\n          value: 'value',\n          children: 'children'\n        }\n      },\n      regionForm: {},\n      regionOption: {\n        labelWidth: 100,\n        column: [{\n          label: \"父区划编号\",\n          prop: \"parentCode\",\n          span: 24,\n          disabled: true,\n          rules: [{\n            required: true,\n            message: \"请输入父区划编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"父区划名称\",\n          prop: \"parentName\",\n          span: 24,\n          disabled: true\n        }, {\n          label: \"区划编号\",\n          prop: \"code\",\n          formslot: true,\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入区划编号\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"区划子编号\",\n          prop: \"subCode\",\n          display: false\n        }, {\n          label: \"区划名称\",\n          prop: \"name\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入区划名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"区划等级\",\n          prop: \"level\",\n          type: \"radio\",\n          dicUrl: \"/api/cnfic-system/dict/dictionary?code=region\",\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          dataType: \"number\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请选择区划等级\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"区划排序\",\n          prop: \"sort\",\n          type: \"number\",\n          span: 24,\n          rules: [{\n            required: true,\n            message: \"请输入区划排序\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"区划备注\",\n          prop: \"remark\",\n          type: \"textarea\",\n          minRows: 6,\n          span: 24\n        }]\n      },\n      debugBox: false,\n      debugForm: {},\n      debugOption: {\n        labelWidth: 50,\n        submitBtn: false,\n        emptyBtn: false,\n        column: [{\n          label: '省份',\n          prop: 'province',\n          type: 'select',\n          props: {\n            label: 'name',\n            value: 'code'\n          },\n          cascaderItem: ['city', 'district'],\n          dicUrl: '/api/cnfic-system/region/select',\n          span: 24\n        }, {\n          label: '地市',\n          prop: 'city',\n          type: 'select',\n          props: {\n            label: 'name',\n            value: 'code'\n          },\n          dicFlag: false,\n          dicUrl: '/api/cnfic-system/region/select?code={{key}}',\n          span: 24\n        }, {\n          label: '区县',\n          prop: 'district',\n          type: 'select',\n          props: {\n            label: 'name',\n            value: 'code'\n          },\n          dicFlag: false,\n          dicUrl: '/api/cnfic-system/region/select?code={{key}}',\n          span: 24\n        }]\n      }\n    };\n  },\n  watch: {\n    'regionForm.subCode': function regionFormSubCode() {\n      this.regionForm.code = this.regionForm.parentCode + this.regionForm.subCode;\n    },\n    'excelForm.isCovered': function excelFormIsCovered() {\n      if (this.excelForm.isCovered !== '') {\n        var column = this.findObject(this.excelOption.column, \"excelFile\");\n        column.action = \"/api/cnfic-system/region/import-region?isCovered=\".concat(this.excelForm.isCovered);\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.region_add, false),\n        viewBtn: this.vaildData(this.permission.region_view, false),\n        delBtn: this.vaildData(this.permission.region_delete, false),\n        editBtn: this.vaildData(this.permission.region_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    initTree: function initTree() {\n      var _this = this;\n\n      this.treeData = [];\n      getLazyTree(this.topCode).then(function (res) {\n        _this.treeData = res.data.data.map(function (item) {\n          return _objectSpread(_objectSpread({}, item), {}, {\n            leaf: !item.hasChildren\n          });\n        });\n      });\n    },\n    nodeClick: function nodeClick(data) {\n      var _this2 = this;\n\n      var column = this.findObject(this.regionOption.column, \"parentCode\");\n      column.disabled = true;\n      this.treeCode = data.id;\n      this.treeParentCode = data.parentId;\n      getDetail(this.treeCode).then(function (res) {\n        _this2.regionForm = res.data.data;\n        _this2.regionForm.subCode = _this2.regionForm.code.replace(_this2.regionForm.parentCode, '');\n      });\n    },\n    addChildren: function addChildren() {\n      if (validatenull(this.regionForm.code) || validatenull(this.regionForm.name)) {\n        this.$message.warning(\"请先选择一项区划\");\n        return;\n      }\n\n      this.regionForm.parentCode = this.regionForm.code;\n      this.regionForm.parentName = this.regionForm.name;\n      this.regionForm.code = '';\n      this.regionForm.subCode = '';\n      this.regionForm.name = '';\n      this.regionForm.level = this.regionForm.level === 5 ? 5 : this.regionForm.level + 1;\n    },\n    handleSubmit: function handleSubmit(form, done, loading) {\n      var _this3 = this;\n\n      var parentCode = form.parentCode === this.topCode ? '' : form.parentCode;\n      form.code = parentCode + form.subCode;\n      submit(form).then(function () {\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this3.initTree();\n\n        _this3.regionForm.subCode = '';\n\n        _this3.$refs.form.resetForm();\n\n        done();\n      }, function (error) {\n        loading();\n        window.console.log(error);\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this4 = this;\n\n      if (validatenull(this.regionForm.code)) {\n        this.$message.warning(\"请先选择一项区划\");\n        return;\n      }\n\n      this.$confirm(\"\\u786E\\u5B9A\\u5C06 [\".concat(this.regionForm.name, \"] \\u6570\\u636E\\u5220\\u9664?\"), {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this4.treeCode);\n      }).then(function () {\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this4.initTree();\n\n        _this4.regionForm.subCode = '';\n\n        _this4.$refs.form.resetForm();\n      });\n    },\n    uploadAfter: function uploadAfter(res, done, loading, column) {\n      window.console.log(column);\n      this.excelBox = false;\n      this.initTree();\n      done();\n    },\n    handleDebug: function handleDebug() {\n      this.debugBox = true;\n    }\n  }\n};",{"version":3,"sources":["region.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-row>\r\n    <el-col :span=\"9\">\r\n      <div class=\"box\">\r\n        <el-scrollbar>\r\n          <basic-container>\r\n            <avue-tree :option=\"treeOption\" :data=\"treeData\" @node-click=\"nodeClick\"/>\r\n          </basic-container>\r\n        </el-scrollbar>\r\n      </div>\r\n    </el-col>\r\n    <el-col :span=\"15\">\r\n      <basic-container>\r\n        <el-button-group>\r\n          <el-button v-if=\"permission.region_add\" type=\"primary\" size=\"small\" icon=\"el-icon-circle-plus-outline\" @click=\"addChildren\">新增下级</el-button>\r\n          <el-button v-if=\"permission.region_delete\" type=\"primary\" size=\"small\" icon=\"el-icon-delete\" @click=\"handleDelete\">删除</el-button>\r\n          <el-button v-if=\"permission.region_debug\" type=\"primary\" size=\"small\" icon=\"el-icon-video-play\" @click=\"handleDebug\">调试</el-button>\r\n        </el-button-group>\r\n      </basic-container>\r\n      <basic-container>\r\n        <avue-form ref=\"form\" :option=\"regionOption\" v-model=\"regionForm\" @submit=\"handleSubmit\">\r\n          <template slot=\"code\" slot-scope=\"{}\">\r\n            <el-input placeholder=\"请输入 区划子编号\" v-model=\"regionForm.subCode\">\r\n              <template slot=\"prepend\">{{regionForm.parentCode}}</template>\r\n            </el-input>\r\n          </template>\r\n        </avue-form>\r\n        <el-dialog title=\"行政区划数据调试\"\r\n                   append-to-body\r\n                   :visible.sync=\"debugBox\"\r\n                   width=\"350px\">\r\n          <avue-form :option=\"debugOption\" v-model=\"debugForm\"/>\r\n        </el-dialog>\r\n      </basic-container>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\n  import {getLazyTree, getDetail, submit, remove} from \"@/api/base/region\";\r\n  import {mapGetters} from \"vuex\";\r\n  import {validatenull} from \"@/util/validate\";\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        topCode: '00',\r\n        treeCode: '',\r\n        treeParentCode: '',\r\n        treeData: [],\r\n        treeOption: {\r\n          nodeKey: 'id',\r\n          lazy: true,\r\n          treeLoad: function (node, resolve) {\r\n            const parentCode = (node.level === 0) ? \"00\" : node.data.id;\r\n            getLazyTree(parentCode).then(res => {\r\n              resolve(res.data.data.map(item => {\r\n                return {\r\n                  ...item,\r\n                  leaf: !item.hasChildren\r\n                }\r\n              }))\r\n            });\r\n          },\r\n          addBtn: false,\r\n          menu: false,\r\n          size: 'small',\r\n          props: {\r\n            labelText: '标题',\r\n            label: 'title',\r\n            value: 'value',\r\n            children: 'children'\r\n          }\r\n        },\r\n        regionForm: {},\r\n        regionOption: {\r\n          labelWidth: 100,\r\n          column: [\r\n            {\r\n              label: \"父区划编号\",\r\n              prop: \"parentCode\",\r\n              span: 24,\r\n              disabled: true,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入父区划编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"父区划名称\",\r\n              prop: \"parentName\",\r\n              span: 24,\r\n              disabled: true,\r\n            },\r\n            {\r\n              label: \"区划编号\",\r\n              prop: \"code\",\r\n              formslot: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入区划编号\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划子编号\",\r\n              prop: \"subCode\",\r\n              display: false,\r\n            },\r\n            {\r\n              label: \"区划名称\",\r\n              prop: \"name\",\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入区划名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划等级\",\r\n              prop: \"level\",\r\n              type: \"radio\",\r\n              dicUrl: \"/api/cnfic-system/dict/dictionary?code=region\",\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              dataType: \"number\",\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择区划等级\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划排序\",\r\n              prop: \"sort\",\r\n              type: \"number\",\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入区划排序\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"区划备注\",\r\n              prop: \"remark\",\r\n              type: \"textarea\",\r\n              minRows: 6,\r\n              span: 24,\r\n            },\r\n          ]\r\n        },\r\n        debugBox: false,\r\n        debugForm: {},\r\n        debugOption: {\r\n          labelWidth: 50,\r\n          submitBtn: false,\r\n          emptyBtn: false,\r\n          column: [\r\n            {\r\n              label: '省份',\r\n              prop: 'province',\r\n              type: 'select',\r\n              props: {\r\n                label: 'name',\r\n                value: 'code'\r\n              },\r\n              cascaderItem: ['city', 'district'],\r\n              dicUrl: '/api/cnfic-system/region/select',\r\n              span: 24,\r\n            },\r\n            {\r\n              label: '地市',\r\n              prop: 'city',\r\n              type: 'select',\r\n              props: {\r\n                label: 'name',\r\n                value: 'code'\r\n              },\r\n              dicFlag: false,\r\n              dicUrl: '/api/cnfic-system/region/select?code={{key}}',\r\n              span: 24,\r\n            },\r\n            {\r\n              label: '区县',\r\n              prop: 'district',\r\n              type: 'select',\r\n              props: {\r\n                label: 'name',\r\n                value: 'code'\r\n              },\r\n              dicFlag: false,\r\n              dicUrl: '/api/cnfic-system/region/select?code={{key}}',\r\n              span: 24,\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    watch: {\r\n      'regionForm.subCode'() {\r\n        this.regionForm.code = this.regionForm.parentCode + this.regionForm.subCode;\r\n      },\r\n      'excelForm.isCovered'() {\r\n        if (this.excelForm.isCovered !== '') {\r\n          const column = this.findObject(this.excelOption.column, \"excelFile\");\r\n          column.action = `/api/cnfic-system/region/import-region?isCovered=${this.excelForm.isCovered}`;\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.region_add, false),\r\n          viewBtn: this.vaildData(this.permission.region_view, false),\r\n          delBtn: this.vaildData(this.permission.region_delete, false),\r\n          editBtn: this.vaildData(this.permission.region_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      initTree() {\r\n        this.treeData = [];\r\n        getLazyTree(this.topCode).then(res => {\r\n          this.treeData = res.data.data.map(item => {\r\n            return {\r\n              ...item,\r\n              leaf: !item.hasChildren\r\n            }\r\n          })\r\n        });\r\n      },\r\n      nodeClick(data) {\r\n        const column = this.findObject(this.regionOption.column, \"parentCode\");\r\n        column.disabled = true;\r\n        this.treeCode = data.id;\r\n        this.treeParentCode = data.parentId;\r\n        getDetail(this.treeCode).then(res => {\r\n          this.regionForm = res.data.data;\r\n          this.regionForm.subCode = this.regionForm.code.replace(this.regionForm.parentCode, '');\r\n        })\r\n      },\r\n      addChildren() {\r\n        if (validatenull(this.regionForm.code) || validatenull(this.regionForm.name)) {\r\n          this.$message.warning(\"请先选择一项区划\");\r\n          return;\r\n        }\r\n        this.regionForm.parentCode = this.regionForm.code;\r\n        this.regionForm.parentName = this.regionForm.name;\r\n        this.regionForm.code = '';\r\n        this.regionForm.subCode = '';\r\n        this.regionForm.name = '';\r\n        this.regionForm.level = (this.regionForm.level === 5) ? 5 : this.regionForm.level + 1;\r\n      },\r\n      handleSubmit(form, done, loading) {\r\n        const parentCode = form.parentCode === this.topCode ? '' : form.parentCode;\r\n        form.code = parentCode + form.subCode;\r\n        submit(form).then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.initTree();\r\n          this.regionForm.subCode = '';\r\n          this.$refs.form.resetForm();\r\n          done();\r\n        }, error => {\r\n          loading();\r\n          window.console.log(error);\r\n        });\r\n      },\r\n      handleDelete() {\r\n        if (validatenull(this.regionForm.code)) {\r\n          this.$message.warning(\"请先选择一项区划\");\r\n          return;\r\n        }\r\n        this.$confirm(`确定将 [${this.regionForm.name}] 数据删除?`, {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.treeCode);\r\n          })\r\n          .then(() => {\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.initTree();\r\n            this.regionForm.subCode = '';\r\n            this.$refs.form.resetForm();\r\n          });\r\n      },\r\n      uploadAfter(res, done, loading, column) {\r\n        window.console.log(column);\r\n        this.excelBox = false;\r\n        this.initTree();\r\n        done();\r\n      },\r\n      handleDebug() {\r\n        this.debugBox = true;\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .box {\r\n    height: 800px;\r\n  }\r\n\r\n  .el-scrollbar {\r\n    height: 100%;\r\n  }\r\n\r\n  .box .el-scrollbar__wrap {\r\n    overflow: scroll;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src/views/base"}]}