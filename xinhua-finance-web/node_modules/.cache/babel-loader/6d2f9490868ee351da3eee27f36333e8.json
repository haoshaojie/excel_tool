{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\contractManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\contractManagement.vue","mtime":1619001092678},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getPage, removeContract } from \"@/api/contract/contract/contract\";\nimport { mapGetters } from \"vuex\";\nimport { getDeptTree } from \"@/api/system/dept\";\nimport addContract from \"./addContract\";\nimport { getStore } from \"@/util/store\";\nimport { getUser } from \"@/api/system/user\";\nimport contractManageDetailDailog from \"./components/contractManageDetailDailog\";\nimport contractExportDialog from \"./components/contractExportDialog\";\nexport default {\n  components: {\n    addContract: addContract,\n    contractManageDetailDailog: contractManageDetailDailog,\n    contractExportDialog: contractExportDialog\n  },\n  data: function data() {\n    return {\n      showAdd: false,\n      //true:新增窗口展示，列表页隐藏\n      exportDialogFlag: false,\n      form: {},\n      query: {},\n      dicDataList: [],\n      //当前登录人的数据权限部门\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      data: [],\n      option: {\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: false,\n        addBtn: false,\n        editBtn: false,\n        delBtn: false,\n        selection: true,\n        column: [{\n          label: \"合约编码\",\n          prop: \"conNo\",\n          search: true,\n          searchOrder: 6,\n          display: false,\n          slot: true\n        }, {\n          label: \"合约名称\",\n          prop: \"conName\",\n          search: true,\n          searchOrder: 7,\n          display: false\n        }, {\n          label: \"客户名称\",\n          prop: \"custName\",\n          search: true,\n          searchOrder: 5,\n          display: false\n        }, {\n          label: \"所属部门\",\n          prop: \"deptId\",\n          search: true,\n          searchOrder: 4,\n          type: \"select\",\n          searchFilterable: true,\n          display: false,\n          dicData: [],\n          props: {\n            label: \"title\",\n            value: \"value\"\n          }\n        }, {\n          label: \"合约类型\",\n          prop: \"conType\",\n          type: \"select\",\n          search: true,\n          searchOrder: 2,\n          display: false,\n          props: {\n            label: 'dictValue',\n            value: 'dictKey'\n          },\n          dicUrl: this.getDicValue(\"contract_type\")\n        }, {\n          label: \"合约状态\",\n          prop: \"conState\",\n          type: \"select\",\n          search: true,\n          searchOrder: 3,\n          display: false,\n          props: {\n            label: 'dictValue',\n            value: 'dictKey'\n          },\n          dicUrl: this.getDicValue(\"contract_state\")\n        }, {\n          label: \"合约金额\",\n          prop: \"conAmount\",\n          display: false\n        }, {\n          label: \"合约起始日期\",\n          prop: \"conStartTime\",\n          type: \"date\",\n          format: \"yyyy-MM-dd hh:mm:ss\",\n          valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n          display: false\n        }, {\n          label: \"合约起始日期\",\n          prop: \"conEndTime\",\n          type: \"date\",\n          format: \"yyyy-MM-dd hh:mm:ss\",\n          valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n          display: false\n        }]\n      },\n      selections: {},\n      searchCondition: {}\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.contract_add, false),\n        editButton: this.vaildData(this.permission.contract_edit, false),\n        bindBtn: this.vaildData(this.permission.contract_bind, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  mounted: function mounted() {\n    this.getCurrDicData();\n  },\n  methods: {\n    addContract: function addContract() {},\n    addHandle: function addHandle() {\n      this.showAdd = true;\n    },\n    addBack: function addBack() {\n      this.showAdd = false;\n      this.onLoad(this.page);\n    },\n    handleRemove: function handleRemove() {\n      var _this = this;\n\n      var params = {};\n      params.contractRemoveIds = [];\n\n      for (var id in this.selections) {\n        params.contractRemoveIds.push(\"\" + id);\n      }\n\n      if (params.contractRemoveIds.length <= 0) {\n        this.$message({\n          type: 'warning',\n          message: '未选择合约信息！'\n        });\n        return;\n      }\n\n      this.$confirm(\"是否确定删除（绑定产品和用户的合约不可删除）?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        title: \"删除合约\",\n        type: \"warning\"\n      }).then(function () {\n        removeContract(params).then(function (result) {\n          // 1 根据返回结果如果删除成功 弹出提示框\n          console.log(result);\n\n          if (result.data.data.length > 0) {\n            // 批量删除有不可删除信息\n            _this.$confirm(result.data.msg, {\n              confirmButtonText: \"确定\",\n              cancelButtonText: \"取消\",\n              title: \"删除合约\",\n              type: \"warning\",\n              dangerouslyUseHTMLString: true\n            }).catch(function () {});\n          } else {\n            _this.$message({\n              type: 'success',\n              message: result.data.msg\n            });\n          }\n        });\n      }).catch(function () {});\n    },\n    handleExport: function handleExport() {\n      this.exportDialogFlag = true;\n    },\n    cancelExportDialog: function cancelExportDialog() {\n      this.exportDialogFlag = false;\n    },\n    getDetail: function getDetail(row) {\n      this.$refs.contractManageDetailDailog.openDalog(row);\n    },\n    // rowSave(row, done, loading) {\n    //   add(row).then(() => {\n    //     done();\n    //     this.onLoad(this.page);\n    //     this.$message({\n    //       type: \"success\",\n    //       message: \"操作成功!\"\n    //     });\n    //   }, error => {\n    //     window.console.log(error);\n    //     loading();\n    //   });\n    // },\n    // rowUpdate(row, index, done, loading) {\n    //   update(row).then(() => {\n    //     done();\n    //     this.onLoad(this.page);\n    //     this.$message({\n    //       type: \"success\",\n    //       message: \"操作成功!\"\n    //     });\n    //   }, error => {\n    //     window.console.log(error);\n    //     loading();\n    //   });\n    // },\n    // rowDel(row) {\n    //   this.$confirm(\"确定将选择数据删除?\", {\n    //     confirmButtonText: \"确定\",\n    //     cancelButtonText: \"取消\",\n    //     type: \"warning\"\n    //   })\n    //     .then(() => {\n    //       return remove(row.id);\n    //     })\n    //     .then(() => {\n    //       this.onLoad(this.page);\n    //       this.$message({\n    //         type: \"success\",\n    //         message: \"操作成功!\"\n    //       });\n    //     });\n    // },\n    // handleDelete() {\n    //   if (this.selectionList.length === 0) {\n    //     this.$message.warning(\"请选择至少一条数据\");\n    //     return;\n    //   }\n    //   this.$confirm(\"确定将选择数据删除?\", {\n    //     confirmButtonText: \"确定\",\n    //     cancelButtonText: \"取消\",\n    //     type: \"warning\"\n    //   })\n    //     .then(() => {\n    //       return remove(this.ids);\n    //     })\n    //     .then(() => {\n    //       this.onLoad(this.page);\n    //       this.$message({\n    //         type: \"success\",\n    //         message: \"操作成功!\"\n    //       });\n    //       this.$refs.crud.toggleSelection();\n    //     });\n    // },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this2 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        this.getDetail(this.form.id).then(function (res) {\n          _this2.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.form.createTime = \"\";\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      console.log(params);\n      this.query = params;\n      this.query.custManager = this.form.manager;\n\n      if (this.form.createTime) {\n        this.query.startCreateTime = this.form.createTime[0];\n        this.query.endCreateTime = this.form.createTime[1];\n      }\n\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    checkRemove: function checkRemove(selection, row) {\n      // 判断是否取消选中\n      var hasRemoveFlag = true;\n\n      for (var i = 0; i < selection.length; i++) {\n        if (selection[i].id == row.id) {\n          hasRemoveFlag = false;\n          break;\n        }\n      }\n\n      return hasRemoveFlag;\n    },\n    selectAll: function selectAll(selection) {\n      for (var i = 0; i < selection.length; i++) {\n        this.select(selection, selection[i]);\n      }\n    },\n    select: function select(selection, row) {\n      // 判断是否取消选中\n      var hasRemoveFlag = this.checkRemove(selection, row);\n\n      if (hasRemoveFlag) {\n        delete this.selections[row.id];\n      } else {\n        this.selections[row.id] = row;\n      }\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    //获取当前登录人的数据权限部门信息\n    getCurrDicData: function getCurrDicData() {\n      var _this3 = this;\n\n      getDeptTree(this.form.tenantId).then(function (res) {\n        //所有的部门\n        var allDep = res.data.data; //当前登录人的信息\n\n        var userInfo = getStore({\n          name: 'userInfo'\n        }) || [];\n        getUser(userInfo.userId).then(function (res) {\n          var curruser = res.data.data; //用户部门数据权限字符串\n\n          var userdataStr = curruser.dataAuthority; //用户部门数据权限数组\n\n          var arr = userdataStr.split(\",\"); //遍历获取当前登录人可访问的部门\n\n          var dicData = [];\n\n          for (var i = 0, len = allDep.length; i < len; i++) {\n            if (arr.indexOf(allDep[i].id) >= 0) {\n              dicData.push(allDep[i]);\n            }\n          }\n\n          _this3.dicDataList = dicData;\n\n          var column = _this3.findObject(_this3.option.column, \"deptId\");\n\n          column.dicData = dicData;\n        });\n      });\n    },\n    onLoad: function onLoad(page) {\n      var _this4 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = false;\n      getPage(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this4.page.total = data.total;\n        _this4.data = data.records;\n        _this4.loading = false;\n\n        _this4.selectionClear();\n      }); // getDeptTree(this.form.tenantId).then(res => {\n      //   //所有的部门\n      //   const allDep = res.data.data;\n      //   //当前登录人的信息\n      //   const userInfo= getStore({name: 'userInfo'}) || [];\n      //   getUser(userInfo.userId).then(res => {\n      //     const curruser = res.data.data;\n      //     //用户部门数据权限字符串\n      //     const userdataStr = curruser.dataAuthority;\n      //     //用户部门数据权限数组\n      //     const arr = userdataStr.split(\",\");\n      //     //遍历获取当前登录人可访问的部门\n      //     var dicData = [];\n      //     for(var i=0,len = allDep.length;i<len;i++){\n      //       if(arr.indexOf(allDep[i].id)>=0){\n      //         dicData.push(allDep[i]);\n      //       }\n      //     }\n      //     const column = this.findObject(this.option.column,\"deptId\");\n      //     column.dicData = dicData;\n      //   });\n      // });\n    }\n  }\n};",{"version":3,"sources":["contractManagement.vue"],"names":[],"mappings":"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","sourcesContent":["<!--合约管理-->\n<template>\n    <basic-container>\n        <avue-crud\n                v-show=\"!showAdd\"\n               :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               :search.sync=\"searchCondition\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\"\n               @select=\"select\"\n               @select-all=\"selectAll\">\n               <template slot=\"menuLeft\">\n                 <el-button \n                      type=\"primary\" \n                      size=\"small\"\n                      icon=\"el-icon-plus\"\n                      @click=\"addHandle\">\n                      创建合约\n                    </el-button>\n                  <el-button \n                      type=\"danger\" \n                      size=\"small\"\n                      icon=\"el-icon-delete\"\n                      plain\n                      @click=\"handleRemove\">\n                      删除\n                    </el-button>\n                    <el-button \n                      type=\"warning\"\n                      size=\"small\"\n                      plain\n                      icon=\"el-icon-download\"\n                      @click=\"handleExport\">\n                      导出\n                    </el-button>\n                </template>\n                <template slot=\"search\" slot-scope=\"{}\">\n                  <div class=\"solt\">\n                    <div class=\"solt-search\">\n                        <label  class=\"el-form-item__label\"> 客户经理:</label>\n                        <el-input placeholder=\"客户经理\"  size=\"small\" v-model=\"form.manager\"></el-input>\n                    </div>\n                    <div class=\"solt-search\">\n                        <label class=\"el-form-item__label\" > 创建时间:</label>\n                        <el-date-picker\n                          size=\"small\"\n                          v-model=\"form.createTime\"\n                          type=\"datetimerange\"\n                          value-format=\"yyyy-MM-dd HH:mm:ss\"\n                          format=\"yyyy-MM-dd HH:mm:ss\"\n                          range-separator=\"至\"\n                          start-placeholder=\"开始时间\"\n                          end-placeholder=\"结束时间\">\n                        </el-date-picker>\n                  </div>\n                  </div>\n                </template>\n                <template slot-scope=\"{type,size}\" slot=\"menu\">\n                  <el-button  :size=\"size\" :type=\"type\">编辑</el-button>\n                  <el-button  :size=\"size\" :type=\"type\">绑定权限</el-button>\n                </template>\n                <template slot=\"conNo\" slot-scope=\"{row}\">\n                  <el-button type=\"text\" size=\"mini\" @click=\"getDetail(row)\">{{row.conNo}}</el-button>\n                </template>\n        </avue-crud>\n        <add-contract v-if=\"showAdd\" @addBack=\"addBack\" :dicDataList=\"dicDataList\"></add-contract>\n        <contract-manageDetail-dailog ref=\"contractManageDetailDailog\"></contract-manageDetail-dailog>\n        <contract-export-dialog ref=\"customerExportDialog\" :exportDialogFlag=\"exportDialogFlag\"\n                :searchCondition=\"searchCondition\" :selectedRows=\"selections\" @cancel=\"cancelExportDialog\">\n        </contract-export-dialog>\n    </basic-container>\n</template>\n<script>\nimport {getPage, removeContract} from \"@/api/contract/contract/contract\";\nimport {mapGetters} from \"vuex\";\nimport {getDeptTree} from \"@/api/system/dept\";\nimport addContract from './addContract';\nimport {getStore} from \"@/util/store\";\nimport {getUser} from \"@/api/system/user\";\nimport contractManageDetailDailog from './components/contractManageDetailDailog';\nimport contractExportDialog from \"./components/contractExportDialog\";\n\nexport default {\n    components: { \n      addContract,\n      contractManageDetailDailog,\n      contractExportDialog\n    },\n    data(){\n        return{\n            showAdd:false,//true:新增窗口展示，列表页隐藏\n            exportDialogFlag: false,\n            form: {},\n            query: {},\n            dicDataList: [],//当前登录人的数据权限部门\n            loading: true,\n            page: {\n                pageSize: 10,\n                currentPage: 1,\n                total: 0\n            },\n            data:[],\n            option: {\n                calcHeight: 210,\n                searchShow: true,\n                searchMenuSpan: 6,\n                tip: false,\n                border: true,\n                index: false,\n                viewBtn:false,\n                addBtn:false,\n                editBtn:false,\n                delBtn:false,\n                selection: true,\n                column:[\n                    {\n                        label: \"合约编码\",\n                        prop: \"conNo\",\n                        search:true,\n                        searchOrder:6,\n                        display: false,\n                        slot:true\n                    },\n                    {\n                        label: \"合约名称\",\n                        prop: \"conName\",\n                        search:true,\n                        searchOrder:7,\n                        display: false\n                    },\n                    {\n                        label: \"客户名称\",\n                        prop: \"custName\",\n                        search:true,\n                        searchOrder:5,\n                        display: false\n                    },\n                    {\n                        label: \"所属部门\",\n                        prop: \"deptId\",\n                        search:true,\n                        searchOrder:4,\n                        type:\"select\",\n                        searchFilterable:true,\n                        display: false,\n                        dicData: [],\n                        props: {\n                          label: \"title\",\n                          value: \"value\"\n                        }\n                    },\n                    {\n                        label: \"合约类型\",\n                        prop: \"conType\",\n                        type:\"select\",\n                        search:true,\n                        searchOrder:2,\n                        display: false,\n                        props: {\n                          label: 'dictValue',\n                          value: 'dictKey'\n                        },\n                        dicUrl: this.getDicValue(\"contract_type\")\n                    },\n                    {\n                        label: \"合约状态\",\n                        prop: \"conState\",\n                        type:\"select\",\n                        search:true,\n                        searchOrder:3,\n                        display: false,\n                        props: {\n                          label: 'dictValue',\n                          value: 'dictKey'\n                        },\n                        dicUrl: this.getDicValue(\"contract_state\")\n                    },\n                    {\n                        label: \"合约金额\",\n                        prop: \"conAmount\",\n                        display: false\n                    },\n                    {\n                        label: \"合约起始日期\",\n                        prop: \"conStartTime\",\n                        type: \"date\",\n                        format: \"yyyy-MM-dd hh:mm:ss\",\n                        valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                        display: false\n                    },\n                    {\n                        label: \"合约起始日期\",\n                        prop: \"conEndTime\",\n                        type: \"date\",\n                        format: \"yyyy-MM-dd hh:mm:ss\",\n                        valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                        display: false\n                    }\n                ]\n            },\n          selections:{},\n          searchCondition:{}\n        }\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.contract_add, false),\n          editButton: this.vaildData(this.permission.contract_edit, false),\n          bindBtn: this.vaildData(this.permission.contract_bind, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    mounted(){\n      this.getCurrDicData();\n    },\n    methods: {\n      addContract(){\n      },\n      addHandle(){\n        this.showAdd=true;\n      },\n      addBack(){\n        this.showAdd=false;\n        this.onLoad(this.page);\n      },\n      handleRemove(){\n        let params = {};\n        params.contractRemoveIds = [];\n        for (var id in this.selections) {\n          params.contractRemoveIds.push(\"\"+id);\n        }\n        if(params.contractRemoveIds.length <= 0) {\n          this.$message({\n            type: 'warning',\n            message: '未选择合约信息！'\n          });\n          return ;\n        }\n        this.$confirm(\"是否确定删除（绑定产品和用户的合约不可删除）?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          title:\"删除合约\",\n          type: \"warning\"\n        }).then(() => {\n          removeContract(params).then((result)=>{\n            // 1 根据返回结果如果删除成功 弹出提示框\n            console.log(result);\n            if(result.data.data.length > 0) {\n              // 批量删除有不可删除信息\n              this.$confirm(result.data.msg, {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                title:\"删除合约\",\n                type: \"warning\",\n                dangerouslyUseHTMLString:true\n              }).catch(()=>{});\n            } else {\n              this.$message({\n                type: 'success',\n                message: result.data.msg\n              });\n            }\n          });\n        }).catch(()=>{\n        });\n      },\n      handleExport(){\n        this.exportDialogFlag = true;\n      },\n      cancelExportDialog() {\n        this.exportDialogFlag = false;\n      },\n      getDetail(row){\n        this.$refs.contractManageDetailDailog.openDalog(row);\n      },\n      // rowSave(row, done, loading) {\n      //   add(row).then(() => {\n      //     done();\n      //     this.onLoad(this.page);\n      //     this.$message({\n      //       type: \"success\",\n      //       message: \"操作成功!\"\n      //     });\n      //   }, error => {\n      //     window.console.log(error);\n      //     loading();\n      //   });\n      // },\n      // rowUpdate(row, index, done, loading) {\n      //   update(row).then(() => {\n      //     done();\n      //     this.onLoad(this.page);\n      //     this.$message({\n      //       type: \"success\",\n      //       message: \"操作成功!\"\n      //     });\n      //   }, error => {\n      //     window.console.log(error);\n      //     loading();\n      //   });\n      // },\n      // rowDel(row) {\n      //   this.$confirm(\"确定将选择数据删除?\", {\n      //     confirmButtonText: \"确定\",\n      //     cancelButtonText: \"取消\",\n      //     type: \"warning\"\n      //   })\n      //     .then(() => {\n      //       return remove(row.id);\n      //     })\n      //     .then(() => {\n      //       this.onLoad(this.page);\n      //       this.$message({\n      //         type: \"success\",\n      //         message: \"操作成功!\"\n      //       });\n      //     });\n      // },\n      // handleDelete() {\n      //   if (this.selectionList.length === 0) {\n      //     this.$message.warning(\"请选择至少一条数据\");\n      //     return;\n      //   }\n      //   this.$confirm(\"确定将选择数据删除?\", {\n      //     confirmButtonText: \"确定\",\n      //     cancelButtonText: \"取消\",\n      //     type: \"warning\"\n      //   })\n      //     .then(() => {\n      //       return remove(this.ids);\n      //     })\n      //     .then(() => {\n      //       this.onLoad(this.page);\n      //       this.$message({\n      //         type: \"success\",\n      //         message: \"操作成功!\"\n      //       });\n      //       this.$refs.crud.toggleSelection();\n      //     });\n      // },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          this.getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.form.createTime=\"\";\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        console.log(params);\n        this.query = params;\n        this.query.custManager = this.form.manager;\n        if(this.form.createTime){\n          this.query.startCreateTime = this.form.createTime[0];\n          this.query.endCreateTime = this.form.createTime[1];\n        }\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      checkRemove(selection, row) {\n        // 判断是否取消选中\n        let hasRemoveFlag = true;\n        for(var i = 0; i < selection.length; i++) {\n          if(selection[i].id == row.id) {\n            hasRemoveFlag = false;\n            break;\n          }\n        }\n        return hasRemoveFlag;\n      },\n      selectAll(selection){\n        for(let i = 0; i < selection.length; i++) {\n          this.select(selection, selection[i]);\n        }\n      },\n      select(selection, row){\n        // 判断是否取消选中\n        let hasRemoveFlag = this.checkRemove(selection, row);\n        if(hasRemoveFlag) {\n          delete this.selections[row.id];\n        } else {\n          this.selections[row.id] = row;\n        }\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      //获取当前登录人的数据权限部门信息\n      getCurrDicData(){\n        getDeptTree(this.form.tenantId).then(res => {\n          //所有的部门\n          const allDep = res.data.data;\n          //当前登录人的信息\n          const userInfo= getStore({name: 'userInfo'}) || [];\n          getUser(userInfo.userId).then(res => {\n            const curruser = res.data.data;\n            //用户部门数据权限字符串\n            const userdataStr = curruser.dataAuthority;\n            //用户部门数据权限数组\n            const arr = userdataStr.split(\",\");\n            //遍历获取当前登录人可访问的部门\n            var dicData = [];\n            for(var i=0,len = allDep.length;i<len;i++){\n              if(arr.indexOf(allDep[i].id)>=0){\n                dicData.push(allDep[i]);\n              }\n            }\n            this.dicDataList = dicData;\n            const column = this.findObject(this.option.column,\"deptId\");\n            column.dicData = dicData;\n          });\n        });\n      },\n      onLoad(page, params = {}) {\n        this.loading = false;\n        getPage(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n        // getDeptTree(this.form.tenantId).then(res => {\n        //   //所有的部门\n        //   const allDep = res.data.data;\n        //   //当前登录人的信息\n        //   const userInfo= getStore({name: 'userInfo'}) || [];\n        //   getUser(userInfo.userId).then(res => {\n        //     const curruser = res.data.data;\n        //     //用户部门数据权限字符串\n        //     const userdataStr = curruser.dataAuthority;\n        //     //用户部门数据权限数组\n        //     const arr = userdataStr.split(\",\");\n        //     //遍历获取当前登录人可访问的部门\n        //     var dicData = [];\n        //     for(var i=0,len = allDep.length;i<len;i++){\n        //       if(arr.indexOf(allDep[i].id)>=0){\n        //         dicData.push(allDep[i]);\n        //       }\n        //     }\n        //     const column = this.findObject(this.option.column,\"deptId\");\n        //     column.dicData = dicData;\n        //   });\n        // });\n      }\n    }\n}\n</script>\n<style lang=\"scss\">\n.solt{\n  display: flex;\n  width: 50%;\n.solt-search{\n  padding-left:10px;\n  padding-right:10px; \n  width:100%;\n  display: flex;\n  .el-form-item__label{\n    width: 110px;\n  }\n}\n}\n</style>\n"],"sourceRoot":"src/views/contract/contract"}]}