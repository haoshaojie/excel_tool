{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\blackList\\blackwhitelistaudit.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\blackList\\blackwhitelistaudit.vue","mtime":1618541026410},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getDetail, audit, choosecustomer, listcustomer } from \"@/api/contract/blackList/blackwhitelistaudit\";\nimport { mapGetters } from \"vuex\";\nvar DIC = [{\n  label: '审批通过',\n  value: \"审批通过\"\n}, {\n  label: '审批不通过',\n  value: \"审批不通过\"\n}];\nexport default {\n  data: function data() {\n    var _this = this;\n\n    var validateAuditResult = function validateAuditResult(rule, value, callback) {\n      if (value === '') {\n        callback();\n      } else {\n        var textReg = new RegExp(\"[\\u4E00-\\u9FA5]\", \"g\");\n\n        if (textReg.test(value)) {\n          callback();\n        } else {\n          callback(new Error('不能输入特殊字符'));\n        }\n      }\n    };\n\n    return {\n      statusList: DIC,\n      type: {},\n      showColumn: ['exchange', 'dataCode', 'type', 'custName', 'custCode', 'auditState', 'createUserName', 'createTime', 'remark'],\n      tabsOption: {\n        column: [{\n          label: '待审核',\n          prop: 'tab1'\n        }, {\n          label: '已审核',\n          prop: 'tab2'\n        }]\n      },\n      showState: false,\n      form: {},\n      search: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      noAuditOption: {\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 4,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: false,\n        viewBtnText: \"详情\",\n        addBtn: false,\n        delBtn: false,\n        editBtn: true,\n        editBtnText: \"选择客户\",\n        selection: true,\n        dialogWidth: \"35%\",\n        menuPosition: \"center\",\n        column: [{\n          label: \"交易所\",\n          prop: \"exchange\",\n          order: 1,\n          search: true,\n          searchOrder: 7,\n          labelslot: true,\n          editDisabled: true\n        }, {\n          label: \"数据编码\",\n          prop: \"dataCode\",\n          order: 2,\n          search: true,\n          searchOrder: 5,\n          editDisabled: true\n        }, {\n          label: \"类型\",\n          prop: \"type\",\n          order: 3,\n          type: 'select',\n          dicUrl: this.getDicValue(this.CONSTANT.BLACKLIST_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          search: true,\n          searchOrder: 3,\n          editDisabled: true\n        }, {\n          label: \"客户名称\",\n          prop: \"custName\",\n          order: 4,\n          search: true,\n          searchOrder: 6,\n          editDisabled: true\n        }, {\n          label: \"客户编码\",\n          prop: \"custCode\",\n          order: 5,\n          search: true,\n          searchOrder: 4,\n          type: \"select\",\n          searchslot: true,\n          dicData: [],\n          props: {\n            label: \"custCode\",\n            value: \"custCode\"\n          },\n          change: function change(_ref) {\n            var value = _ref.value;\n\n            _this.custCodeList.forEach(function (item) {\n              if (item.custCode == value) {\n                _this.form.custId = item.id;\n                console.log(\"客户表id\", _this.form.custId);\n              }\n            });\n          }\n        }, {\n          label: \"客户表id\",\n          prop: \"custId\",\n          addDisplay: false,\n          editDisplay: false,\n          viewDisplay: false,\n          hide: true\n        }, {\n          label: \"申请人\",\n          prop: \"createUserName\",\n          editDisplay: false,\n          order: 6\n        }, {\n          label: \"申请时间\",\n          prop: \"createTime\",\n          editDisplay: false,\n          order: 7\n        }, {\n          label: \"审核人\",\n          prop: \"auditUser\",\n          editDisplay: false,\n          hide: true,\n          order: 40\n        }, {\n          label: \"审核时间\",\n          prop: \"auditTime\",\n          editDisplay: false,\n          order: 8\n        }, {\n          label: \"审核状态\",\n          prop: \"auditState\",\n          editDisplay: false,\n          order: 9\n        }, {\n          label: \"审核意见\",\n          prop: \"auditResult\",\n          editDisplay: false,\n          hide: true,\n          order: 9\n        }, {\n          label: \"申请时间\",\n          prop: \"createTimeRange\",\n          editDisplay: false,\n          viewDisplay: false,\n          hide: true,\n          search: true,\n          searchOrder: 8,\n          type: \"daterange\",\n          searchRange: true,\n          valueFormat: \"yyyy-MM-dd\",\n          props: {\n            startPlaceholder: \"开始日期\",\n            endPlaceholder: \"结束日期\",\n            rangeSeparator: '至'\n          }\n        }]\n      },\n      auditDialog: false,\n      auditObj: {},\n      auditOption: {\n        column: [{\n          label: '审核方式',\n          prop: 'auditState',\n          type: 'radio',\n          span: 24,\n          border: false,\n          dicData: DIC,\n          rules: [{\n            required: true,\n            message: \"请勾选审核方式\",\n            trigger: \"change\"\n          }]\n        }, {\n          label: \"审核意见\",\n          prop: \"auditResult\",\n          type: \"textarea\",\n          maxRows: 4,\n          minRows: 3,\n          maxlength: 50,\n          span: 24,\n          showWordLimit: true,\n          rules: [{\n            validator: validateAuditResult,\n            trigger: 'blur'\n          }]\n        }]\n      },\n      custCodeList: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.blackwhitelist_add, false),\n        viewBtn: this.vaildData(this.permission.blackwhitelist_view, false),\n        editBtn: this.vaildData(this.permission.blackwhitelist_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  mounted: function mounted() {\n    this.type = this.tabsOption.column[0];\n\n    if (this.type.prop == 'tab1') {\n      this.query.auditState = \"\";\n    }\n  },\n  watch: {\n    'form.custName': function formCustName() {\n      var _this2 = this;\n\n      var column = this.findObject(this.noAuditOption.column, \"custCode\");\n\n      if (this.form.custName != '' && this.form.custName != undefined) {\n        listcustomer(1, 20, {\n          custName: this.form.custName\n        }).then(function (res) {\n          _this2.custCodeList = res.data.data.records.length > 0 ? res.data.data.records : [_defineProperty({\n            custCode: \"\"\n          }, \"custCode\", \"无数据\")];\n          column.dicData = _this2.custCodeList;\n        });\n      }\n    }\n  },\n  methods: {\n    handleChange: function handleChange(column) {\n      this.showState = !this.showState;\n      this.type = column;\n\n      if (column.prop == 'tab2') {\n        this.showColumn.push('auditTime');\n        this.noAuditOption.viewBtn = this.showState;\n        this.noAuditOption.editBtn = !this.showState;\n        this.noAuditOption.selection = !this.showState;\n        this.$refs.crud.searchReset();\n      } else {\n        for (var i in this.showColumn) {\n          if (this.showColumn[i] == 'auditTime') {\n            this.showColumn.splice(i, 1);\n          }\n        }\n\n        this.noAuditOption.viewBtn = this.showState;\n        this.noAuditOption.editBtn = !this.showState;\n        this.noAuditOption.selection = !this.showState;\n        this.$refs.crud.searchReset();\n      }\n    },\n    showAuditDialog: function showAuditDialog(row) {\n      if (row) {\n        this.auditObj.ids = row.id;\n        this.auditDialog = true;\n      } else {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n\n        this.auditObj.ids = this.ids;\n        this.auditDialog = true;\n      }\n    },\n    handleAudit: function handleAudit(auditForm, done, loading) {\n      var _this3 = this;\n\n      audit(auditForm).then(function () {\n        done();\n        _this3.auditDialog = false;\n\n        _this3.$refs.auditForm.resetForm();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        done();\n        window.console.log(error);\n\n        _this3.$refs.auditForm.resetForm(); // loading();\n\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this4 = this;\n\n      choosecustomer(row).then(function () {\n        done();\n\n        _this4.$refs.crud.searchReset();\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    beforeClose: function beforeClose(done, type) {\n      this.custCodeList = [_defineProperty({\n        custCode: \"\"\n      }, \"custCode\", \"无数据\")];\n      var column = this.findObject(this.noAuditOption.column, \"custCode\");\n      column.dicData = this.custCodeList;\n      this.$forceUpdate();\n      done();\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this5 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          done();\n          _this5.form = res.data.data;\n        }, function (error) {\n          window.console.log(error);\n\n          _this5.onLoad(_this5.page);\n        });\n      }\n    },\n    searchReset: function searchReset() {\n      this.form = {};\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this6 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n\n      if (!this.type.prop || this.type.prop == 'tab1') {\n        this.query.auditCheckTab = '待审核';\n      } else {\n        this.query.auditCheckTab = '已审核';\n      }\n\n      if (this.query.createTimeRange) {\n        this.query.startTime = this.query.createTimeRange[0];\n        this.query.endTime = this.query.createTimeRange[1];\n        this.query.createTimeRange = null;\n      }\n\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this6.page.total = data.total;\n        _this6.data = data.records;\n        _this6.loading = false;\n\n        _this6.selectionClear();\n      });\n    }\n  }\n};",{"version":3,"sources":["blackwhitelistaudit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-tabs :option=\"tabsOption\" @change=\"handleChange\"></avue-tabs>\r\n      <avue-crud :option=\"noAuditOption\"\r\n                        :search.sync=\"search\"\r\n                        :show-column.sync=\"showColumn\"\r\n                        :table-loading=\"loading\"\r\n                        :data=\"data\"\r\n                        :page.sync=\"page\"\r\n                        :permission=\"permissionList\"\r\n                        :before-close=\"beforeClose\"\r\n                        :before-open=\"beforeOpen\"\r\n                        v-model=\"form\"\r\n                        ref=\"crud\"\r\n                        @row-update=\"rowUpdate\"\r\n                        @search-change=\"searchChange\"\r\n                        @search-reset=\"searchReset\"\r\n                        @selection-change=\"selectionChange\"\r\n                        @current-change=\"currentChange\"\r\n                        @size-change=\"sizeChange\"\r\n                        @on-load=\"onLoad\">\r\n        <template slot-scope=\"\" slot=\"custCodeSearch\">\r\n          <el-input placeholder=\"请输入客户编码\" v-model=\"search.custCode\"></el-input>\r\n        </template>\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\"\r\n        size=\"small\"\r\n        class=\"el-menu-button\"\r\n        v-show=\"!showState\"\r\n        v-if=\"permission.blackwhitelistaudit_audit\"\r\n        @click=\"showAuditDialog(null)\">审批</el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\" v-show=\"!showState\" size=\"small\" v-if=\"permission.blackwhitelistaudit_audit\" @click.native=\"showAuditDialog(scope.row)\">审批</el-button>\r\n      </template>\r\n    <template slot-scope=\"\" slot=\"search\">\r\n      <el-form ref=\"form\" :model=\"search\" label-width=\"90px\" v-show=\"showState\" class=\"el-form-search\">\r\n            <el-form-item label=\"审核状态：\">\r\n              <el-select placeholder=\"请选择\" size=\"small\" v-model=\"search.auditState\">\r\n                <el-option\r\n                v-for=\"item in statusList\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n        </el-form>\r\n      </template>\r\n    </avue-crud>\r\n      <el-dialog title=\"审批\"\r\n               :visible.sync=\"auditDialog\"\r\n               width=\"50%\">\r\n        <avue-form ref=\"auditForm\" :option=\"auditOption\" v-model=\"auditObj\" @submit=\"handleAudit\"></avue-form>\r\n      </el-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, audit, choosecustomer,listcustomer} from \"@/api/contract/blackList/blackwhitelistaudit\";\r\n  import {mapGetters} from \"vuex\";\r\n  const DIC=[{\r\n    label:'审批通过',\r\n    value:\"审批通过\"\r\n  },{\r\n    label:'审批不通过',\r\n    value:\"审批不通过\"\r\n  }];\r\n  export default {\r\n    data(){\r\n      var validateAuditResult = (rule, value, callback)=>{\r\n        if (value === '') {\r\n          callback();\r\n        } else {\r\n          let textReg = new RegExp(\"[\\u4E00-\\u9FA5]\",\"g\");\r\n          if (textReg.test(value)){\r\n            callback();\r\n          }else {\r\n            callback(new Error('不能输入特殊字符'));\r\n          }\r\n        }\r\n      };\r\n      return {\r\n        statusList:DIC,\r\n        type:{},\r\n        showColumn:['exchange','dataCode','type','custName','custCode','auditState','createUserName','createTime','remark'],\r\n        tabsOption: {\r\n          column: [{\r\n            label: '待审核',\r\n            prop: 'tab1',\r\n          }, {\r\n            label: '已审核',\r\n            prop: 'tab2',\r\n          }],\r\n        },\r\n        showState:false,\r\n        form: {},\r\n        search:{},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        noAuditOption: {\r\n          calcHeight: 210,\r\n          searchShow: true,\r\n          searchMenuSpan:4,\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          viewBtn: false,\r\n          viewBtnText:\"详情\",\r\n          addBtn: false,\r\n          delBtn: false,\r\n          editBtn:true,\r\n          editBtnText:\"选择客户\",\r\n          selection: true,\r\n          dialogWidth:\"35%\",\r\n          menuPosition:\"center\",\r\n          column: [\r\n            {\r\n              label: \"交易所\",\r\n              prop: \"exchange\",\r\n              order:1,\r\n              search:true,\r\n              searchOrder:7,\r\n              labelslot:true,\r\n              editDisabled:true,\r\n            },\r\n            {\r\n              label: \"数据编码\",\r\n              prop: \"dataCode\",\r\n              order:2,\r\n              search:true,\r\n              searchOrder:5,\r\n              editDisabled:true\r\n            },\r\n            {\r\n              label: \"类型\",\r\n              prop: \"type\",\r\n              order:3,\r\n              type: 'select',\r\n              dicUrl: this.getDicValue(this.CONSTANT.BLACKLIST_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              search:true,\r\n              searchOrder:3,\r\n              editDisabled:true\r\n            },\r\n            {\r\n              label: \"客户名称\",\r\n              prop: \"custName\",\r\n              order:4,\r\n              search:true,\r\n              searchOrder:6,\r\n              editDisabled:true\r\n            },\r\n            {\r\n              label: \"客户编码\",\r\n              prop: \"custCode\",\r\n              order:5,\r\n              search:true,\r\n              searchOrder:4,\r\n              type:\"select\",\r\n              searchslot:true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"custCode\",\r\n                value: \"custCode\"\r\n              },\r\n              change:({value})=>{\r\n              this.custCodeList.forEach(item=>{\r\n                  if(item.custCode==value){\r\n                    this.form.custId=item.id;\r\n                    console.log(\"客户表id\",this.form.custId);\r\n                  }\r\n                })\r\n              },\r\n            },\r\n            {\r\n              label: \"客户表id\",\r\n              prop: \"custId\",\r\n              addDisplay:false,\r\n              editDisplay:false,\r\n              viewDisplay:false,\r\n              hide:true,\r\n            },\r\n            {\r\n              label: \"申请人\",\r\n              prop: \"createUserName\",\r\n              editDisplay:false,\r\n              order:6,\r\n            },\r\n            {\r\n              label: \"申请时间\",\r\n              prop: \"createTime\",\r\n              editDisplay:false,\r\n              order:7,\r\n            },\r\n            {\r\n              label: \"审核人\",\r\n              prop: \"auditUser\",\r\n              editDisplay:false,\r\n              hide:true,\r\n              order:40,\r\n            },\r\n            {\r\n              label: \"审核时间\",\r\n              prop: \"auditTime\",\r\n              editDisplay:false,\r\n              order:8\r\n            },\r\n            {\r\n              label: \"审核状态\",\r\n              prop: \"auditState\",\r\n              editDisplay:false,\r\n              order:9\r\n            },\r\n            {\r\n              label: \"审核意见\",\r\n              prop: \"auditResult\",\r\n              editDisplay:false,\r\n              hide: true,\r\n              order:9\r\n            },\r\n            {\r\n              label: \"申请时间\",\r\n              prop: \"createTimeRange\",\r\n              editDisplay:false,\r\n              viewDisplay:false,\r\n              hide:true,\r\n              search:true,\r\n              searchOrder:8,\r\n              type:\"daterange\",\r\n              searchRange:true,\r\n              valueFormat: \"yyyy-MM-dd\",\r\n              props: {\r\n                startPlaceholder: \"开始日期\",\r\n                endPlaceholder: \"结束日期\",\r\n                rangeSeparator:'至'\r\n              },\r\n            }\r\n          ]\r\n        },\r\n        auditDialog:false,\r\n        auditObj:{},\r\n        auditOption:{\r\n          column: [\r\n            {\r\n              label: '审核方式',\r\n              prop: 'auditState',\r\n              type: 'radio',\r\n              span:24,\r\n              border:false,\r\n              dicData:DIC,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请勾选审核方式\",\r\n                trigger: \"change\"\r\n              }],\r\n            },\r\n            {\r\n              label: \"审核意见\",\r\n              prop: \"auditResult\",\r\n              type:\"textarea\",\r\n              maxRows:4,\r\n              minRows:3,\r\n              maxlength:50,\r\n              span:24,\r\n              showWordLimit:true,\r\n              rules: [{ validator: validateAuditResult, trigger: 'blur' }]\r\n            },\r\n          ]\r\n        },\r\n        custCodeList:[]\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.blackwhitelist_add, false),\r\n          viewBtn: this.vaildData(this.permission.blackwhitelist_view, false),\r\n          editBtn: this.vaildData(this.permission.blackwhitelist_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    mounted(){\r\n      this.type = this.tabsOption.column[0];\r\n      if (this.type.prop =='tab1'){\r\n        this.query.auditState = \"\";\r\n      }\r\n    },\r\n    watch:{\r\n      'form.custName'() {\r\n        const column = this.findObject(this.noAuditOption.column, \"custCode\");\r\n        if (this.form.custName!=''&&this.form.custName!=undefined) {\r\n          listcustomer(1, 20, {custName:this.form.custName}).then(res => {\r\n            this.custCodeList=res.data.data.records.length>0?res.data.data.records:[{custCode:\"\",custCode:\"无数据\"}];\r\n            column.dicData=this.custCodeList;\r\n          });\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      handleChange(column) {\r\n        this.showState=!this.showState;\r\n        this.type = column;\r\n        if(column.prop=='tab2'){\r\n          this.showColumn.push('auditTime');\r\n          this.noAuditOption.viewBtn=this.showState;\r\n          this.noAuditOption.editBtn=!this.showState;\r\n          this.noAuditOption.selection=!this.showState;\r\n          this.$refs.crud.searchReset();\r\n        }else{\r\n          for (const i in this.showColumn) {\r\n            if(this.showColumn[i]=='auditTime'){\r\n              this.showColumn.splice(i,1);\r\n            }\r\n          }\r\n          this.noAuditOption.viewBtn=this.showState;\r\n          this.noAuditOption.editBtn=!this.showState;\r\n          this.noAuditOption.selection=!this.showState;\r\n          this.$refs.crud.searchReset();\r\n        }\r\n      },\r\n      showAuditDialog(row){\r\n        if (row){\r\n          this.auditObj.ids = row.id;\r\n          this.auditDialog = true;\r\n        } else {\r\n          if (this.selectionList.length === 0) {\r\n            this.$message.warning(\"请选择至少一条数据\");\r\n            return;\r\n          }\r\n          this.auditObj.ids = this.ids;\r\n          this.auditDialog = true;\r\n        }\r\n      },\r\n      handleAudit(auditForm,done,loading){\r\n        audit(auditForm).then(() => {\r\n          done();\r\n        this.auditDialog = false;\r\n        this.$refs.auditForm.resetForm();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n          done();\r\n          window.console.log(error);\r\n          this.$refs.auditForm.resetForm();\r\n          // loading();\r\n          });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        choosecustomer(row).then(() => {\r\n          done();\r\n        this.$refs.crud.searchReset();\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      beforeClose(done, type){\r\n        this.custCodeList=[{custCode:\"\",custCode:\"无数据\"}];\r\n        const column = this.findObject(this.noAuditOption.column, \"custCode\");\r\n        column.dicData=this.custCodeList;\r\n        this.$forceUpdate();\r\n        done();\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            done();\r\n          this.form = res.data.data;\r\n        }, error => {\r\n            window.console.log(error);\r\n            this.onLoad(this.page);\r\n          });\r\n        }\r\n      },\r\n      searchReset() {\r\n        this.form={};\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage){\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize){\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        if (!this.type.prop || this.type.prop == 'tab1') {\r\n          this.query.auditCheckTab = '待审核';\r\n        }else {\r\n          this.query.auditCheckTab = '已审核';\r\n        }\r\n        if (this.query.createTimeRange){\r\n          this.query.startTime = this.query.createTimeRange[0];\r\n          this.query.endTime = this.query.createTimeRange[1];\r\n          this.query.createTimeRange = null;\r\n        }\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n        this.page.total = data.total;\r\n        this.data = data.records;\r\n        this.loading = false;\r\n        this.selectionClear();\r\n      });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.el-menu-button{\r\n  padding: 9px 25px;\r\n}\r\n.el-form-search{\r\n  width: 24.4%;\r\n  .el-form-item{\r\n    margin-bottom: 14px;\r\n  }\r\n  .el-form-item__label{\r\n    padding:0;\r\n    line-height: 32px;\r\n  }\r\n  .el-form-item__content{\r\n    line-height: 32px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/contract/blackList"}]}