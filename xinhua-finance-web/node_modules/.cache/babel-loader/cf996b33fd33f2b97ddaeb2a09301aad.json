{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\userAccount\\enterpriseAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\userAccount\\enterpriseAccount.vue","mtime":1618794737786},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { listPublic, listUser } from \"@/api/contract/userAccount/enterpriseAccount\";\nimport { resetLock, update } from \"@/api/contract/userAccount/account\";\nimport { sendTemplateMail } from \"@/api/contract/userAccount/mailRecord\";\nimport { mapGetters } from \"vuex\";\nimport userDetailDialog from \"./userDetailDialog\";\nimport publicDetailDialog from \"./publicDetailDialog\";\nimport publicFormDialog from \"./publicFormDialog\";\nimport resetPasswordDialog from \"./resetPasswordDialog\";\nimport accountExportDialog from \"./accountExportDialog\";\nvar TEMPLATE_FILE = {\n  welcome: \"Welcome.ftl\",\n  resetPassword: \"ResetPassword.ftl\"\n};\nexport default {\n  components: {\n    userDetailDialog: userDetailDialog,\n    publicDetailDialog: publicDetailDialog,\n    publicFormDialog: publicFormDialog,\n    resetPasswordDialog: resetPasswordDialog,\n    accountExportDialog: accountExportDialog\n  },\n  data: function data() {\n    var _option;\n\n    return {\n      showExportDialog: false,\n      exportColumns: [],\n      showResetPasswordDialog: false,\n      accountId: \"\",\n      hasPhone: false,\n      hasEmail: false,\n      showUserDetail: false,\n      showPublicDetail: false,\n      showPublicForm: false,\n      publicFormTitle: '',\n      publicFormData: {},\n      form: {},\n      query: {},\n      loading: false,\n      createTimeArr: [],\n      updateTimeArr: [],\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      type: {},\n      optionTab: {\n        column: [{\n          label: '用户账号',\n          prop: 'userAccount'\n        }, {\n          label: '公共账号',\n          prop: 'commonAccount'\n        }]\n      },\n      option: (_option = {\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: true,\n        selection: true,\n        addBtn: false\n      }, _defineProperty(_option, \"viewBtn\", false), _defineProperty(_option, \"delBtn\", false), _defineProperty(_option, \"editBtn\", true), _defineProperty(_option, \"column\", [{\n        label: '用户账号',\n        prop: 'userAccount',\n        search: true,\n        slot: true,\n        editDisabled: true\n      }, {\n        label: '邮箱',\n        prop: 'email',\n        search: true\n      }, {\n        label: '手机号码',\n        prop: 'phone',\n        search: true\n      }, {\n        label: '姓名',\n        prop: 'userName',\n        search: true,\n        editDisabled: true\n      }, {\n        label: '客户名称',\n        prop: 'customerName',\n        search: true,\n        editDisabled: true\n      }, {\n        label: '用户状态',\n        prop: 'userState',\n        search: true\n      }, {\n        label: '账号状态',\n        prop: 'accountState',\n        search: true,\n        editDisabled: true\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        searchslot: true,\n        search: true,\n        editDisabled: true\n      }, {\n        label: '最后修改时间',\n        prop: 'updateTime',\n        searchslot: true,\n        search: true,\n        editDisabled: true\n      }]), _option),\n      userAccountColumn: [{\n        label: \"账号ID\",\n        prop: \"accId\",\n        hide: true,\n        addDisplay: false,\n        editDisplay: false\n      }, {\n        label: '用户账号',\n        prop: 'userAccount',\n        search: true,\n        slot: true,\n        editDisabled: true\n      }, {\n        label: '邮箱',\n        prop: 'userEmail',\n        search: true\n      }, {\n        label: '手机号码',\n        prop: 'userPhone',\n        search: true\n      }, {\n        label: '姓名',\n        prop: 'userName',\n        search: true,\n        editDisabled: true\n      }, {\n        label: '客户名称',\n        prop: 'customerName',\n        search: true,\n        editDisabled: true\n      }, {\n        label: '用户状态',\n        prop: 'userState',\n        search: true\n      }, {\n        label: '账号状态',\n        prop: 'accountState',\n        search: true,\n        editDisabled: true,\n        editDisplay: false,\n        dicUrl: this.getDicValue(this.CONSTANT.ACC_STATUS),\n        props: {\n          label: \"dictValue\",\n          value: \"dictKey\"\n        },\n        dataType: 'number'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        searchslot: true,\n        search: true,\n        editDisabled: true,\n        editDisplay: false\n      }, {\n        label: '最后修改时间',\n        prop: 'updateTime',\n        searchslot: true,\n        search: true,\n        editDisabled: true,\n        editDisplay: false\n      }],\n      publicAccountColumn: [{\n        label: 'IP',\n        prop: 'ip',\n        hide: true,\n        search: true\n      }, {\n        label: '客户名称',\n        prop: 'ip',\n        hide: true,\n        search: true,\n        editDisabled: true\n      }, {\n        label: '用户账号',\n        prop: 'userAccount',\n        slot: true,\n        editDisabled: true\n      }, {\n        label: '并发',\n        prop: 'concurrent'\n      }, {\n        label: '所属客户',\n        prop: 'customers'\n      }, {\n        label: '联系人',\n        prop: 'contacts',\n        search: true\n      }, {\n        label: '联系人手机号码',\n        prop: 'contactsTel'\n      }, {\n        label: '联系人邮箱',\n        prop: 'contactsEmail'\n      }, {\n        label: '创建时间',\n        prop: 'createTime',\n        searchslot: true,\n        search: true\n      }, {\n        label: '最后修改时间',\n        prop: 'updateTime',\n        searchslot: true,\n        search: true\n      }],\n      data: [{\n        userAccount: \"XHCJ0001\",\n        userEmail: \"18410379896\",\n        userPhone: \"18410379896\",\n        nickName: \"\",\n        userName: \"\",\n        customerName: \"\",\n        userState: \"\",\n        accountState: \"\",\n        createTime: \"\",\n        updateTime: \"\"\n      }, {\n        userAccount: \"XHCJ0001\",\n        userEmail: \"18410379896\",\n        userPhone: \"\",\n        nickName: \"\",\n        userName: \"\",\n        customerName: \"\",\n        userState: \"\",\n        accountState: \"\",\n        createTime: \"\",\n        updateTime: \"\"\n      }],\n      templateMailParam: {\n        tempFile: \"\",\n        receivers: []\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.type = this.optionTab.column[0];\n    this.option.column.forEach(function (item) {\n      if (!item.hide) {\n        _this.exportColumns.push({\n          label: item.label,\n          prop: item.prop\n        });\n      }\n    });\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.personaluser_add, false),\n        viewBtn: this.vaildData(this.permission.personaluser_view, false),\n        delBtn: this.vaildData(this.permission.personaluser_delete, false),\n        editBtn: this.vaildData(this.permission.personaluser_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  methods: {\n    closeExportDialog: function closeExportDialog() {\n      this.showExportDialog = false;\n      this.exportColumns = [];\n    },\n    closeFormDialog: function closeFormDialog() {\n      this.publicFormData = null;\n      this.showPublicForm = false;\n    },\n    handleUpdate: function handleUpdate(row) {\n      this.publicFormTitle = \"编辑公共账号\";\n      this.publicFormData = row;\n      this.showPublicForm = true;\n      console.log(\"formEdit\", \"=========================\");\n      console.log(\"publicFormData\", this.publicFormData);\n    },\n    handleLockOrUnlock: function handleLockOrUnlock(row) {\n      var _this2 = this;\n\n      var message = row.accountState == 1 ? \"确认锁定该账号吗？\" : \"确认解锁该账号吗\";\n      this.$confirm(message, {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    resetPassword: function resetPassword(row) {\n      this.showResetPasswordDialog = true;\n\n      if (typeof row.userPhone == 'string' && row.userPhone.length > 0) {\n        this.hasPhone = true;\n      }\n\n      if (typeof row.userEmail == 'string' && row.userEmail.length > 0) {\n        this.hasEmail = true;\n      }\n\n      this.accountId = row.accId;\n    },\n    closeResetPasswordDialog: function closeResetPasswordDialog() {\n      this.showResetPasswordDialog = false;\n      this.accountId = null;\n      this.hasPhone = false;\n      this.hasEmail = false;\n    },\n    detailDialog: function detailDialog(row) {\n      if (this.type.prop == 'userAccount') {\n        this.showUserDetail = true;\n      } else {\n        this.showPublicDetail = true;\n      }\n    },\n    closeDetailDialog: function closeDetailDialog() {\n      if (this.type.prop == 'userAccount') {\n        this.showUserDetail = false;\n      } else {\n        this.showPublicDetail = false;\n      }\n    },\n    handleChange: function handleChange(column) {\n      this.type = column;\n\n      if (this.type.prop == 'userAccount') {\n        this.option.editBtn = true;\n      } else {\n        this.option.editBtn = false;\n      }\n\n      this.onLoad(this.page);\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this3 = this;\n\n      add(row).then(function () {\n        done();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this4 = this;\n\n      this.$refs.crud.rowUpdate();\n      update(row).then(function () {\n        done();\n\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    //欢迎邮件\n    welcomeEmail: function welcomeEmail(row) {\n      var _this6 = this;\n\n      var msg = \"是否发送欢迎邮件？\";\n      this.templateMailParam.tempFile = TEMPLATE_FILE.welcome;\n      this.templateMailParam.receivers = [];\n\n      if (row) {\n        this.templateMailParam.receivers.push({\n          accId: row.accId,\n          email: row.userEmail,\n          account: row.accId,\n          accountExpire: row.accountExpire,\n          initPassword: row.initPassword,\n          userName: row.userName,\n          productLink: row.productLink,\n          orderNum: row.orderNum\n        });\n      } else {\n        if (this.selectionList.length === 0) {\n          this.$message.warning(\"请选择至少一条数据\");\n          return;\n        }\n\n        msg = \"是否批量发送欢迎邮件？\";\n        this.templateMailParam.receivers = this.selectionList.map(function (item) {\n          return {\n            accId: item.accId,\n            email: item.userEmail,\n            account: item.accId,\n            accountExpire: item.accountExpire,\n            initPassword: item.initPassword,\n            userName: item.userName,\n            productLink: item.productLink,\n            orderNum: item.orderNum\n          };\n        });\n      }\n\n      this.$confirm(msg, {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        //执行发送欢迎邮件逻辑\n        return sendTemplateMail(_this6.templateMailParam);\n      }).then(function () {\n        _this6.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this6.$refs.crud.toggleSelection();\n      });\n    },\n    //邮件记录\n    mailRecord: function mailRecord() {\n      this.$router.push({\n        path: '/contract/userAccount/mailRecord'\n      });\n    },\n    closeDialog: function closeDialog(val) {\n      console.log(val);\n    },\n    //邮件模板\n    mailTemlate: function mailTemlate() {\n      this.$router.push({\n        path: '/contract/userAccount/mailTemplate'\n      });\n    },\n    //启用按钮\n    enableBtn: function enableBtn() {\n      this.openDialog = true;\n    },\n    //停用\n    disableBtn: function disableBtn() {\n      this.openDialog = true;\n    },\n    //导出\n    handleExport: function handleExport() {\n      this.showExportDialog = true;\n    },\n    //公共账号新增\n    commonAccountAdd: function commonAccountAdd() {\n      this.publicFormTitle = \"新增公共账号\";\n      this.publicFormData = null;\n      this.showPublicForm = true;\n      console.log(\"formAdd\", \"=========================\");\n    },\n    //公共账号删除\n    commonAccountDel: function commonAccountDel() {\n      this.$refs.crud.rowDel();\n    },\n    handleDelete: function handleDelete() {\n      var _this7 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this7.ids);\n      }).then(function () {\n        _this7.onLoad(_this7.page);\n\n        _this7.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this7.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        if (this.type.prop == 'userAccount') {} else {}\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = []; // this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      //this.loading = true;\n      if (this.type.prop == 'userAccount') {\n        this.option.column = this.userAccountColumn; // listUser(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        //   this.option.column = this.userAccountColumn;\n        //   const data = res.data.data;\n        //   this.page.total = data.total;\n        //   this.data = data.records;\n        //   this.loading = false;\n        //   this.selectionClear();\n        // });\n      } else {\n        this.option.column = this.publicAccountColumn; // listPublic(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        //   this.option.column = this.publicAccountColumn;\n        //   const data = res.data.data;\n        //   this.page.total = data.total;\n        //   this.data = data.records;\n        //   this.loading = false;\n        //   this.selectionClear();\n        // });\n      }\n    }\n  }\n};",{"version":3,"sources":["enterpriseAccount.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-tabs :option=\"optionTab\" @change=\"handleChange\"></avue-tabs>\r\n    <div>\r\n      <avue-crud :option=\"option\"\r\n                 :table-loading=\"loading\"\r\n                 :data=\"data\"\r\n                 :page.sync=\"page\"\r\n                 :permission=\"permissionList\"\r\n                 :before-open=\"beforeOpen\"\r\n                 v-model=\"form\"\r\n                 ref=\"crud\"\r\n                 @row-update=\"rowUpdate\"\r\n                 @row-save=\"rowSave\"\r\n                 @row-del=\"rowDel\"\r\n                 @search-change=\"searchChange\"\r\n                 @search-reset=\"searchReset\"\r\n                 @selection-change=\"selectionChange\"\r\n                 @current-change=\"currentChange\"\r\n                 @size-change=\"sizeChange\"\r\n                 @on-load=\"onLoad\">\r\n        <template slot-scope=\"{row}\" slot=\"userAccount\">\r\n          <el-button\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"detailDialog(row)\">\r\n            {{row.userAccount}}\r\n          </el-button>\r\n        </template>\r\n        <template slot=\"menuLeft\">\r\n          <div v-if=\"this.type.prop=='userAccount'\">\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"welcomeEmail(null)\">欢迎邮件\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"mailRecord\">邮件记录\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"mailTemlate\">邮件模板\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"enableBtn\">启用\r\n            </el-button>\r\n            <el-button type=\"warning\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"disableBtn\">禁用\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"handleExport\">导 出\r\n            </el-button>\r\n          </div>\r\n          <div v-if=\"this.type.prop!='userAccount'\">\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"commonAccountAdd\">新 增\r\n            </el-button>\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       class=\"el-icon-delete\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"commonAccountDel\">删 除\r\n            </el-button>\r\n          </div>\r\n        </template>\r\n        <template slot-scope=\"scope\" slot=\"menu\">\r\n          <el-button type=\"text\" size=\"small\" v-if=\"type.prop!=='userAccount'\"\r\n                     @click.native=\"handleUpdate(scope.row)\">编辑\r\n          </el-button>\r\n          <div v-if=\"type.prop=='userAccount'\">\r\n            <el-button type=\"text\" size=\"small\"\r\n                       @click.native=\"handleLockOrUnlock(scope.row)\">\r\n              {{scope.row.accountState==1 ? \"锁定\" : \"解锁\"}}\r\n            </el-button>\r\n            <el-button type=\"text\" size=\"small\"\r\n                       @click.native=\"resetPassword(scope.row)\">重置密码\r\n            </el-button>\r\n            <el-button type=\"text\" size=\"small\"\r\n                       @click.native=\"welcomeEmail(scope.row)\">欢迎邮件\r\n            </el-button>\r\n          </div>\r\n        </template>\r\n        <template slot-scope=\"{disabled,size}\" slot=\"createTimeSearch\">\r\n          <el-date-picker\r\n            v-model=\"createTimeArr\"\r\n            type=\"daterange\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            format=\"yyyy-MM-dd\"\r\n            range-separator=\"-\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\">\r\n          </el-date-picker>\r\n        </template>\r\n        <template slot-scope=\"{disabled,size}\" slot=\"updateTimeSearch\">\r\n          <el-date-picker\r\n            v-model=\"updateTimeArr\"\r\n            type=\"daterange\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            format=\"yyyy-MM-dd\"\r\n            range-separator=\"-\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\">\r\n          </el-date-picker>\r\n        </template>\r\n      </avue-crud>\r\n    </div>\r\n    <user-detail-dialog ref=\"userDetaildialog\"\r\n                        :showDetail=\"showUserDetail\"\r\n                        type=\"enterprise\"\r\n                        @close=\"closeDetailDialog\"/>\r\n    <public-detail-dialog ref=\"publicDetailDialog\"\r\n                          :showPublicDetailDialog=\"showPublicDetail\"\r\n                          @close=\"closeDetailDialog\"/>\r\n    <public-form-dialog ref=\"publicFormDialog\"\r\n                        :publicFormTitle=\"publicFormTitle\"\r\n                        :showPublicFormDialog=\"showPublicForm\"\r\n                        :publicFormData=\"publicFormData\"\r\n                        @close=\"closeFormDialog\"/>\r\n    <resetPassword-dialog ref=\"resetPasswordDialog\"\r\n                          :showResetPasswordDialog=\"showResetPasswordDialog\"\r\n                          :has-email=\"hasEmail\"\r\n                          :has-phone=\"hasPhone\"\r\n                          :account-id=\"accountId\"\r\n                          @close=\"closeResetPasswordDialog\"/>\r\n    <reset-password-dialog ref=\"resetPasswordDialog\"\r\n                           :showResetPasswordDialog=\"showResetPasswordDialog\"\r\n                           :has-email=\"hasEmail\"\r\n                           :has-phone=\"hasPhone\"\r\n                           :account-id=\"accountId\"\r\n                           @close=\"closeResetPasswordDialog\"/>\r\n    <account-export-dialog ref=\"resetPasswordDialog\"\r\n                           type=\"enterprise\"\r\n                           :exportDialogFlag=\"showExportDialog\"\r\n                           :exportColumns=\"exportColumns\"\r\n                           @close=\"closeExportDialog\"/>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\nimport {listPublic, listUser} from \"@/api/contract/userAccount/enterpriseAccount\";\r\nimport {resetLock, update} from \"@/api/contract/userAccount/account\";\r\nimport {sendTemplateMail} from \"@/api/contract/userAccount/mailRecord\";\r\nimport {mapGetters} from \"vuex\";\r\nimport userDetailDialog from \"./userDetailDialog\";\r\nimport publicDetailDialog from \"./publicDetailDialog\";\r\nimport publicFormDialog from \"./publicFormDialog\";\r\nimport resetPasswordDialog from './resetPasswordDialog';\r\nimport accountExportDialog from './accountExportDialog';\r\n\r\nconst TEMPLATE_FILE = {\r\n  welcome: \"Welcome.ftl\",\r\n  resetPassword: \"ResetPassword.ftl\",\r\n};\r\nexport default {\r\n  components: {userDetailDialog, publicDetailDialog, publicFormDialog, resetPasswordDialog, accountExportDialog},\r\n  data() {\r\n    return {\r\n      showExportDialog: false,\r\n      exportColumns: [],\r\n      showResetPasswordDialog: false,\r\n      accountId: \"\",\r\n      hasPhone: false,\r\n      hasEmail: false,\r\n      showUserDetail: false,\r\n      showPublicDetail: false,\r\n      showPublicForm: false,\r\n      publicFormTitle: '',\r\n      publicFormData: {},\r\n      form: {},\r\n      query: {},\r\n      loading: false,\r\n      createTimeArr: [],\r\n      updateTimeArr: [],\r\n      page: {\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        total: 0\r\n      },\r\n      selectionList: [],\r\n      type: {},\r\n      optionTab: {\r\n        column: [{\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n        }, {\r\n          label: '公共账号',\r\n          prop: 'commonAccount',\r\n        }],\r\n      },\r\n      option: {\r\n        height: 'auto',\r\n        calcHeight: 210,\r\n        searchShow: true,\r\n        searchMenuSpan: 6,\r\n        tip: false,\r\n        border: true,\r\n        index: false,\r\n        viewBtn: true,\r\n        selection: true,\r\n        addBtn: false,//添加按钮\r\n        viewBtn: false,//添加按钮\r\n        delBtn: false,//添加按钮\r\n        editBtn: true,//添加按钮\r\n        column: [{\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n          search: true,\r\n          slot: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '邮箱',\r\n          prop: 'email',\r\n          search: true\r\n        }, {\r\n          label: '手机号码',\r\n          prop: 'phone',\r\n          search: true\r\n        }, {\r\n          label: '姓名',\r\n          prop: 'userName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '客户名称',\r\n          prop: 'customerName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '用户状态',\r\n          prop: 'userState',\r\n          search: true\r\n        }, {\r\n          label: '账号状态',\r\n          prop: 'accountState',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '创建时间',\r\n          prop: 'createTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '最后修改时间',\r\n          prop: 'updateTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n        }],\r\n      },\r\n      userAccountColumn: [\r\n        {\r\n          label: \"账号ID\",\r\n          prop: \"accId\",\r\n          hide: true,\r\n          addDisplay: false,\r\n          editDisplay: false,\r\n        }, {\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n          search: true,\r\n          slot: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '邮箱',\r\n          prop: 'userEmail',\r\n          search: true\r\n        }, {\r\n          label: '手机号码',\r\n          prop: 'userPhone',\r\n          search: true\r\n        }, {\r\n          label: '姓名',\r\n          prop: 'userName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '客户名称',\r\n          prop: 'customerName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '用户状态',\r\n          prop: 'userState',\r\n          search: true\r\n        }, {\r\n          label: '账号状态',\r\n          prop: 'accountState',\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n          dicUrl: this.getDicValue(this.CONSTANT.ACC_STATUS),\r\n          props: {\r\n            label: \"dictValue\",\r\n            value: \"dictKey\"\r\n          },\r\n          dataType: 'number'\r\n        }, {\r\n          label: '创建时间',\r\n          prop: 'createTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n        }, {\r\n          label: '最后修改时间',\r\n          prop: 'updateTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n        }],\r\n      publicAccountColumn: [{\r\n        label: 'IP',\r\n        prop: 'ip',\r\n        hide: true,\r\n        search: true,\r\n      }, {\r\n        label: '客户名称',\r\n        prop: 'ip',\r\n        hide: true,\r\n        search: true,\r\n        editDisabled: true,\r\n      }, {\r\n        label: '用户账号',\r\n        prop: 'userAccount',\r\n        slot: true,\r\n        editDisabled: true,\r\n      }, {\r\n        label: '并发',\r\n        prop: 'concurrent',\r\n      }, {\r\n        label: '所属客户',\r\n        prop: 'customers',\r\n      }, {\r\n        label: '联系人',\r\n        prop: 'contacts',\r\n        search: true,\r\n      }, {\r\n        label: '联系人手机号码',\r\n        prop: 'contactsTel',\r\n      }, {\r\n        label: '联系人邮箱',\r\n        prop: 'contactsEmail',\r\n      }, {\r\n        label: '创建时间',\r\n        prop: 'createTime',\r\n        searchslot: true,\r\n        search: true,\r\n      }, {\r\n        label: '最后修改时间',\r\n        prop: 'updateTime',\r\n        searchslot: true,\r\n        search: true,\r\n      }],\r\n      data: [\r\n        {\r\n          userAccount: \"XHCJ0001\",\r\n          userEmail: \"18410379896\",\r\n          userPhone: \"18410379896\",\r\n          nickName: \"\",\r\n          userName: \"\",\r\n          customerName: \"\",\r\n          userState: \"\",\r\n          accountState: \"\",\r\n          createTime: \"\",\r\n          updateTime: \"\"\r\n        },\r\n        {\r\n          userAccount: \"XHCJ0001\",\r\n          userEmail: \"18410379896\",\r\n          userPhone: \"\",\r\n          nickName: \"\",\r\n          userName: \"\",\r\n          customerName: \"\",\r\n          userState: \"\",\r\n          accountState: \"\",\r\n          createTime: \"\",\r\n          updateTime: \"\"\r\n        }\r\n      ],\r\n      templateMailParam: {\r\n        tempFile: \"\",\r\n        receivers: [],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.type = this.optionTab.column[0];\r\n    this.option.column.forEach(item => {\r\n      if (!item.hide) {\r\n        this.exportColumns.push({\r\n          label: item.label,\r\n          prop: item.prop,\r\n        })\r\n      }\r\n    });\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"permission\"]),\r\n    permissionList() {\r\n      return {\r\n        addBtn: this.vaildData(this.permission.personaluser_add, false),\r\n        viewBtn: this.vaildData(this.permission.personaluser_view, false),\r\n        delBtn: this.vaildData(this.permission.personaluser_delete, false),\r\n        editBtn: this.vaildData(this.permission.personaluser_edit, false)\r\n      };\r\n    },\r\n    ids() {\r\n      let ids = [];\r\n      this.selectionList.forEach(ele => {\r\n        ids.push(ele.id);\r\n      });\r\n      return ids.join(\",\");\r\n    }\r\n  },\r\n  methods: {\r\n    closeExportDialog() {\r\n      this.showExportDialog = false;\r\n      this.exportColumns = [];\r\n    },\r\n    closeFormDialog() {\r\n      this.publicFormData = null;\r\n      this.showPublicForm = false;\r\n    },\r\n    handleUpdate(row) {\r\n      this.publicFormTitle = \"编辑公共账号\";\r\n      this.publicFormData = row;\r\n      this.showPublicForm = true;\r\n      console.log(\"formEdit\", \"=========================\")\r\n      console.log(\"publicFormData\", this.publicFormData)\r\n    },\r\n    handleLockOrUnlock(row) {\r\n      let message = row.accountState == 1 ? \"确认锁定该账号吗？\" : \"确认解锁该账号吗\"\r\n      this.$confirm(message, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n\r\n          return remove(row.id);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    resetPassword(row) {\r\n      this.showResetPasswordDialog = true;\r\n      if (typeof row.userPhone == 'string' && row.userPhone.length > 0) {\r\n        this.hasPhone = true;\r\n      }\r\n      if (typeof row.userEmail == 'string' && row.userEmail.length > 0) {\r\n        this.hasEmail = true;\r\n      }\r\n      this.accountId = row.accId;\r\n    },\r\n    closeResetPasswordDialog() {\r\n      this.showResetPasswordDialog = false;\r\n      this.accountId = null;\r\n      this.hasPhone = false;\r\n      this.hasEmail = false;\r\n    },\r\n    detailDialog(row) {\r\n      if (this.type.prop == 'userAccount') {\r\n        this.showUserDetail = true;\r\n      } else {\r\n        this.showPublicDetail = true;\r\n      }\r\n    },\r\n    closeDetailDialog() {\r\n      if (this.type.prop == 'userAccount') {\r\n        this.showUserDetail = false;\r\n      } else {\r\n        this.showPublicDetail = false;\r\n      }\r\n    },\r\n    handleChange(column) {\r\n      this.type = column;\r\n      if (this.type.prop == 'userAccount') {\r\n        this.option.editBtn = true;\r\n      } else {\r\n        this.option.editBtn = false;\r\n      }\r\n      this.onLoad(this.page);\r\n    },\r\n    rowSave(row, done, loading) {\r\n      add(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    rowUpdate(row, index, done, loading) {\r\n      this.$refs.crud.rowUpdate();\r\n      update(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    rowDel(row) {\r\n      this.$confirm(\"确定将选择数据删除?\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return remove(row.id);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    //欢迎邮件\r\n    welcomeEmail(row) {\r\n      let msg = \"是否发送欢迎邮件？\";\r\n      this.templateMailParam.tempFile = TEMPLATE_FILE.welcome;\r\n      this.templateMailParam.receivers = [];\r\n      if (row) {\r\n        this.templateMailParam.receivers.push({\r\n          accId: row.accId,\r\n          email: row.userEmail,\r\n          account: row.accId,\r\n          accountExpire: row.accountExpire,\r\n          initPassword: row.initPassword,\r\n          userName: row.userName,\r\n          productLink: row.productLink,\r\n          orderNum: row.orderNum,\r\n        })\r\n      } else {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        msg = \"是否批量发送欢迎邮件？\";\r\n        this.templateMailParam.receivers = this.selectionList.map(item => {\r\n          return {\r\n            accId: item.accId,\r\n            email: item.userEmail,\r\n            account: item.accId,\r\n            accountExpire: item.accountExpire,\r\n            initPassword: item.initPassword,\r\n            userName: item.userName,\r\n            productLink: item.productLink,\r\n            orderNum: item.orderNum,\r\n          };\r\n        })\r\n      }\r\n      this.$confirm(msg, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          //执行发送欢迎邮件逻辑\r\n          return sendTemplateMail(this.templateMailParam);\r\n        })\r\n        .then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.$refs.crud.toggleSelection();\r\n        });\r\n    },\r\n    //邮件记录\r\n    mailRecord() {\r\n      this.$router.push({path: '/contract/userAccount/mailRecord'});\r\n    },\r\n    closeDialog(val) {\r\n      console.log(val);\r\n    },\r\n    //邮件模板\r\n    mailTemlate() {\r\n      this.$router.push({path: '/contract/userAccount/mailTemplate'});\r\n    },\r\n    //启用按钮\r\n    enableBtn() {\r\n      this.openDialog = true;\r\n    },\r\n    //停用\r\n    disableBtn() {\r\n      this.openDialog = true;\r\n    },\r\n    //导出\r\n    handleExport() {\r\n      this.showExportDialog = true;\r\n    },\r\n    //公共账号新增\r\n    commonAccountAdd() {\r\n      this.publicFormTitle = \"新增公共账号\";\r\n      this.publicFormData = null;\r\n      this.showPublicForm = true;\r\n      console.log(\"formAdd\", \"=========================\")\r\n    },\r\n    //公共账号删除\r\n    commonAccountDel() {\r\n      this.$refs.crud.rowDel();\r\n    },\r\n    handleDelete() {\r\n      if (this.selectionList.length === 0) {\r\n        this.$message.warning(\"请选择至少一条数据\");\r\n        return;\r\n      }\r\n      this.$confirm(\"确定将选择数据删除?\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return remove(this.ids);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.$refs.crud.toggleSelection();\r\n        });\r\n    },\r\n    beforeOpen(done, type) {\r\n      if ([\"edit\", \"view\"].includes(type)) {\r\n        if (this.type.prop == 'userAccount') {\r\n\r\n        } else {\r\n\r\n        }\r\n      }\r\n      done();\r\n    },\r\n    searchReset() {\r\n      this.query = {};\r\n      this.onLoad(this.page);\r\n    },\r\n    searchChange(params, done) {\r\n      this.query = params;\r\n      this.page.currentPage = 1;\r\n      this.onLoad(this.page, params);\r\n      done();\r\n    },\r\n    selectionChange(list) {\r\n      this.selectionList = list;\r\n    },\r\n    selectionClear() {\r\n      this.selectionList = [];\r\n      // this.$refs.crud.toggleSelection();\r\n    },\r\n    currentChange(currentPage) {\r\n      this.page.currentPage = currentPage;\r\n    },\r\n    sizeChange(pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    },\r\n    onLoad(page, params = {}) {\r\n      //this.loading = true;\r\n      if (this.type.prop == 'userAccount') {\r\n        this.option.column = this.userAccountColumn;\r\n        // listUser(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        //   this.option.column = this.userAccountColumn;\r\n        //   const data = res.data.data;\r\n        //   this.page.total = data.total;\r\n        //   this.data = data.records;\r\n        //   this.loading = false;\r\n        //   this.selectionClear();\r\n        // });\r\n      } else {\r\n        this.option.column = this.publicAccountColumn;\r\n        // listPublic(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        //   this.option.column = this.publicAccountColumn;\r\n        //   const data = res.data.data;\r\n        //   this.page.total = data.total;\r\n        //   this.data = data.records;\r\n        //   this.loading = false;\r\n        //   this.selectionClear();\r\n        // });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/contract/userAccount"}]}