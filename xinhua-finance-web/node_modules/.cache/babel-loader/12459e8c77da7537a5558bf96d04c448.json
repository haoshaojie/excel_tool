{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\property.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\property.vue","mtime":1618367977452},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"F:/\\u4E1C\\u65B9\\u901A/source/b_zwj/xinhua-finance-web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { add, getDetail, getList, remove, update } from \"@/api/contract/product/property\";\nimport { mapGetters } from \"vuex\";\nimport propertyDialog from \"./property-dialog\";\nexport default {\n  components: {\n    propertyDialog: propertyDialog\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      categoryBox: false,\n      id: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        align: 'center',\n        tip: false,\n        border: true,\n        index: false,\n        indexLabel: '序号',\n        viewBtn: true,\n        selection: true,\n        dialogWidth: \"40%\",\n        defaultSort: {\n          prop: 'createTime',\n          order: 'descending'\n        },\n        labelWidth: \"20%\",\n        viewWidth: \"15%\",\n        refreshBtn: false,\n        columnBtn: false,\n        searchShowBtn: false,\n        column: [{\n          label: \"主键id 雪花算法产生\",\n          prop: \"id\",\n          hide: true,\n          display: false,\n          rules: [{\n            required: false,\n            message: \"请输入主键id 雪花算法产生\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"属性名称\",\n          prop: \"propName\",\n          maxlength: 20,\n          minlength: 1,\n          searchOrder: 1,\n          order: 1,\n          search: true,\n          span: 23,\n          rules: [{\n            required: true,\n            message: \"请输入属性名称\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"属性编码\",\n          prop: \"propCode\",\n          maxlength: 20,\n          minlength: 1,\n          search: true,\n          span: 23,\n          rules: [{\n            required: true,\n            message: \"请输入属性编码\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"属性类型\",\n          prop: \"propType\",\n          search: true,\n          span: 23,\n          type: \"radio\",\n          value: 2,\n          dicUrl: this.getDicValue(this.CONSTANT.PROP_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择属性类型\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"是否必填\",\n          prop: \"isRequired\",\n          hide: true,\n          span: 23,\n          type: \"radio\",\n          value: 1,\n          dicUrl: this.getDicValue(this.CONSTANT.IS_REQUIRED),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          rules: [{\n            required: true,\n            message: \"请选择是否必填\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"备注\",\n          prop: \"remark\",\n          maxlength: 100,\n          minlength: 1,\n          hide: true,\n          span: 23,\n          rules: [{\n            required: false,\n            max: 100,\n            message: \"请输入属性备注\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"表现方式\",\n          prop: \"showType\",\n          span: 23,\n          type: \"select\",\n          dicUrl: this.getDicValue(this.CONSTANT.SHOW_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          change: function change(_ref) {\n            var value = _ref.value;\n\n            var propertyValueForm = _this.findObject(_this.option.column, 'propertyValue');\n\n            propertyValueForm.display = false;\n\n            if (value == 2) {\n              propertyValueForm.display = true;\n\n              _this.addSelect();\n            }\n          },\n          rules: [{\n            required: true,\n            message: \"请选择表现方式\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"属性值\",\n          prop: 'propertyValue',\n          display: false,\n          type: 'dynamic',\n          span: 24,\n          required: true,\n          rules: [{\n            required: true,\n            // message: \"请选择表现方式\",\n            trigger: \"blur\"\n          }],\n          children: {\n            align: 'center',\n            type: 'form',\n            index: false,\n            calcHeight: 180,\n            // gutter:10,\n            headerAlign: 'center',\n            // rowAdd: (done) => {\n            //   this.$message.success('新增回调');\n            //   done({\n            //     // input: '默认值'\n            //   });\n            // },\n            // rowDel: (row, done) => {\n            //   this.$message.success('删除回调' + JSON.stringify(row));\n            //   done();\n            // },\n            column: [{\n              type: 'input',\n              label: '',\n              labelWidth: \"0%\",\n              span: 12,\n              display: true,\n              prop: 'propCode',\n              maxlength: 20,\n              // tip: '属性值编码',\n              tipPlacement: 'left',\n              placeholder: \"属性值编码\",\n              required: true,\n              rules: [{\n                required: true,\n                message: '属性值编码',\n                trigger: \"blur\"\n              }]\n            }, {\n              type: 'input',\n              label: '',\n              labelWidth: \"0%\",\n              span: 11,\n              display: true,\n              prop: 'propValue',\n              maxlength: 20,\n              // tip: '属性值',\n              placeholder: \"属性值\",\n              rules: [{\n                required: true,\n                message: '属性值',\n                trigger: \"blur\"\n              }]\n            }]\n          }\n        }, {\n          label: \"产品类型\",\n          prop: \"categoryCount\",\n          display: false,\n          formatter: function formatter(row, value) {\n            if (value > 0) {\n              return \"<div style='color:blue;cursor: pointer;'>\" + value + \"</div>\";\n            } else {\n              return 0;\n            }\n          } // slot:true\n\n        }, {\n          label: \"创建人\",\n          prop: \"createUserName\",\n          span: 24,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"创建时间\",\n          prop: \"createTime\",\n          span: 24,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"最后修改人\",\n          prop: \"updateUserName\",\n          span: 24,\n          hide: true,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }, {\n          label: \"最后修改时间\",\n          prop: \"updateTime\",\n          span: 24,\n          hide: true,\n          addDisplay: false,\n          //新增时是否显示\n          editDisplay: false,\n          //编辑时是否显示\n          viewDisplay: true,\n          //详情时是否显示\n          rules: [{\n            required: false,\n            message: \"\",\n            trigger: \"blur\"\n          }]\n        }]\n      },\n      data: []\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"permission\"])), {}, {\n    permissionList: function permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.property_add, false),\n        viewBtn: this.vaildData(this.permission.property_view, false),\n        delBtn: this.vaildData(this.permission.property_delete, false),\n        editBtn: this.vaildData(this.permission.property_edit, false)\n      };\n    },\n    ids: function ids() {\n      var ids = [];\n      this.selectionList.forEach(function (ele) {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  }),\n  created: function created() {},\n  methods: {\n    addSelect: function addSelect() {\n      this.form.propertyValue.push({\n        input: 1\n      });\n    },\n    closeDialog: function closeDialog(val) {\n      this.categoryBox = val;\n      this.$emit(\"close\", false);\n    },\n    rowSave: function rowSave(row, done, loading) {\n      var _this2 = this;\n\n      add(row).then(function () {\n        done();\n\n        _this2.onLoad(_this2.page);\n\n        _this2.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate: function rowUpdate(row, index, done, loading) {\n      var _this3 = this;\n\n      update(row).then(function () {\n        done();\n\n        _this3.onLoad(_this3.page);\n\n        _this3.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, function (error) {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel: function rowDel(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(row.id);\n      }).then(function () {\n        _this4.onLoad(_this4.page);\n\n        _this4.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this5 = this;\n\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        return remove(_this5.ids);\n      }).then(function () {\n        _this5.onLoad(_this5.page);\n\n        _this5.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n\n        _this5.$refs.crud.toggleSelection();\n      });\n    },\n    beforeOpen: function beforeOpen(done, type) {\n      var _this6 = this;\n\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(function (res) {\n          _this6.form = res.data.data;\n        });\n      }\n\n      done();\n    },\n    searchReset: function searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange: function selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear: function selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad: function onLoad(page) {\n      var _this7 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this7.page.total = data.total;\n        _this7.data = data.records;\n        _this7.loading = false;\n\n        _this7.selectionClear();\n      });\n    },\n    categoryList: function categoryList(row, column) {\n      if (column.property == \"categoryCount\" && row.categoryCount > 0) {\n        console.log(\"传值\", row.id);\n        this.id = row.id;\n        this.$refs.refCategoryBox.searchOpen(this.id);\n        this.categoryBox = true;\n      }\n    }\n  }\n};",{"version":3,"sources":["property.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @cell-click=\"categoryList\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot-scope=\"{}\" slot=\"buttonForm\">\r\n        <el-button @click=\"addAll\" size=\"small\" type=\"primary\">添加10条子表单数据</el-button>\r\n      </template>\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.property_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <!--      <template slot=\"categoryCount\" slot-scope=\"{row}\">-->\r\n      <!--        <el-tag @click=\"categoryList\">{{row.categoryCount}}</el-tag>-->\r\n      <!--      </template>-->\r\n    </avue-crud>\r\n    <property-dialog ref=\"refCategoryBox\" :categoryBox=\"categoryBox\" :id=\"id\" @close=\"closeDialog\"\r\n                     @reLoad=\"searchChange\"></property-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {add, getDetail, getList, remove, update} from \"@/api/contract/product/property\";\r\n  import {mapGetters} from \"vuex\";\r\n  import propertyDialog from \"./property-dialog\";\r\n\r\n  export default {\r\n    components: {propertyDialog},\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        categoryBox: false,\r\n        id: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 210,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          align: 'center',\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          indexLabel: '序号',\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogWidth: \"40%\",\r\n          defaultSort: {\r\n            prop: 'createTime',\r\n            order: 'descending'\r\n          },\r\n          labelWidth: \"20%\",\r\n          viewWidth: \"15%\",\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              display: false,\r\n              rules: [{\r\n                required: false,\r\n                message: \"请输入主键id 雪花算法产生\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性名称\",\r\n              prop: \"propName\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              searchOrder: 1,\r\n              order: 1,\r\n              search: true,\r\n              span: 23,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入属性名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性编码\",\r\n              prop: \"propCode\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              search: true,\r\n              span: 23,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入属性编码\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性类型\",\r\n              prop: \"propType\",\r\n              search: true,\r\n              span: 23,\r\n              type: \"radio\",\r\n              value: 2,\r\n              dicUrl: this.getDicValue(this.CONSTANT.PROP_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择属性类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"是否必填\",\r\n              prop: \"isRequired\",\r\n              hide: true,\r\n              span: 23,\r\n              type: \"radio\",\r\n              value: 1,\r\n              dicUrl: this.getDicValue(this.CONSTANT.IS_REQUIRED),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择是否必填\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              maxlength: 100,\r\n              minlength: 1,\r\n              hide: true,\r\n              span: 23,\r\n              rules: [{\r\n                required: false,\r\n                max: 100,\r\n                message: \"请输入属性备注\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"表现方式\",\r\n              prop: \"showType\",\r\n              span: 23,\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.SHOW_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              change: ({value}) => {\r\n                let propertyValueForm = this.findObject(this.option.column, 'propertyValue');\r\n                propertyValueForm.display = false;\r\n                if (value == 2) {\r\n                  propertyValueForm.display = true;\r\n                  this.addSelect();\r\n                }\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择表现方式\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性值\",\r\n              prop: 'propertyValue',\r\n              display: false,\r\n              type: 'dynamic',\r\n              span: 24,\r\n              required: true,\r\n              rules: [{\r\n                required: true,\r\n                // message: \"请选择表现方式\",\r\n                trigger: \"blur\"\r\n              }],\r\n              children: {\r\n                align: 'center',\r\n                type: 'form',\r\n                index: false,\r\n                calcHeight: 180,\r\n                // gutter:10,\r\n                headerAlign: 'center',\r\n                // rowAdd: (done) => {\r\n                //   this.$message.success('新增回调');\r\n                //   done({\r\n                //     // input: '默认值'\r\n                //   });\r\n                // },\r\n                // rowDel: (row, done) => {\r\n                //   this.$message.success('删除回调' + JSON.stringify(row));\r\n                //   done();\r\n                // },\r\n                column: [{\r\n                  type: 'input',\r\n                  label: '',\r\n                  labelWidth: \"0%\",\r\n                  span: 12,\r\n                  display: true,\r\n                  prop: 'propCode',\r\n                  maxlength: 20,\r\n                  // tip: '属性值编码',\r\n                  tipPlacement: 'left',\r\n                  placeholder: \"属性值编码\",\r\n                  required: true,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '属性值编码',\r\n                      trigger: \"blur\"\r\n                    }\r\n                  ]\r\n                },\r\n                  {\r\n                    type: 'input',\r\n                    label: '',\r\n                    labelWidth: \"0%\",\r\n                    span: 11,\r\n                    display: true,\r\n                    prop: 'propValue',\r\n                    maxlength: 20,\r\n                    // tip: '属性值',\r\n                    placeholder: \"属性值\",\r\n                    rules: [{\r\n                      required: true,\r\n                      message: '属性值',\r\n                      trigger: \"blur\"\r\n                    }]\r\n                  }]\r\n              }\r\n            },\r\n            {\r\n              label: \"产品类型\",\r\n              prop: \"categoryCount\",\r\n              display: false,\r\n              formatter: (row, value) => {\r\n                if (value > 0) {\r\n                  return \"<div style='color:blue;cursor: pointer;'>\" + value + \"</div>\";\r\n                } else {\r\n                  return 0;\r\n                }\r\n              }\r\n              // slot:true\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"最后修改人\",\r\n              prop: \"updateUserName\",\r\n              span: 24,\r\n              hide: true,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"最后修改时间\",\r\n              prop: \"updateTime\",\r\n              span: 24,\r\n              hide: true,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.property_add, false),\r\n          viewBtn: this.vaildData(this.permission.property_view, false),\r\n          delBtn: this.vaildData(this.permission.property_delete, false),\r\n          editBtn: this.vaildData(this.permission.property_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    methods: {\r\n      addSelect() {\r\n        this.form.propertyValue.push({\r\n          input: 1\r\n        })\r\n      },\r\n      closeDialog(val) {\r\n        this.categoryBox = val;\r\n        this.$emit(\"close\", false);\r\n      },\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      categoryList(row, column) {\r\n        if (column.property == \"categoryCount\" && row.categoryCount > 0) {\r\n          console.log(\"传值\", row.id);\r\n          this.id = row.id;\r\n          this.$refs.refCategoryBox.searchOpen(this.id);\r\n          this.categoryBox = true;\r\n        }\r\n      },\r\n    }\r\n  };\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .avue-dynamic__header {\r\n    position: absolute;\r\n    right: -5px;\r\n    top: 0;\r\n    z-index: 10000;\r\n  }\r\n\r\n  .avue-dynamic__row {\r\n    padding-top: 0;\r\n    border: none;\r\n    height: 50px;\r\n\r\n    .avue-group .el-collapse-item__wrap {\r\n      border-bottom: 0;\r\n    }\r\n\r\n    .avue-form__group--flex {\r\n      .avue-form__row {\r\n        padding-left: 0 !important;\r\n        padding-right: 5px !important;\r\n      }\r\n    }\r\n\r\n    .avue-dynamic__menu {\r\n      margin-right: -5px;\r\n    }\r\n  }\r\n\r\n  .avue-dynamic__row:first-child {\r\n    .avue-dynamic__menu {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .el-dialog {\r\n    width: 50%;\r\n  }\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/contract/product"}]}