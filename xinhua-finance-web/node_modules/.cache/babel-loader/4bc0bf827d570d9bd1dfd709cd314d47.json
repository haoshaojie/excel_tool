{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\components\\userAgreementInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\components\\userAgreementInfo.vue","mtime":1618812791209},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, getDetail } from \"@/api/contract/contract/useragreement\";\nimport userProtocolFilePerview from \"../userProtocolFilePerview\";\nexport default {\n  name: \"user-agreement-info\",\n  components: {\n    userProtocolFilePerview: userProtocolFilePerview\n  },\n  props: ['userAgreementInfo'],\n  mounted: function mounted() {\n    this.userAgreement.itemValues = this.userAgreementInfo;\n  },\n  data: function data() {\n    return {\n      showAgreement: false,\n      userAgreement: {\n        itemValues: []\n      },\n      protocolFileList: [],\n      selectionList: [],\n      temSelectionList: [],\n      query: {},\n      page: {\n        currentPage: 1,\n        total: 0,\n        pageSizes: [10, 20, 30, 40, 50, 100],\n        pageSize: 10\n      },\n      loading: false,\n      openDialog: false,\n      option: {\n        calcHeight: 210,\n        searchMenuSpan: 6,\n        searchShow: true,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: false,\n        addBtn: false,\n        editBtn: false,\n        delBtn: true,\n        menu: false,\n        header: false,\n        selection: true,\n        column: [{\n          label: \"主键id 雪花算法产生\",\n          prop: \"id\",\n          hide: true,\n          display: false //在查看，新增，编辑页面是否显示\n\n        }, {\n          label: \"协议编码\",\n          prop: \"agreementNo\",\n          search: true\n        }, {\n          label: \"协议名称\",\n          prop: \"agreementName\"\n        }, {\n          label: \"协议类型\",\n          prop: \"agreementType\",\n          type: \"select\",\n          dicUrl: this.getDicValue(this.CONSTANT.AGREEMENT_TYPE),\n          props: {\n            label: \"dictValue\",\n            value: \"dictKey\"\n          },\n          search: true\n        }, {\n          label: \"协议附件\",\n          prop: \"agreementFile\",\n          slot: true\n        }]\n      },\n      data: []\n    };\n  },\n  methods: {\n    back: function back() {\n      this.$emit(\"update\", 2);\n    },\n    save: function save() {\n      this.$emit(\"saveUserAgreementInfo\", this.userAgreement.itemValues);\n    },\n    next: function next() {\n      this.$emit(\"update\", 4);\n    },\n    sure: function sure() {\n      var _this = this;\n\n      this.userAgreement.itemValues = [];\n      this.showAgreement = false;\n      this.saveSelectList(this.temSelectionList);\n      this.selectionList.forEach(function (item) {\n        _this.userAgreement.itemValues.push(item);\n      });\n    },\n    showAssociation: function showAssociation() {\n      this.showAgreement = true;\n      this.temSelectionList = [];\n      this.refreshChange();\n    },\n    checkRemove: function checkRemove(selection, row) {\n      // 判断是否取消选中\n      var hasRemoveFlag = true;\n\n      for (var i = 0; i < selection.length; i++) {\n        if (selection[i].id == row.id) {\n          hasRemoveFlag = false;\n          break;\n        }\n      }\n\n      return hasRemoveFlag;\n    },\n    saveSelectList: function saveSelectList(selection) {\n      // 如果当前选项为空，并且表格有选择数据\n      if (this.selectionList.length <= 0) {\n        this.selectionList = selection;\n        return;\n      } // 合并处理数组集合\n\n\n      var swapObj = {};\n      this.selectionList.forEach(function (value, index) {\n        swapObj[value.id] = value;\n      });\n      selection.forEach(function (value, index) {\n        swapObj[value.id] = value;\n      });\n      this.selectionList = [];\n\n      for (var id in swapObj) {\n        this.selectionList.push(swapObj[id]);\n      }\n    },\n    selectAll: function selectAll(selection) {\n      for (var i = 0; i < selection.length; i++) {\n        this.select(selection, selection[i]);\n      }\n    },\n    select: function select(selection, row) {\n      // 解决记忆选项\n      // 判断是否取消选中\n      var hasRemoveFlag = this.checkRemove(selection, row); // 取消选中更新临时存储对象\n\n      if (hasRemoveFlag) {\n        var idx = -1;\n        this.temSelectionList.forEach(function (value, index) {\n          if (value.id == row.id) {\n            idx = index;\n          }\n        });\n        this.temSelectionList = this.temSelectionList.slice(0, idx).concat(this.temSelectionList.splice(idx + 1, this.temSelectionList.length));\n      } else {\n        // 否则 追加进入临时对象， 并且防止重复追加\n        var isRepeat = false;\n\n        for (var i = 0; i < this.temSelectionList.length; i++) {\n          if (this.temSelectionList[i].id == row.id) {\n            isRepeat = true;\n            break;\n          }\n        }\n\n        if (!isRepeat) {\n          this.temSelectionList.push(row);\n        }\n      }\n    },\n    deleteItem: function deleteItem(item, index) {\n      this.userAgreement.itemValues.splice(index, 1);\n      this.selectionClear(item, index);\n    },\n    selectionClear: function selectionClear(item, index) {\n      this.selectionList.splice(index, 1);\n    },\n\n    /**表格按钮事件**/\n    viewAgreementDocument: function viewAgreementDocument(row) {\n      var _this2 = this;\n\n      event.stopPropagation();\n      getDetail(row.id).then(function (res) {\n        _this2.protocolFileList = res.data.data.protocolFile;\n        _this2.openDialog = true;\n      });\n    },\n    closeDialog: function closeDialog(val) {\n      this.openDialog = val;\n    },\n\n    /**检索相关事件**/\n    searchChange: function searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      event.stopPropagation();\n      done();\n    },\n\n    /**表格分页相关事件**/\n    currentChange: function currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange: function sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange: function refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad: function onLoad(page) {\n      var _this3 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(function (res) {\n        var data = res.data.data;\n        _this3.page.total = data.total;\n        _this3.data = data.records;\n        _this3.loading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["userAgreementInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<!--创建合约的用户信息信息-->\n<template>\n    <basic-container>\n         <el-button \n            type=\"primary\" \n            size=\"small\"\n            @click=\"showAssociation\">\n            关联用户协议\n        </el-button>\n        <div class=\"el-agreement-form\">\n            <el-form :inline=\"true\"  size=\"small\" label-position=\"left\" :model=\"userAgreement\">\n                <el-form-item v-for=\"(item,index) in userAgreement.itemValues\" :key=\"index\" :label=\"`用户协议${index+1}`\">\n                    <el-input :placeholder=\"`用户协议${index+1}`\" v-model=\"item.agreementName\" readonly=\"true\"></el-input>\n                    <el-button  icon=\"el-icon-delete\" circle @click=\"deleteItem(item,index)\"></el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n         <div class=\"el-step-footer\">\n            <el-button type=\"primary\" size=\"small\" plain @click=\"back\">上一步</el-button>\n            <el-button type=\"primary\" size=\"small\" @click=\"save\">保&nbsp;&nbsp;&nbsp;存</el-button>\n            <el-button type=\"primary\" size=\"small\" plain @click=\"next\">下一步</el-button>\n        </div>\n        <!-- 关联用户协议 -->\n        <el-dialog \n        title=\"用户协议\"\n        width=\"60%\"\n        :visible.sync=\"showAgreement\"\n        center>\n            <avue-crud  \n            ref=\"crud\"\n            v-model=\"form\"\n            :option=\"option\"\n            :data=\"data\"\n            :page.sync=\"page\"\n            :table-loading=\"loading\"\n            @size-change=\"sizeChange\"\n            @current-change=\"currentChange\"\n            @refresh-change=\"refreshChange\"\n            @search-change=\"searchChange\"\n            @on-load=\"onLoad\"\n            @select=\"select\"\n            @select-all=\"selectAll\"\n            >\n            <template slot=\"agreementFile\" slot-scope=\"scope\">\n               <span v-if=\"scope.row.protocolFile !== undefined && scope.row.protocolFile.length >0 \">\n                  <el-button type=\"text\"\n                             size=\"small\"\n                             @click.stop=\"viewAgreementDocument(scope.row)\">查看附件\n                  </el-button>\n                </span>\n            </template>\n            </avue-crud>\n            <userProtocolFilePerview :openDialog=\"openDialog\" :protocolFileList=\"protocolFileList\"\n                                   @close=\"closeDialog\"></userProtocolFilePerview>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"sure\" size=\"small\">确 认</el-button>\n                <el-button  @click=\"showAgreement=false\" size=\"small\">取 消</el-button>\n            </div>\n        </el-dialog>\n    </basic-container>\n</template>\n<script>\n\nimport {getList, getDetail} from \"@/api/contract/contract/useragreement\";\nimport userProtocolFilePerview from \"../userProtocolFilePerview\";\n\nexport default {\n    name:\"user-agreement-info\",\n    components: {userProtocolFilePerview},\n    props:['userAgreementInfo'],\n    mounted: function(){\n        this.userAgreement.itemValues= this.userAgreementInfo;\n    },\n    data(){\n        return{\n            showAgreement:false,\n            userAgreement:{\n                itemValues:[]\n            },\n            protocolFileList: [],\n            selectionList: [],\n            temSelectionList:[],\n            query:{},\n            page: {\n                currentPage: 1,\n                total: 0,\n                pageSizes: [10, 20, 30, 40, 50, 100],\n                pageSize: 10\n              },\n            loading: false,\n            openDialog: false,\n            option:{\n                calcHeight: 210,\n                searchMenuSpan:6,\n                searchShow: true,\n                tip: false,\n                border: true,\n                index: false,\n                viewBtn:false,\n                addBtn:false,\n                editBtn:false,\n                delBtn:true,\n                menu:false,\n                header:false,\n                selection: true,\n                column:[\n                    {\n                      label: \"主键id 雪花算法产生\",\n                      prop: \"id\",\n                      hide: true,\n                      display: false, //在查看，新增，编辑页面是否显示\n                    },\n                    {\n                        label:\"协议编码\",\n                        prop:\"agreementNo\",\n                        search:true\n                    },\n                     {\n                        label:\"协议名称\",\n                        prop:\"agreementName\"\n                    },\n                     {\n                        label:\"协议类型\",\n                        prop:\"agreementType\",\n                        type:\"select\",\n                        dicUrl: this.getDicValue(this.CONSTANT.AGREEMENT_TYPE),\n                        props: {\n                          label: \"dictValue\",\n                          value: \"dictKey\"\n                        },\n                        search:true\n                    },\n                     {\n                        label:\"协议附件\",\n                        prop:\"agreementFile\",\n                        slot:true\n                    }\n                ]\n            },\n            data:[]\n        }\n    },\n    methods:{\n         back(){\n            this.$emit(\"update\",2);\n        },\n        save(){\n          this.$emit(\"saveUserAgreementInfo\",this.userAgreement.itemValues);\n        },\n        next(){\n            this.$emit(\"update\",4);\n        },\n        sure(){\n            this.userAgreement.itemValues=[];\n            this.showAgreement=false;\n            this.saveSelectList(this.temSelectionList);\n            this.selectionList.forEach(item=>{\n                this.userAgreement.itemValues.push(item);\n            });\n        },\n        showAssociation() {\n          this.showAgreement=true;\n          this.temSelectionList = [];\n          this.refreshChange();\n        },\n        checkRemove(selection, row) {\n          // 判断是否取消选中\n          let hasRemoveFlag = true;\n          for(var i = 0; i < selection.length; i++) {\n            if(selection[i].id == row.id) {\n              hasRemoveFlag = false;\n              break;\n            }\n          }\n          return hasRemoveFlag;\n        },\n        saveSelectList(selection){\n          // 如果当前选项为空，并且表格有选择数据\n          if(this.selectionList.length <= 0) {\n            this.selectionList = selection;\n            return ;\n          }\n          // 合并处理数组集合\n          let swapObj = {};\n          this.selectionList.forEach(function(value,index){\n            swapObj[value.id] = value;\n          });\n          selection.forEach(function(value,index){\n            swapObj[value.id] = value;\n          });\n          this.selectionList = [];\n          for(let id in swapObj) {\n            this.selectionList.push(swapObj[id]);\n          }\n        },\n        selectAll(selection){\n          for(let i = 0; i < selection.length; i++) {\n            this.select(selection, selection[i]);\n          }\n        },\n        select(selection, row){ // 解决记忆选项\n          // 判断是否取消选中\n          let hasRemoveFlag = this.checkRemove(selection, row);\n          // 取消选中更新临时存储对象\n          if(hasRemoveFlag) {\n            let idx = -1;\n            this.temSelectionList.forEach(function(value,index){\n              if(value.id == row.id) {\n                idx = index;\n              }\n            });\n            this.temSelectionList = this.temSelectionList.slice(0,idx).concat(this.temSelectionList.splice(idx+1,this.temSelectionList.length));\n          } else {\n            // 否则 追加进入临时对象， 并且防止重复追加\n            let isRepeat = false;\n            for(let i = 0; i < this.temSelectionList.length; i++) {\n              if(this.temSelectionList[i].id == row.id) {\n                isRepeat = true;\n                break;\n              }\n            }\n            if(!isRepeat) {\n              this.temSelectionList.push(row);\n            }\n          }\n        },\n        deleteItem(item,index){\n            this.userAgreement.itemValues.splice(index,1);\n            this.selectionClear(item,index);\n        },\n        selectionClear(item,index) {\n            this.selectionList.splice(index,1);\n        },\n        /**表格按钮事件**/\n        viewAgreementDocument(row) {\n          event.stopPropagation();\n          getDetail(row.id).then(res => {\n            this.protocolFileList = res.data.data.protocolFile;\n            this.openDialog = true;\n          })\n        },\n        closeDialog(val) {\n          this.openDialog = val;\n        },\n        /**检索相关事件**/\n        searchChange(params,done) {\n          this.query = params;\n          this.page.currentPage = 1;\n          this.onLoad(this.page, params);\n          event.stopPropagation();\n          done();\n        },\n        /**表格分页相关事件**/\n        currentChange(currentPage) {\n          this.page.currentPage = currentPage;\n        },\n        sizeChange(pageSize) {\n          this.page.pageSize = pageSize;\n        },\n        refreshChange() {\n          this.onLoad(this.page, this.query);\n        },\n        onLoad(page, params = {}) {\n          this.loading = true;\n\n          getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n            const data = res.data.data;\n            this.page.total = data.total;\n            this.data = data.records;\n            this.loading = false;\n          });\n      }\n    }\n}\n</script>\n<style lang=\"scss\">\n.el-agreement-form{\n    margin-top: 1rem;\n    .el-form--inline .el-form-item{\n        width: 100%;\n        display: flex;\n        .el-form-item__content{\n            width: calc( 100% - 300px );\n            display: flex;\n        }\n        .el-button{\n            margin-left: 10px;\n        }\n    }\n}\n</style>\n"],"sourceRoot":"src/views/contract/contract/components"}]}