{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\contractManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\contractManagement.vue","mtime":1619001092678},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getPage, removeContract} from \"@/api/contract/contract/contract\";\nimport {mapGetters} from \"vuex\";\nimport {getDeptTree} from \"@/api/system/dept\";\nimport addContract from './addContract';\nimport {getStore} from \"@/util/store\";\nimport {getUser} from \"@/api/system/user\";\nimport contractManageDetailDailog from './components/contractManageDetailDailog';\nimport contractExportDialog from \"./components/contractExportDialog\";\n\nexport default {\n    components: { \n      addContract,\n      contractManageDetailDailog,\n      contractExportDialog\n    },\n    data(){\n        return{\n            showAdd:false,//true:新增窗口展示，列表页隐藏\n            exportDialogFlag: false,\n            form: {},\n            query: {},\n            dicDataList: [],//当前登录人的数据权限部门\n            loading: true,\n            page: {\n                pageSize: 10,\n                currentPage: 1,\n                total: 0\n            },\n            data:[],\n            option: {\n                calcHeight: 210,\n                searchShow: true,\n                searchMenuSpan: 6,\n                tip: false,\n                border: true,\n                index: false,\n                viewBtn:false,\n                addBtn:false,\n                editBtn:false,\n                delBtn:false,\n                selection: true,\n                column:[\n                    {\n                        label: \"合约编码\",\n                        prop: \"conNo\",\n                        search:true,\n                        searchOrder:6,\n                        display: false,\n                        slot:true\n                    },\n                    {\n                        label: \"合约名称\",\n                        prop: \"conName\",\n                        search:true,\n                        searchOrder:7,\n                        display: false\n                    },\n                    {\n                        label: \"客户名称\",\n                        prop: \"custName\",\n                        search:true,\n                        searchOrder:5,\n                        display: false\n                    },\n                    {\n                        label: \"所属部门\",\n                        prop: \"deptId\",\n                        search:true,\n                        searchOrder:4,\n                        type:\"select\",\n                        searchFilterable:true,\n                        display: false,\n                        dicData: [],\n                        props: {\n                          label: \"title\",\n                          value: \"value\"\n                        }\n                    },\n                    {\n                        label: \"合约类型\",\n                        prop: \"conType\",\n                        type:\"select\",\n                        search:true,\n                        searchOrder:2,\n                        display: false,\n                        props: {\n                          label: 'dictValue',\n                          value: 'dictKey'\n                        },\n                        dicUrl: this.getDicValue(\"contract_type\")\n                    },\n                    {\n                        label: \"合约状态\",\n                        prop: \"conState\",\n                        type:\"select\",\n                        search:true,\n                        searchOrder:3,\n                        display: false,\n                        props: {\n                          label: 'dictValue',\n                          value: 'dictKey'\n                        },\n                        dicUrl: this.getDicValue(\"contract_state\")\n                    },\n                    {\n                        label: \"合约金额\",\n                        prop: \"conAmount\",\n                        display: false\n                    },\n                    {\n                        label: \"合约起始日期\",\n                        prop: \"conStartTime\",\n                        type: \"date\",\n                        format: \"yyyy-MM-dd hh:mm:ss\",\n                        valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                        display: false\n                    },\n                    {\n                        label: \"合约起始日期\",\n                        prop: \"conEndTime\",\n                        type: \"date\",\n                        format: \"yyyy-MM-dd hh:mm:ss\",\n                        valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                        display: false\n                    }\n                ]\n            },\n          selections:{},\n          searchCondition:{}\n        }\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.contract_add, false),\n          editButton: this.vaildData(this.permission.contract_edit, false),\n          bindBtn: this.vaildData(this.permission.contract_bind, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    mounted(){\n      this.getCurrDicData();\n    },\n    methods: {\n      addContract(){\n      },\n      addHandle(){\n        this.showAdd=true;\n      },\n      addBack(){\n        this.showAdd=false;\n        this.onLoad(this.page);\n      },\n      handleRemove(){\n        let params = {};\n        params.contractRemoveIds = [];\n        for (var id in this.selections) {\n          params.contractRemoveIds.push(\"\"+id);\n        }\n        if(params.contractRemoveIds.length <= 0) {\n          this.$message({\n            type: 'warning',\n            message: '未选择合约信息！'\n          });\n          return ;\n        }\n        this.$confirm(\"是否确定删除（绑定产品和用户的合约不可删除）?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          title:\"删除合约\",\n          type: \"warning\"\n        }).then(() => {\n          removeContract(params).then((result)=>{\n            // 1 根据返回结果如果删除成功 弹出提示框\n            console.log(result);\n            if(result.data.data.length > 0) {\n              // 批量删除有不可删除信息\n              this.$confirm(result.data.msg, {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                title:\"删除合约\",\n                type: \"warning\",\n                dangerouslyUseHTMLString:true\n              }).catch(()=>{});\n            } else {\n              this.$message({\n                type: 'success',\n                message: result.data.msg\n              });\n            }\n          });\n        }).catch(()=>{\n        });\n      },\n      handleExport(){\n        this.exportDialogFlag = true;\n      },\n      cancelExportDialog() {\n        this.exportDialogFlag = false;\n      },\n      getDetail(row){\n        this.$refs.contractManageDetailDailog.openDalog(row);\n      },\n      // rowSave(row, done, loading) {\n      //   add(row).then(() => {\n      //     done();\n      //     this.onLoad(this.page);\n      //     this.$message({\n      //       type: \"success\",\n      //       message: \"操作成功!\"\n      //     });\n      //   }, error => {\n      //     window.console.log(error);\n      //     loading();\n      //   });\n      // },\n      // rowUpdate(row, index, done, loading) {\n      //   update(row).then(() => {\n      //     done();\n      //     this.onLoad(this.page);\n      //     this.$message({\n      //       type: \"success\",\n      //       message: \"操作成功!\"\n      //     });\n      //   }, error => {\n      //     window.console.log(error);\n      //     loading();\n      //   });\n      // },\n      // rowDel(row) {\n      //   this.$confirm(\"确定将选择数据删除?\", {\n      //     confirmButtonText: \"确定\",\n      //     cancelButtonText: \"取消\",\n      //     type: \"warning\"\n      //   })\n      //     .then(() => {\n      //       return remove(row.id);\n      //     })\n      //     .then(() => {\n      //       this.onLoad(this.page);\n      //       this.$message({\n      //         type: \"success\",\n      //         message: \"操作成功!\"\n      //       });\n      //     });\n      // },\n      // handleDelete() {\n      //   if (this.selectionList.length === 0) {\n      //     this.$message.warning(\"请选择至少一条数据\");\n      //     return;\n      //   }\n      //   this.$confirm(\"确定将选择数据删除?\", {\n      //     confirmButtonText: \"确定\",\n      //     cancelButtonText: \"取消\",\n      //     type: \"warning\"\n      //   })\n      //     .then(() => {\n      //       return remove(this.ids);\n      //     })\n      //     .then(() => {\n      //       this.onLoad(this.page);\n      //       this.$message({\n      //         type: \"success\",\n      //         message: \"操作成功!\"\n      //       });\n      //       this.$refs.crud.toggleSelection();\n      //     });\n      // },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          this.getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.form.createTime=\"\";\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        console.log(params);\n        this.query = params;\n        this.query.custManager = this.form.manager;\n        if(this.form.createTime){\n          this.query.startCreateTime = this.form.createTime[0];\n          this.query.endCreateTime = this.form.createTime[1];\n        }\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      checkRemove(selection, row) {\n        // 判断是否取消选中\n        let hasRemoveFlag = true;\n        for(var i = 0; i < selection.length; i++) {\n          if(selection[i].id == row.id) {\n            hasRemoveFlag = false;\n            break;\n          }\n        }\n        return hasRemoveFlag;\n      },\n      selectAll(selection){\n        for(let i = 0; i < selection.length; i++) {\n          this.select(selection, selection[i]);\n        }\n      },\n      select(selection, row){\n        // 判断是否取消选中\n        let hasRemoveFlag = this.checkRemove(selection, row);\n        if(hasRemoveFlag) {\n          delete this.selections[row.id];\n        } else {\n          this.selections[row.id] = row;\n        }\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      //获取当前登录人的数据权限部门信息\n      getCurrDicData(){\n        getDeptTree(this.form.tenantId).then(res => {\n          //所有的部门\n          const allDep = res.data.data;\n          //当前登录人的信息\n          const userInfo= getStore({name: 'userInfo'}) || [];\n          getUser(userInfo.userId).then(res => {\n            const curruser = res.data.data;\n            //用户部门数据权限字符串\n            const userdataStr = curruser.dataAuthority;\n            //用户部门数据权限数组\n            const arr = userdataStr.split(\",\");\n            //遍历获取当前登录人可访问的部门\n            var dicData = [];\n            for(var i=0,len = allDep.length;i<len;i++){\n              if(arr.indexOf(allDep[i].id)>=0){\n                dicData.push(allDep[i]);\n              }\n            }\n            this.dicDataList = dicData;\n            const column = this.findObject(this.option.column,\"deptId\");\n            column.dicData = dicData;\n          });\n        });\n      },\n      onLoad(page, params = {}) {\n        this.loading = false;\n        getPage(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n        // getDeptTree(this.form.tenantId).then(res => {\n        //   //所有的部门\n        //   const allDep = res.data.data;\n        //   //当前登录人的信息\n        //   const userInfo= getStore({name: 'userInfo'}) || [];\n        //   getUser(userInfo.userId).then(res => {\n        //     const curruser = res.data.data;\n        //     //用户部门数据权限字符串\n        //     const userdataStr = curruser.dataAuthority;\n        //     //用户部门数据权限数组\n        //     const arr = userdataStr.split(\",\");\n        //     //遍历获取当前登录人可访问的部门\n        //     var dicData = [];\n        //     for(var i=0,len = allDep.length;i<len;i++){\n        //       if(arr.indexOf(allDep[i].id)>=0){\n        //         dicData.push(allDep[i]);\n        //       }\n        //     }\n        //     const column = this.findObject(this.option.column,\"deptId\");\n        //     column.dicData = dicData;\n        //   });\n        // });\n      }\n    }\n}\n",{"version":3,"sources":["contractManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"contractManagement.vue","sourceRoot":"src/views/contract/contract","sourcesContent":["<!--合约管理-->\n<template>\n    <basic-container>\n        <avue-crud\n                v-show=\"!showAdd\"\n               :option=\"option\"\n               :table-loading=\"loading\"\n               :data=\"data\"\n               :page=\"page\"\n               :permission=\"permissionList\"\n               :before-open=\"beforeOpen\"\n               v-model=\"form\"\n               ref=\"crud\"\n               :search.sync=\"searchCondition\"\n               @row-del=\"rowDel\"\n               @search-change=\"searchChange\"\n               @search-reset=\"searchReset\"\n               @selection-change=\"selectionChange\"\n               @current-change=\"currentChange\"\n               @size-change=\"sizeChange\"\n               @refresh-change=\"refreshChange\"\n               @on-load=\"onLoad\"\n               @select=\"select\"\n               @select-all=\"selectAll\">\n               <template slot=\"menuLeft\">\n                 <el-button \n                      type=\"primary\" \n                      size=\"small\"\n                      icon=\"el-icon-plus\"\n                      @click=\"addHandle\">\n                      创建合约\n                    </el-button>\n                  <el-button \n                      type=\"danger\" \n                      size=\"small\"\n                      icon=\"el-icon-delete\"\n                      plain\n                      @click=\"handleRemove\">\n                      删除\n                    </el-button>\n                    <el-button \n                      type=\"warning\"\n                      size=\"small\"\n                      plain\n                      icon=\"el-icon-download\"\n                      @click=\"handleExport\">\n                      导出\n                    </el-button>\n                </template>\n                <template slot=\"search\" slot-scope=\"{}\">\n                  <div class=\"solt\">\n                    <div class=\"solt-search\">\n                        <label  class=\"el-form-item__label\"> 客户经理:</label>\n                        <el-input placeholder=\"客户经理\"  size=\"small\" v-model=\"form.manager\"></el-input>\n                    </div>\n                    <div class=\"solt-search\">\n                        <label class=\"el-form-item__label\" > 创建时间:</label>\n                        <el-date-picker\n                          size=\"small\"\n                          v-model=\"form.createTime\"\n                          type=\"datetimerange\"\n                          value-format=\"yyyy-MM-dd HH:mm:ss\"\n                          format=\"yyyy-MM-dd HH:mm:ss\"\n                          range-separator=\"至\"\n                          start-placeholder=\"开始时间\"\n                          end-placeholder=\"结束时间\">\n                        </el-date-picker>\n                  </div>\n                  </div>\n                </template>\n                <template slot-scope=\"{type,size}\" slot=\"menu\">\n                  <el-button  :size=\"size\" :type=\"type\">编辑</el-button>\n                  <el-button  :size=\"size\" :type=\"type\">绑定权限</el-button>\n                </template>\n                <template slot=\"conNo\" slot-scope=\"{row}\">\n                  <el-button type=\"text\" size=\"mini\" @click=\"getDetail(row)\">{{row.conNo}}</el-button>\n                </template>\n        </avue-crud>\n        <add-contract v-if=\"showAdd\" @addBack=\"addBack\" :dicDataList=\"dicDataList\"></add-contract>\n        <contract-manageDetail-dailog ref=\"contractManageDetailDailog\"></contract-manageDetail-dailog>\n        <contract-export-dialog ref=\"customerExportDialog\" :exportDialogFlag=\"exportDialogFlag\"\n                :searchCondition=\"searchCondition\" :selectedRows=\"selections\" @cancel=\"cancelExportDialog\">\n        </contract-export-dialog>\n    </basic-container>\n</template>\n<script>\nimport {getPage, removeContract} from \"@/api/contract/contract/contract\";\nimport {mapGetters} from \"vuex\";\nimport {getDeptTree} from \"@/api/system/dept\";\nimport addContract from './addContract';\nimport {getStore} from \"@/util/store\";\nimport {getUser} from \"@/api/system/user\";\nimport contractManageDetailDailog from './components/contractManageDetailDailog';\nimport contractExportDialog from \"./components/contractExportDialog\";\n\nexport default {\n    components: { \n      addContract,\n      contractManageDetailDailog,\n      contractExportDialog\n    },\n    data(){\n        return{\n            showAdd:false,//true:新增窗口展示，列表页隐藏\n            exportDialogFlag: false,\n            form: {},\n            query: {},\n            dicDataList: [],//当前登录人的数据权限部门\n            loading: true,\n            page: {\n                pageSize: 10,\n                currentPage: 1,\n                total: 0\n            },\n            data:[],\n            option: {\n                calcHeight: 210,\n                searchShow: true,\n                searchMenuSpan: 6,\n                tip: false,\n                border: true,\n                index: false,\n                viewBtn:false,\n                addBtn:false,\n                editBtn:false,\n                delBtn:false,\n                selection: true,\n                column:[\n                    {\n                        label: \"合约编码\",\n                        prop: \"conNo\",\n                        search:true,\n                        searchOrder:6,\n                        display: false,\n                        slot:true\n                    },\n                    {\n                        label: \"合约名称\",\n                        prop: \"conName\",\n                        search:true,\n                        searchOrder:7,\n                        display: false\n                    },\n                    {\n                        label: \"客户名称\",\n                        prop: \"custName\",\n                        search:true,\n                        searchOrder:5,\n                        display: false\n                    },\n                    {\n                        label: \"所属部门\",\n                        prop: \"deptId\",\n                        search:true,\n                        searchOrder:4,\n                        type:\"select\",\n                        searchFilterable:true,\n                        display: false,\n                        dicData: [],\n                        props: {\n                          label: \"title\",\n                          value: \"value\"\n                        }\n                    },\n                    {\n                        label: \"合约类型\",\n                        prop: \"conType\",\n                        type:\"select\",\n                        search:true,\n                        searchOrder:2,\n                        display: false,\n                        props: {\n                          label: 'dictValue',\n                          value: 'dictKey'\n                        },\n                        dicUrl: this.getDicValue(\"contract_type\")\n                    },\n                    {\n                        label: \"合约状态\",\n                        prop: \"conState\",\n                        type:\"select\",\n                        search:true,\n                        searchOrder:3,\n                        display: false,\n                        props: {\n                          label: 'dictValue',\n                          value: 'dictKey'\n                        },\n                        dicUrl: this.getDicValue(\"contract_state\")\n                    },\n                    {\n                        label: \"合约金额\",\n                        prop: \"conAmount\",\n                        display: false\n                    },\n                    {\n                        label: \"合约起始日期\",\n                        prop: \"conStartTime\",\n                        type: \"date\",\n                        format: \"yyyy-MM-dd hh:mm:ss\",\n                        valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                        display: false\n                    },\n                    {\n                        label: \"合约起始日期\",\n                        prop: \"conEndTime\",\n                        type: \"date\",\n                        format: \"yyyy-MM-dd hh:mm:ss\",\n                        valueFormat: \"yyyy-MM-dd hh:mm:ss\",\n                        display: false\n                    }\n                ]\n            },\n          selections:{},\n          searchCondition:{}\n        }\n    },\n    computed: {\n      ...mapGetters([\"permission\"]),\n      permissionList() {\n        return {\n          addBtn: this.vaildData(this.permission.contract_add, false),\n          editButton: this.vaildData(this.permission.contract_edit, false),\n          bindBtn: this.vaildData(this.permission.contract_bind, false)\n        };\n      },\n      ids() {\n        let ids = [];\n        this.selectionList.forEach(ele => {\n          ids.push(ele.id);\n        });\n        return ids.join(\",\");\n      }\n    },\n    mounted(){\n      this.getCurrDicData();\n    },\n    methods: {\n      addContract(){\n      },\n      addHandle(){\n        this.showAdd=true;\n      },\n      addBack(){\n        this.showAdd=false;\n        this.onLoad(this.page);\n      },\n      handleRemove(){\n        let params = {};\n        params.contractRemoveIds = [];\n        for (var id in this.selections) {\n          params.contractRemoveIds.push(\"\"+id);\n        }\n        if(params.contractRemoveIds.length <= 0) {\n          this.$message({\n            type: 'warning',\n            message: '未选择合约信息！'\n          });\n          return ;\n        }\n        this.$confirm(\"是否确定删除（绑定产品和用户的合约不可删除）?\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          title:\"删除合约\",\n          type: \"warning\"\n        }).then(() => {\n          removeContract(params).then((result)=>{\n            // 1 根据返回结果如果删除成功 弹出提示框\n            console.log(result);\n            if(result.data.data.length > 0) {\n              // 批量删除有不可删除信息\n              this.$confirm(result.data.msg, {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                title:\"删除合约\",\n                type: \"warning\",\n                dangerouslyUseHTMLString:true\n              }).catch(()=>{});\n            } else {\n              this.$message({\n                type: 'success',\n                message: result.data.msg\n              });\n            }\n          });\n        }).catch(()=>{\n        });\n      },\n      handleExport(){\n        this.exportDialogFlag = true;\n      },\n      cancelExportDialog() {\n        this.exportDialogFlag = false;\n      },\n      getDetail(row){\n        this.$refs.contractManageDetailDailog.openDalog(row);\n      },\n      // rowSave(row, done, loading) {\n      //   add(row).then(() => {\n      //     done();\n      //     this.onLoad(this.page);\n      //     this.$message({\n      //       type: \"success\",\n      //       message: \"操作成功!\"\n      //     });\n      //   }, error => {\n      //     window.console.log(error);\n      //     loading();\n      //   });\n      // },\n      // rowUpdate(row, index, done, loading) {\n      //   update(row).then(() => {\n      //     done();\n      //     this.onLoad(this.page);\n      //     this.$message({\n      //       type: \"success\",\n      //       message: \"操作成功!\"\n      //     });\n      //   }, error => {\n      //     window.console.log(error);\n      //     loading();\n      //   });\n      // },\n      // rowDel(row) {\n      //   this.$confirm(\"确定将选择数据删除?\", {\n      //     confirmButtonText: \"确定\",\n      //     cancelButtonText: \"取消\",\n      //     type: \"warning\"\n      //   })\n      //     .then(() => {\n      //       return remove(row.id);\n      //     })\n      //     .then(() => {\n      //       this.onLoad(this.page);\n      //       this.$message({\n      //         type: \"success\",\n      //         message: \"操作成功!\"\n      //       });\n      //     });\n      // },\n      // handleDelete() {\n      //   if (this.selectionList.length === 0) {\n      //     this.$message.warning(\"请选择至少一条数据\");\n      //     return;\n      //   }\n      //   this.$confirm(\"确定将选择数据删除?\", {\n      //     confirmButtonText: \"确定\",\n      //     cancelButtonText: \"取消\",\n      //     type: \"warning\"\n      //   })\n      //     .then(() => {\n      //       return remove(this.ids);\n      //     })\n      //     .then(() => {\n      //       this.onLoad(this.page);\n      //       this.$message({\n      //         type: \"success\",\n      //         message: \"操作成功!\"\n      //       });\n      //       this.$refs.crud.toggleSelection();\n      //     });\n      // },\n      beforeOpen(done, type) {\n        if ([\"edit\", \"view\"].includes(type)) {\n          this.getDetail(this.form.id).then(res => {\n            this.form = res.data.data;\n          });\n        }\n        done();\n      },\n      searchReset() {\n        this.query = {};\n        this.form.createTime=\"\";\n        this.onLoad(this.page);\n      },\n      searchChange(params, done) {\n        console.log(params);\n        this.query = params;\n        this.query.custManager = this.form.manager;\n        if(this.form.createTime){\n          this.query.startCreateTime = this.form.createTime[0];\n          this.query.endCreateTime = this.form.createTime[1];\n        }\n        this.page.currentPage = 1;\n        this.onLoad(this.page, params);\n        done();\n      },\n      selectionChange(list) {\n        this.selectionList = list;\n      },\n      checkRemove(selection, row) {\n        // 判断是否取消选中\n        let hasRemoveFlag = true;\n        for(var i = 0; i < selection.length; i++) {\n          if(selection[i].id == row.id) {\n            hasRemoveFlag = false;\n            break;\n          }\n        }\n        return hasRemoveFlag;\n      },\n      selectAll(selection){\n        for(let i = 0; i < selection.length; i++) {\n          this.select(selection, selection[i]);\n        }\n      },\n      select(selection, row){\n        // 判断是否取消选中\n        let hasRemoveFlag = this.checkRemove(selection, row);\n        if(hasRemoveFlag) {\n          delete this.selections[row.id];\n        } else {\n          this.selections[row.id] = row;\n        }\n      },\n      selectionClear() {\n        this.selectionList = [];\n        this.$refs.crud.toggleSelection();\n      },\n      currentChange(currentPage){\n        this.page.currentPage = currentPage;\n      },\n      sizeChange(pageSize){\n        this.page.pageSize = pageSize;\n      },\n      //获取当前登录人的数据权限部门信息\n      getCurrDicData(){\n        getDeptTree(this.form.tenantId).then(res => {\n          //所有的部门\n          const allDep = res.data.data;\n          //当前登录人的信息\n          const userInfo= getStore({name: 'userInfo'}) || [];\n          getUser(userInfo.userId).then(res => {\n            const curruser = res.data.data;\n            //用户部门数据权限字符串\n            const userdataStr = curruser.dataAuthority;\n            //用户部门数据权限数组\n            const arr = userdataStr.split(\",\");\n            //遍历获取当前登录人可访问的部门\n            var dicData = [];\n            for(var i=0,len = allDep.length;i<len;i++){\n              if(arr.indexOf(allDep[i].id)>=0){\n                dicData.push(allDep[i]);\n              }\n            }\n            this.dicDataList = dicData;\n            const column = this.findObject(this.option.column,\"deptId\");\n            column.dicData = dicData;\n          });\n        });\n      },\n      onLoad(page, params = {}) {\n        this.loading = false;\n        getPage(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n          const data = res.data.data;\n          this.page.total = data.total;\n          this.data = data.records;\n          this.loading = false;\n          this.selectionClear();\n        });\n        // getDeptTree(this.form.tenantId).then(res => {\n        //   //所有的部门\n        //   const allDep = res.data.data;\n        //   //当前登录人的信息\n        //   const userInfo= getStore({name: 'userInfo'}) || [];\n        //   getUser(userInfo.userId).then(res => {\n        //     const curruser = res.data.data;\n        //     //用户部门数据权限字符串\n        //     const userdataStr = curruser.dataAuthority;\n        //     //用户部门数据权限数组\n        //     const arr = userdataStr.split(\",\");\n        //     //遍历获取当前登录人可访问的部门\n        //     var dicData = [];\n        //     for(var i=0,len = allDep.length;i<len;i++){\n        //       if(arr.indexOf(allDep[i].id)>=0){\n        //         dicData.push(allDep[i]);\n        //       }\n        //     }\n        //     const column = this.findObject(this.option.column,\"deptId\");\n        //     column.dicData = dicData;\n        //   });\n        // });\n      }\n    }\n}\n</script>\n<style lang=\"scss\">\n.solt{\n  display: flex;\n  width: 50%;\n.solt-search{\n  padding-left:10px;\n  padding-right:10px; \n  width:100%;\n  display: flex;\n  .el-form-item__label{\n    width: 110px;\n  }\n}\n}\n</style>\n"]}]}