{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\productitem.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\productitem.vue","mtime":1618541026431},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport productitemAdd from './productItem/productitem-add';\nimport {getProdAddedList} from \"@/api/contract/product/product\";\nimport {getList, remove,updateItemState,exportData} from \"@/api/contract/product/productitem\";\nimport {selectItems} from \"@/api/contract/product/category\";\nimport {mapGetters} from \"vuex\";\nimport {getDeptTree} from \"@/api/system/dept\";\nimport website from '@/config/website';\nimport {getToken} from '@/util/auth';\nexport default {\n  components:{\n    productitemAdd,\n  },\n  data() {\n    return {\n      showAdd:false,\n      id:'',\n      isView:false,\n      form: {},\n      createTime:[],\n      updateTime:[],\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        menuWidth:280,\n        calcHeight: 210,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        index: false,\n        viewBtn: false,\n        addBtn:false,\n        editBtn:false,\n        delBtn:false,\n        menuFixed:false,\n        selection: true,\n        refreshBtn: false,\n        columnBtn: false,\n        searchShowBtn: false,\n        searchLabelWidth:100,\n        column: [\n          {\n            label: \"id\",\n            prop: \"id\",\n            hide: true\n          },\n          {\n            label: \"产品项名称\",\n            prop: \"propName\",\n            slot:true,\n            width: 240,\n            searchOrder:8,\n            fixed: true,\n            search: true\n          },\n          {\n            label: \"产品项编码\",\n            prop: \"propCode\",\n            fixed: true,\n            search: true,\n            searchOrder:9,\n            width: 100\n          },\n          {\n            label: \"所属部门\",\n            prop: \"propDept\",\n            type: \"select\",\n            search: true,\n            searchOrder:2,\n            searchFilterable:true,\n            dicData: [],\n            props: {\n              label: \"title\",\n              value: \"value\"\n            }\n          },\n          {\n            label: \"产品类型\",\n            prop: \"cateId\",\n            search: true,\n            searchOrder:6,\n            type: \"select\",\n            dicData: [],\n            searchFilterable:true,\n            props: {\n              label: \"cateName\",\n              value: \"id\"\n            }\n          },\n          {\n            label: \"发布应用\",\n            prop: \"prodId\",\n            search: true,\n            hide:true,\n            searchOrder:5,\n            type: \"select\",\n            searchFilterable:true,\n            dicData: [],\n            props: {\n              label: \"prodName\",\n              value: \"id\"\n            }\n          },\n          {\n            label: \"发布范围\",\n            prop: \"releaseScope\",\n            search: true,\n            searchOrder:7,\n            type: \"select\",\n            searchFilterable:true,\n            dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_RANGE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            }\n          },\n          {\n            label: \"创建时间\",\n            prop: \"createTime\",\n            width: 150,\n            search: true,\n            searchOrder:3,\n            searchslot: true,\n            type: 'datetimerange',\n            searchSpan:12,\n            row:true,\n            startPlaceholder: '时间日期开始范围自定义',\n            endPlaceholder: '时间日期结束范围自定义'\n          },\n          {\n            label: \"创建人\",\n            prop: \"createUserName\"\n          },\n          {\n            label: \"修改时间\",\n            prop: \"updateTime\",\n            width: 150,\n            search: true,\n            searchOrder:1,\n            searchslot: true,\n            type: 'datetimerange',\n            searchSpan:12,\n            row:true,\n            startPlaceholder: '时间日期开始范围自定义',\n            endPlaceholder: '时间日期结束范围自定义'\n          },\n          {\n            label: \"更新人\",\n            prop: \"updateUserName\"\n          },\n          {\n            label: \"上架日期\",\n            prop: \"addedDate\",\n            width: 150,\n          },\n          {\n            label: \"下架日期\",\n            prop: \"expiredDate\",\n            width: 150,\n          },\n          {\n            label: \"产品状态\",\n            prop: \"itemState\",\n            search: true,\n            searchOrder:4,\n            type: \"select\",\n            dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_STATE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            }\n          }\n        ]\n      },\n      data: []\n    };\n  },\n   watch: {\n    'form.tenantId'() {\n      if (this.form.tenantId !== '') {\n        getDeptTree(this.form.tenantId).then(res => {\n          const column = this.findObject(this.option.column, \"propDept\");\n          column.dicData = res.data.data;\n        });\n        selectItems().then(res => {\n          const column = this.findObject(this.option.column, \"cateId\");\n          column.dicData = res.data.data;\n        });\n        getProdAddedList().then(res => {\n          const column = this.findObject(this.option.column, \"prodId\");\n          column.dicData = res.data.data;\n        });\n      }\n    },\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    handleExport(){\n      (this.query)\n      this.$confirm(\"是否导出产品项数据?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        let url = exportData();\n        window.open(url+`?${website.tokenHeader}=${getToken()}`);\n      });\n    },\n    back(){\n      this.showAdd=false;\n      this.onLoad(this.page);\n    },\n    rowItemState(ids, itemState){\n      this.$confirm(itemState===1?\"确定将选择数据上架?\":\"确定将选择数据下架?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n          return updateItemState(ids,itemState);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleItemState(itemState){\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      for(let i =0; i<this.selectionList.length;i++){\n        if(this.selectionList[i].itemState === 4){\n          this.$message.warning(\"草稿数据不能进行上下架操作!\");\n          return false;\n        }\n      }\n      this.rowItemState(this.ids,itemState);\n      \n    },\n    handleAdd(){\n      this.showAdd=true;\n      this.isView=false;\n      this.id=\"\";\n      //this.$router.push({path: '/contract/product/productitemAdd'});\n    },\n    rowView(row) {\n      console.log('view',row.id)\n      this.id=row.id;\n      this.isView=true;\n      this.showAdd=true\n    },\n    rowEdit(row) {\n      console.log('edit',row.id)\n      this.id=row.id;\n      this.isView=false;\n      this.showAdd=true;\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          console.log(row)\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    searchReset() {\n      this.query = {};\n      this.createTime=[]\n      this.updateTime=[]\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      if(this.createTime && this.createTime.length > 0){\n        this.query.createStartTime=this.createTime[0] \n        this.query.createEndTime=this.createTime[1] \n      }\n      if(this.updateTime && this.updateTime.length > 0){\n        this.query.updateStartTime=this.updateTime[0] \n        this.query.updateEndTime=this.updateTime[1] \n      }\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage){\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize){\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n      getDeptTree(this.form.tenantId).then(res => {\n        const column = this.findObject(this.option.column, \"propDept\");\n        column.dicData = res.data.data;\n      });\n      selectItems().then(res => {\n        const column = this.findObject(this.option.column, \"cateId\");\n        column.dicData = res.data.data;\n      });\n      getProdAddedList().then(res => {\n        const column = this.findObject(this.option.column, \"prodId\");\n        column.dicData = res.data.data;\n      });\n    }\n  }\n};\n",{"version":3,"sources":["productitem.vue"],"names":[],"mappingsfile":"productitem.vue","sourceRoot":"src/views/contract/product","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud v-show=\"!showAdd\"\r\n      :option=\"option\"\r\n      :table-loading=\"loading\"\r\n      :data=\"data\"\r\n      :page=\"page\"\r\n      :permission=\"permissionList\"\r\n      :before-open=\"beforeOpen\"\r\n      v-model=\"form\"\r\n      ref=\"crud\"\r\n      @search-change=\"searchChange\"\r\n      @search-reset=\"searchReset\"\r\n      @selection-change=\"selectionChange\"\r\n      @current-change=\"currentChange\"\r\n      @size-change=\"sizeChange\"\r\n      @on-load=\"onLoad\">\r\n      <template slot=\"propName\" slot-scope=\"scope\">\r\n        <el-link type=\"primary\" @click.native=\"rowView(scope.row)\">{{scope.row.propName}}</el-link>\r\n        <el-tag size=\"small\" v-if=\"scope.row.itemState == 1\" effect=\"plain\" style=\"float:right;\">{{scope.row.itemStateName}}</el-tag>\r\n        <el-tag size=\"small\" v-if=\"scope.row.itemState == 2\" effect=\"plain\" type=\"warning\" style=\"float:right;\">{{scope.row.itemStateName}}</el-tag>\r\n        <el-tag size=\"small\" v-if=\"scope.row.itemState == 3\" effect=\"plain\" type=\"info\" style=\"float:right;\">{{scope.row.itemStateName}}</el-tag>\r\n        <el-tag size=\"small\" v-if=\"scope.row.itemState == 4\" effect=\"plain\" type=\"success\" style=\"float:right;\">{{scope.row.itemStateName}}</el-tag>\r\n      </template>\r\n      <template  slot-scope=\"{}\" slot='createTimeSearch'>\r\n        <el-date-picker\r\n          v-model=\"createTime\"\r\n          type=\"datetimerange\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n          :default-time=\"['12:00:00']\">\r\n        </el-date-picker>\r\n      </template> \r\n      <template  slot-scope=\"{}\" slot='updateTimeSearch'>\r\n        <el-date-picker\r\n          v-model=\"updateTime\"\r\n          type=\"datetimerange\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\"\r\n          value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n          :default-time=\"['12:00:00']\">\r\n        </el-date-picker>\r\n      </template>      \r\n      <template slot=\"menuLeft\">\r\n          <el-button type=\"primary\"\r\n            size=\"small\"\r\n            icon=\"el-icon-plus\"\r\n            v-if=\"permission.productitem_add\"\r\n            @click=\"handleAdd\"\r\n            >新 增</el-button>\r\n            <!-- @click=\"handleAdd\" -->\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-sell\"\r\n                   v-if=\"permission.productitem_added\"\r\n                    @click=\"handleItemState(1)\">上 架\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-sold-out\"\r\n                   v-if=\"permission.productitem_expired\"\r\n                   @click=\"handleItemState(2)\">下 架\r\n        </el-button>\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.productitem_export\"\r\n                   icon=\"el-icon-download\"\r\n                   @click=\"handleExport\">导出\r\n        </el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   v-if=\"permission.productitem_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n     <template slot-scope=\"scope\" slot=\"menu\">\r\n      <el-button v-if=\"permission.productitem_edit\" icon=\"el-icon-edit-outline\" type=\"text\" size=\"small\" @click.native=\"rowEdit(scope.row)\">编辑</el-button>\r\n      <el-button v-if=\"permission.productitem_added && (scope.row.itemState == 2 || scope.row.itemState == 3)\" icon=\"el-icon-sell\" type=\"text\" size=\"small\" @click.native=\"rowItemState(scope.row.id,1)\">上架</el-button>\r\n      <el-button v-if=\"permission.productitem_expired && scope.row.itemState == 1\" icon=\"el-icon-sold-out\" type=\"text\" size=\"small\" @click.native=\"rowItemState(scope.row.id,2)\">下架</el-button>\r\n      <el-button v-if=\"permission.productitem_delete\" icon=\"el-icon-delete\" type=\"text\" size=\"small\" @click.native=\"rowDel(scope.row)\" style='color: #E02020;'>删除</el-button>\r\n      <el-button v-if=\"permission.productitem_view\" icon=\"el-icon-reading\" type=\"text\" size=\"small\" @click.native=\"rowView(scope.row)\">详情</el-button>\r\n    </template>\r\n    </avue-crud>\r\n    <productitem-add v-if=\"showAdd\" @back=\"back\" :id=\"id\" :is-view=\"isView\" ></productitem-add>\r\n  </basic-container>\r\n  \r\n</template>\r\n\r\n\r\n<script>\r\n  import productitemAdd from './productItem/productitem-add';\r\n  import {getProdAddedList} from \"@/api/contract/product/product\";\r\n  import {getList, remove,updateItemState,exportData} from \"@/api/contract/product/productitem\";\r\n  import {selectItems} from \"@/api/contract/product/category\";\r\n  import {mapGetters} from \"vuex\";\r\n  import {getDeptTree} from \"@/api/system/dept\";\r\n  import website from '@/config/website';\r\n  import {getToken} from '@/util/auth';\r\n  export default {\r\n    components:{\r\n      productitemAdd,\r\n    },\r\n    data() {\r\n      return {\r\n        showAdd:false,\r\n        id:'',\r\n        isView:false,\r\n        form: {},\r\n        createTime:[],\r\n        updateTime:[],\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          menuWidth:280,\r\n          calcHeight: 210,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          viewBtn: false,\r\n          addBtn:false,\r\n          editBtn:false,\r\n          delBtn:false,\r\n          menuFixed:false,\r\n          selection: true,\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          searchLabelWidth:100,\r\n          column: [\r\n            {\r\n              label: \"id\",\r\n              prop: \"id\",\r\n              hide: true\r\n            },\r\n            {\r\n              label: \"产品项名称\",\r\n              prop: \"propName\",\r\n              slot:true,\r\n              width: 240,\r\n              searchOrder:8,\r\n              fixed: true,\r\n              search: true\r\n            },\r\n            {\r\n              label: \"产品项编码\",\r\n              prop: \"propCode\",\r\n              fixed: true,\r\n              search: true,\r\n              searchOrder:9,\r\n              width: 100\r\n            },\r\n            {\r\n              label: \"所属部门\",\r\n              prop: \"propDept\",\r\n              type: \"select\",\r\n              search: true,\r\n              searchOrder:2,\r\n              searchFilterable:true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"title\",\r\n                value: \"value\"\r\n              }\r\n            },\r\n            {\r\n              label: \"产品类型\",\r\n              prop: \"cateId\",\r\n              search: true,\r\n              searchOrder:6,\r\n              type: \"select\",\r\n              dicData: [],\r\n              searchFilterable:true,\r\n              props: {\r\n                label: \"cateName\",\r\n                value: \"id\"\r\n              }\r\n            },\r\n            {\r\n              label: \"发布应用\",\r\n              prop: \"prodId\",\r\n              search: true,\r\n              hide:true,\r\n              searchOrder:5,\r\n              type: \"select\",\r\n              searchFilterable:true,\r\n              dicData: [],\r\n              props: {\r\n                label: \"prodName\",\r\n                value: \"id\"\r\n              }\r\n            },\r\n            {\r\n              label: \"发布范围\",\r\n              prop: \"releaseScope\",\r\n              search: true,\r\n              searchOrder:7,\r\n              type: \"select\",\r\n              searchFilterable:true,\r\n              dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_RANGE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              }\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              width: 150,\r\n              search: true,\r\n              searchOrder:3,\r\n              searchslot: true,\r\n              type: 'datetimerange',\r\n              searchSpan:12,\r\n              row:true,\r\n              startPlaceholder: '时间日期开始范围自定义',\r\n              endPlaceholder: '时间日期结束范围自定义'\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\"\r\n            },\r\n            {\r\n              label: \"修改时间\",\r\n              prop: \"updateTime\",\r\n              width: 150,\r\n              search: true,\r\n              searchOrder:1,\r\n              searchslot: true,\r\n              type: 'datetimerange',\r\n              searchSpan:12,\r\n              row:true,\r\n              startPlaceholder: '时间日期开始范围自定义',\r\n              endPlaceholder: '时间日期结束范围自定义'\r\n            },\r\n            {\r\n              label: \"更新人\",\r\n              prop: \"updateUserName\"\r\n            },\r\n            {\r\n              label: \"上架日期\",\r\n              prop: \"addedDate\",\r\n              width: 150,\r\n            },\r\n            {\r\n              label: \"下架日期\",\r\n              prop: \"expiredDate\",\r\n              width: 150,\r\n            },\r\n            {\r\n              label: \"产品状态\",\r\n              prop: \"itemState\",\r\n              search: true,\r\n              searchOrder:4,\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.PRODUCT_STATE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n     watch: {\r\n      'form.tenantId'() {\r\n        if (this.form.tenantId !== '') {\r\n          getDeptTree(this.form.tenantId).then(res => {\r\n            const column = this.findObject(this.option.column, \"propDept\");\r\n            column.dicData = res.data.data;\r\n          });\r\n          selectItems().then(res => {\r\n            const column = this.findObject(this.option.column, \"cateId\");\r\n            column.dicData = res.data.data;\r\n          });\r\n          getProdAddedList().then(res => {\r\n            const column = this.findObject(this.option.column, \"prodId\");\r\n            column.dicData = res.data.data;\r\n          });\r\n        }\r\n      },\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      handleExport(){\r\n        (this.query)\r\n        this.$confirm(\"是否导出产品项数据?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          let url = exportData();\r\n          window.open(url+`?${website.tokenHeader}=${getToken()}`);\r\n        });\r\n      },\r\n      back(){\r\n        this.showAdd=false;\r\n        this.onLoad(this.page);\r\n      },\r\n      rowItemState(ids, itemState){\r\n        this.$confirm(itemState===1?\"确定将选择数据上架?\":\"确定将选择数据下架?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n            return updateItemState(ids,itemState);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleItemState(itemState){\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        for(let i =0; i<this.selectionList.length;i++){\r\n          if(this.selectionList[i].itemState === 4){\r\n            this.$message.warning(\"草稿数据不能进行上下架操作!\");\r\n            return false;\r\n          }\r\n        }\r\n        this.rowItemState(this.ids,itemState);\r\n        \r\n      },\r\n      handleAdd(){\r\n        this.showAdd=true;\r\n        this.isView=false;\r\n        this.id=\"\";\r\n        //this.$router.push({path: '/contract/product/productitemAdd'});\r\n      },\r\n      rowView(row) {\r\n        console.log('view',row.id)\r\n        this.id=row.id;\r\n        this.isView=true;\r\n        this.showAdd=true\r\n      },\r\n      rowEdit(row) {\r\n        console.log('edit',row.id)\r\n        this.id=row.id;\r\n        this.isView=false;\r\n        this.showAdd=true;\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            console.log(row)\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.createTime=[]\r\n        this.updateTime=[]\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        if(this.createTime && this.createTime.length > 0){\r\n          this.query.createStartTime=this.createTime[0] \r\n          this.query.createEndTime=this.createTime[1] \r\n        }\r\n        if(this.updateTime && this.updateTime.length > 0){\r\n          this.query.updateStartTime=this.updateTime[0] \r\n          this.query.updateEndTime=this.updateTime[1] \r\n        }\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage){\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize){\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n        getDeptTree(this.form.tenantId).then(res => {\r\n          const column = this.findObject(this.option.column, \"propDept\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        selectItems().then(res => {\r\n          const column = this.findObject(this.option.column, \"cateId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n        getProdAddedList().then(res => {\r\n          const column = this.findObject(this.option.column, \"prodId\");\r\n          column.dicData = res.data.data;\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}