{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\property.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\property.vue","mtime":1618367977452},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.avue-dynamic__header {\n  position: absolute;\n  right: -5px;\n  top: 0;\n  z-index: 10000;\n}\n\n.avue-dynamic__row {\n  padding-top: 0;\n  border: none;\n  height: 50px;\n\n  .avue-group .el-collapse-item__wrap {\n    border-bottom: 0;\n  }\n\n  .avue-form__group--flex {\n    .avue-form__row {\n      padding-left: 0 !important;\n      padding-right: 5px !important;\n    }\n  }\n\n  .avue-dynamic__menu {\n    margin-right: -5px;\n  }\n}\n\n.avue-dynamic__row:first-child {\n  .avue-dynamic__menu {\n    display: none;\n  }\n}\n\n.el-dialog {\n  width: 50%;\n}\n\n",{"version":3,"sources":["property.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAueA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"property.vue","sourceRoot":"src/views/contract/product","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @cell-click=\"categoryList\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot-scope=\"{}\" slot=\"buttonForm\">\r\n        <el-button @click=\"addAll\" size=\"small\" type=\"primary\">添加10条子表单数据</el-button>\r\n      </template>\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.property_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <!--      <template slot=\"categoryCount\" slot-scope=\"{row}\">-->\r\n      <!--        <el-tag @click=\"categoryList\">{{row.categoryCount}}</el-tag>-->\r\n      <!--      </template>-->\r\n    </avue-crud>\r\n    <property-dialog ref=\"refCategoryBox\" :categoryBox=\"categoryBox\" :id=\"id\" @close=\"closeDialog\"\r\n                     @reLoad=\"searchChange\"></property-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {add, getDetail, getList, remove, update} from \"@/api/contract/product/property\";\r\n  import {mapGetters} from \"vuex\";\r\n  import propertyDialog from \"./property-dialog\";\r\n\r\n  export default {\r\n    components: {propertyDialog},\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        categoryBox: false,\r\n        id: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 210,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          align: 'center',\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          indexLabel: '序号',\r\n          viewBtn: true,\r\n          selection: true,\r\n          dialogWidth: \"40%\",\r\n          defaultSort: {\r\n            prop: 'createTime',\r\n            order: 'descending'\r\n          },\r\n          labelWidth: \"20%\",\r\n          viewWidth: \"15%\",\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              display: false,\r\n              rules: [{\r\n                required: false,\r\n                message: \"请输入主键id 雪花算法产生\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性名称\",\r\n              prop: \"propName\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              searchOrder: 1,\r\n              order: 1,\r\n              search: true,\r\n              span: 23,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入属性名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性编码\",\r\n              prop: \"propCode\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              search: true,\r\n              span: 23,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入属性编码\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性类型\",\r\n              prop: \"propType\",\r\n              search: true,\r\n              span: 23,\r\n              type: \"radio\",\r\n              value: 2,\r\n              dicUrl: this.getDicValue(this.CONSTANT.PROP_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择属性类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"是否必填\",\r\n              prop: \"isRequired\",\r\n              hide: true,\r\n              span: 23,\r\n              type: \"radio\",\r\n              value: 1,\r\n              dicUrl: this.getDicValue(this.CONSTANT.IS_REQUIRED),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择是否必填\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              maxlength: 100,\r\n              minlength: 1,\r\n              hide: true,\r\n              span: 23,\r\n              rules: [{\r\n                required: false,\r\n                max: 100,\r\n                message: \"请输入属性备注\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"表现方式\",\r\n              prop: \"showType\",\r\n              span: 23,\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.SHOW_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              change: ({value}) => {\r\n                let propertyValueForm = this.findObject(this.option.column, 'propertyValue');\r\n                propertyValueForm.display = false;\r\n                if (value == 2) {\r\n                  propertyValueForm.display = true;\r\n                  this.addSelect();\r\n                }\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择表现方式\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性值\",\r\n              prop: 'propertyValue',\r\n              display: false,\r\n              type: 'dynamic',\r\n              span: 24,\r\n              required: true,\r\n              rules: [{\r\n                required: true,\r\n                // message: \"请选择表现方式\",\r\n                trigger: \"blur\"\r\n              }],\r\n              children: {\r\n                align: 'center',\r\n                type: 'form',\r\n                index: false,\r\n                calcHeight: 180,\r\n                // gutter:10,\r\n                headerAlign: 'center',\r\n                // rowAdd: (done) => {\r\n                //   this.$message.success('新增回调');\r\n                //   done({\r\n                //     // input: '默认值'\r\n                //   });\r\n                // },\r\n                // rowDel: (row, done) => {\r\n                //   this.$message.success('删除回调' + JSON.stringify(row));\r\n                //   done();\r\n                // },\r\n                column: [{\r\n                  type: 'input',\r\n                  label: '',\r\n                  labelWidth: \"0%\",\r\n                  span: 12,\r\n                  display: true,\r\n                  prop: 'propCode',\r\n                  maxlength: 20,\r\n                  // tip: '属性值编码',\r\n                  tipPlacement: 'left',\r\n                  placeholder: \"属性值编码\",\r\n                  required: true,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '属性值编码',\r\n                      trigger: \"blur\"\r\n                    }\r\n                  ]\r\n                },\r\n                  {\r\n                    type: 'input',\r\n                    label: '',\r\n                    labelWidth: \"0%\",\r\n                    span: 11,\r\n                    display: true,\r\n                    prop: 'propValue',\r\n                    maxlength: 20,\r\n                    // tip: '属性值',\r\n                    placeholder: \"属性值\",\r\n                    rules: [{\r\n                      required: true,\r\n                      message: '属性值',\r\n                      trigger: \"blur\"\r\n                    }]\r\n                  }]\r\n              }\r\n            },\r\n            {\r\n              label: \"产品类型\",\r\n              prop: \"categoryCount\",\r\n              display: false,\r\n              formatter: (row, value) => {\r\n                if (value > 0) {\r\n                  return \"<div style='color:blue;cursor: pointer;'>\" + value + \"</div>\";\r\n                } else {\r\n                  return 0;\r\n                }\r\n              }\r\n              // slot:true\r\n            },\r\n            {\r\n              label: \"创建人\",\r\n              prop: \"createUserName\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"最后修改人\",\r\n              prop: \"updateUserName\",\r\n              span: 24,\r\n              hide: true,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"最后修改时间\",\r\n              prop: \"updateTime\",\r\n              span: 24,\r\n              hide: true,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            }\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.property_add, false),\r\n          viewBtn: this.vaildData(this.permission.property_view, false),\r\n          delBtn: this.vaildData(this.permission.property_delete, false),\r\n          editBtn: this.vaildData(this.permission.property_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    methods: {\r\n      addSelect() {\r\n        this.form.propertyValue.push({\r\n          input: 1\r\n        })\r\n      },\r\n      closeDialog(val) {\r\n        this.categoryBox = val;\r\n        this.$emit(\"close\", false);\r\n      },\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      categoryList(row, column) {\r\n        if (column.property == \"categoryCount\" && row.categoryCount > 0) {\r\n          console.log(\"传值\", row.id);\r\n          this.id = row.id;\r\n          this.$refs.refCategoryBox.searchOpen(this.id);\r\n          this.categoryBox = true;\r\n        }\r\n      },\r\n    }\r\n  };\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n  .avue-dynamic__header {\r\n    position: absolute;\r\n    right: -5px;\r\n    top: 0;\r\n    z-index: 10000;\r\n  }\r\n\r\n  .avue-dynamic__row {\r\n    padding-top: 0;\r\n    border: none;\r\n    height: 50px;\r\n\r\n    .avue-group .el-collapse-item__wrap {\r\n      border-bottom: 0;\r\n    }\r\n\r\n    .avue-form__group--flex {\r\n      .avue-form__row {\r\n        padding-left: 0 !important;\r\n        padding-right: 5px !important;\r\n      }\r\n    }\r\n\r\n    .avue-dynamic__menu {\r\n      margin-right: -5px;\r\n    }\r\n  }\r\n\r\n  .avue-dynamic__row:first-child {\r\n    .avue-dynamic__menu {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .el-dialog {\r\n    width: 50%;\r\n  }\r\n\r\n</style>\r\n"]}]}