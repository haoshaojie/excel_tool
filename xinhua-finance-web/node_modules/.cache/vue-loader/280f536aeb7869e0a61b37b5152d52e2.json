{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\userAccount\\enterpriseAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\userAccount\\enterpriseAccount.vue","mtime":1618794737786},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {listPublic, listUser} from \"@/api/contract/userAccount/enterpriseAccount\";\r\nimport {resetLock, update} from \"@/api/contract/userAccount/account\";\r\nimport {sendTemplateMail} from \"@/api/contract/userAccount/mailRecord\";\r\nimport {mapGetters} from \"vuex\";\r\nimport userDetailDialog from \"./userDetailDialog\";\r\nimport publicDetailDialog from \"./publicDetailDialog\";\r\nimport publicFormDialog from \"./publicFormDialog\";\r\nimport resetPasswordDialog from './resetPasswordDialog';\r\nimport accountExportDialog from './accountExportDialog';\r\n\r\nconst TEMPLATE_FILE = {\r\n  welcome: \"Welcome.ftl\",\r\n  resetPassword: \"ResetPassword.ftl\",\r\n};\r\nexport default {\r\n  components: {userDetailDialog, publicDetailDialog, publicFormDialog, resetPasswordDialog, accountExportDialog},\r\n  data() {\r\n    return {\r\n      showExportDialog: false,\r\n      exportColumns: [],\r\n      showResetPasswordDialog: false,\r\n      accountId: \"\",\r\n      hasPhone: false,\r\n      hasEmail: false,\r\n      showUserDetail: false,\r\n      showPublicDetail: false,\r\n      showPublicForm: false,\r\n      publicFormTitle: '',\r\n      publicFormData: {},\r\n      form: {},\r\n      query: {},\r\n      loading: false,\r\n      createTimeArr: [],\r\n      updateTimeArr: [],\r\n      page: {\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        total: 0\r\n      },\r\n      selectionList: [],\r\n      type: {},\r\n      optionTab: {\r\n        column: [{\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n        }, {\r\n          label: '公共账号',\r\n          prop: 'commonAccount',\r\n        }],\r\n      },\r\n      option: {\r\n        height: 'auto',\r\n        calcHeight: 210,\r\n        searchShow: true,\r\n        searchMenuSpan: 6,\r\n        tip: false,\r\n        border: true,\r\n        index: false,\r\n        viewBtn: true,\r\n        selection: true,\r\n        addBtn: false,//添加按钮\r\n        viewBtn: false,//添加按钮\r\n        delBtn: false,//添加按钮\r\n        editBtn: true,//添加按钮\r\n        column: [{\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n          search: true,\r\n          slot: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '邮箱',\r\n          prop: 'email',\r\n          search: true\r\n        }, {\r\n          label: '手机号码',\r\n          prop: 'phone',\r\n          search: true\r\n        }, {\r\n          label: '姓名',\r\n          prop: 'userName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '客户名称',\r\n          prop: 'customerName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '用户状态',\r\n          prop: 'userState',\r\n          search: true\r\n        }, {\r\n          label: '账号状态',\r\n          prop: 'accountState',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '创建时间',\r\n          prop: 'createTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '最后修改时间',\r\n          prop: 'updateTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n        }],\r\n      },\r\n      userAccountColumn: [\r\n        {\r\n          label: \"账号ID\",\r\n          prop: \"accId\",\r\n          hide: true,\r\n          addDisplay: false,\r\n          editDisplay: false,\r\n        }, {\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n          search: true,\r\n          slot: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '邮箱',\r\n          prop: 'userEmail',\r\n          search: true\r\n        }, {\r\n          label: '手机号码',\r\n          prop: 'userPhone',\r\n          search: true\r\n        }, {\r\n          label: '姓名',\r\n          prop: 'userName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '客户名称',\r\n          prop: 'customerName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '用户状态',\r\n          prop: 'userState',\r\n          search: true\r\n        }, {\r\n          label: '账号状态',\r\n          prop: 'accountState',\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n          dicUrl: this.getDicValue(this.CONSTANT.ACC_STATUS),\r\n          props: {\r\n            label: \"dictValue\",\r\n            value: \"dictKey\"\r\n          },\r\n          dataType: 'number'\r\n        }, {\r\n          label: '创建时间',\r\n          prop: 'createTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n        }, {\r\n          label: '最后修改时间',\r\n          prop: 'updateTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n        }],\r\n      publicAccountColumn: [{\r\n        label: 'IP',\r\n        prop: 'ip',\r\n        hide: true,\r\n        search: true,\r\n      }, {\r\n        label: '客户名称',\r\n        prop: 'ip',\r\n        hide: true,\r\n        search: true,\r\n        editDisabled: true,\r\n      }, {\r\n        label: '用户账号',\r\n        prop: 'userAccount',\r\n        slot: true,\r\n        editDisabled: true,\r\n      }, {\r\n        label: '并发',\r\n        prop: 'concurrent',\r\n      }, {\r\n        label: '所属客户',\r\n        prop: 'customers',\r\n      }, {\r\n        label: '联系人',\r\n        prop: 'contacts',\r\n        search: true,\r\n      }, {\r\n        label: '联系人手机号码',\r\n        prop: 'contactsTel',\r\n      }, {\r\n        label: '联系人邮箱',\r\n        prop: 'contactsEmail',\r\n      }, {\r\n        label: '创建时间',\r\n        prop: 'createTime',\r\n        searchslot: true,\r\n        search: true,\r\n      }, {\r\n        label: '最后修改时间',\r\n        prop: 'updateTime',\r\n        searchslot: true,\r\n        search: true,\r\n      }],\r\n      data: [\r\n        {\r\n          userAccount: \"XHCJ0001\",\r\n          userEmail: \"18410379896\",\r\n          userPhone: \"18410379896\",\r\n          nickName: \"\",\r\n          userName: \"\",\r\n          customerName: \"\",\r\n          userState: \"\",\r\n          accountState: \"\",\r\n          createTime: \"\",\r\n          updateTime: \"\"\r\n        },\r\n        {\r\n          userAccount: \"XHCJ0001\",\r\n          userEmail: \"18410379896\",\r\n          userPhone: \"\",\r\n          nickName: \"\",\r\n          userName: \"\",\r\n          customerName: \"\",\r\n          userState: \"\",\r\n          accountState: \"\",\r\n          createTime: \"\",\r\n          updateTime: \"\"\r\n        }\r\n      ],\r\n      templateMailParam: {\r\n        tempFile: \"\",\r\n        receivers: [],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.type = this.optionTab.column[0];\r\n    this.option.column.forEach(item => {\r\n      if (!item.hide) {\r\n        this.exportColumns.push({\r\n          label: item.label,\r\n          prop: item.prop,\r\n        })\r\n      }\r\n    });\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"permission\"]),\r\n    permissionList() {\r\n      return {\r\n        addBtn: this.vaildData(this.permission.personaluser_add, false),\r\n        viewBtn: this.vaildData(this.permission.personaluser_view, false),\r\n        delBtn: this.vaildData(this.permission.personaluser_delete, false),\r\n        editBtn: this.vaildData(this.permission.personaluser_edit, false)\r\n      };\r\n    },\r\n    ids() {\r\n      let ids = [];\r\n      this.selectionList.forEach(ele => {\r\n        ids.push(ele.id);\r\n      });\r\n      return ids.join(\",\");\r\n    }\r\n  },\r\n  methods: {\r\n    closeExportDialog() {\r\n      this.showExportDialog = false;\r\n      this.exportColumns = [];\r\n    },\r\n    closeFormDialog() {\r\n      this.publicFormData = null;\r\n      this.showPublicForm = false;\r\n    },\r\n    handleUpdate(row) {\r\n      this.publicFormTitle = \"编辑公共账号\";\r\n      this.publicFormData = row;\r\n      this.showPublicForm = true;\r\n      console.log(\"formEdit\", \"=========================\")\r\n      console.log(\"publicFormData\", this.publicFormData)\r\n    },\r\n    handleLockOrUnlock(row) {\r\n      let message = row.accountState == 1 ? \"确认锁定该账号吗？\" : \"确认解锁该账号吗\"\r\n      this.$confirm(message, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n\r\n          return remove(row.id);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    resetPassword(row) {\r\n      this.showResetPasswordDialog = true;\r\n      if (typeof row.userPhone == 'string' && row.userPhone.length > 0) {\r\n        this.hasPhone = true;\r\n      }\r\n      if (typeof row.userEmail == 'string' && row.userEmail.length > 0) {\r\n        this.hasEmail = true;\r\n      }\r\n      this.accountId = row.accId;\r\n    },\r\n    closeResetPasswordDialog() {\r\n      this.showResetPasswordDialog = false;\r\n      this.accountId = null;\r\n      this.hasPhone = false;\r\n      this.hasEmail = false;\r\n    },\r\n    detailDialog(row) {\r\n      if (this.type.prop == 'userAccount') {\r\n        this.showUserDetail = true;\r\n      } else {\r\n        this.showPublicDetail = true;\r\n      }\r\n    },\r\n    closeDetailDialog() {\r\n      if (this.type.prop == 'userAccount') {\r\n        this.showUserDetail = false;\r\n      } else {\r\n        this.showPublicDetail = false;\r\n      }\r\n    },\r\n    handleChange(column) {\r\n      this.type = column;\r\n      if (this.type.prop == 'userAccount') {\r\n        this.option.editBtn = true;\r\n      } else {\r\n        this.option.editBtn = false;\r\n      }\r\n      this.onLoad(this.page);\r\n    },\r\n    rowSave(row, done, loading) {\r\n      add(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    rowUpdate(row, index, done, loading) {\r\n      this.$refs.crud.rowUpdate();\r\n      update(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    rowDel(row) {\r\n      this.$confirm(\"确定将选择数据删除?\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return remove(row.id);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    //欢迎邮件\r\n    welcomeEmail(row) {\r\n      let msg = \"是否发送欢迎邮件？\";\r\n      this.templateMailParam.tempFile = TEMPLATE_FILE.welcome;\r\n      this.templateMailParam.receivers = [];\r\n      if (row) {\r\n        this.templateMailParam.receivers.push({\r\n          accId: row.accId,\r\n          email: row.userEmail,\r\n          account: row.accId,\r\n          accountExpire: row.accountExpire,\r\n          initPassword: row.initPassword,\r\n          userName: row.userName,\r\n          productLink: row.productLink,\r\n          orderNum: row.orderNum,\r\n        })\r\n      } else {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        msg = \"是否批量发送欢迎邮件？\";\r\n        this.templateMailParam.receivers = this.selectionList.map(item => {\r\n          return {\r\n            accId: item.accId,\r\n            email: item.userEmail,\r\n            account: item.accId,\r\n            accountExpire: item.accountExpire,\r\n            initPassword: item.initPassword,\r\n            userName: item.userName,\r\n            productLink: item.productLink,\r\n            orderNum: item.orderNum,\r\n          };\r\n        })\r\n      }\r\n      this.$confirm(msg, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          //执行发送欢迎邮件逻辑\r\n          return sendTemplateMail(this.templateMailParam);\r\n        })\r\n        .then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.$refs.crud.toggleSelection();\r\n        });\r\n    },\r\n    //邮件记录\r\n    mailRecord() {\r\n      this.$router.push({path: '/contract/userAccount/mailRecord'});\r\n    },\r\n    closeDialog(val) {\r\n      console.log(val);\r\n    },\r\n    //邮件模板\r\n    mailTemlate() {\r\n      this.$router.push({path: '/contract/userAccount/mailTemplate'});\r\n    },\r\n    //启用按钮\r\n    enableBtn() {\r\n      this.openDialog = true;\r\n    },\r\n    //停用\r\n    disableBtn() {\r\n      this.openDialog = true;\r\n    },\r\n    //导出\r\n    handleExport() {\r\n      this.showExportDialog = true;\r\n    },\r\n    //公共账号新增\r\n    commonAccountAdd() {\r\n      this.publicFormTitle = \"新增公共账号\";\r\n      this.publicFormData = null;\r\n      this.showPublicForm = true;\r\n      console.log(\"formAdd\", \"=========================\")\r\n    },\r\n    //公共账号删除\r\n    commonAccountDel() {\r\n      this.$refs.crud.rowDel();\r\n    },\r\n    handleDelete() {\r\n      if (this.selectionList.length === 0) {\r\n        this.$message.warning(\"请选择至少一条数据\");\r\n        return;\r\n      }\r\n      this.$confirm(\"确定将选择数据删除?\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return remove(this.ids);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.$refs.crud.toggleSelection();\r\n        });\r\n    },\r\n    beforeOpen(done, type) {\r\n      if ([\"edit\", \"view\"].includes(type)) {\r\n        if (this.type.prop == 'userAccount') {\r\n\r\n        } else {\r\n\r\n        }\r\n      }\r\n      done();\r\n    },\r\n    searchReset() {\r\n      this.query = {};\r\n      this.onLoad(this.page);\r\n    },\r\n    searchChange(params, done) {\r\n      this.query = params;\r\n      this.page.currentPage = 1;\r\n      this.onLoad(this.page, params);\r\n      done();\r\n    },\r\n    selectionChange(list) {\r\n      this.selectionList = list;\r\n    },\r\n    selectionClear() {\r\n      this.selectionList = [];\r\n      // this.$refs.crud.toggleSelection();\r\n    },\r\n    currentChange(currentPage) {\r\n      this.page.currentPage = currentPage;\r\n    },\r\n    sizeChange(pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    },\r\n    onLoad(page, params = {}) {\r\n      //this.loading = true;\r\n      if (this.type.prop == 'userAccount') {\r\n        this.option.column = this.userAccountColumn;\r\n        // listUser(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        //   this.option.column = this.userAccountColumn;\r\n        //   const data = res.data.data;\r\n        //   this.page.total = data.total;\r\n        //   this.data = data.records;\r\n        //   this.loading = false;\r\n        //   this.selectionClear();\r\n        // });\r\n      } else {\r\n        this.option.column = this.publicAccountColumn;\r\n        // listPublic(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        //   this.option.column = this.publicAccountColumn;\r\n        //   const data = res.data.data;\r\n        //   this.page.total = data.total;\r\n        //   this.data = data.records;\r\n        //   this.loading = false;\r\n        //   this.selectionClear();\r\n        // });\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["enterpriseAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"enterpriseAccount.vue","sourceRoot":"src/views/contract/userAccount","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-tabs :option=\"optionTab\" @change=\"handleChange\"></avue-tabs>\r\n    <div>\r\n      <avue-crud :option=\"option\"\r\n                 :table-loading=\"loading\"\r\n                 :data=\"data\"\r\n                 :page.sync=\"page\"\r\n                 :permission=\"permissionList\"\r\n                 :before-open=\"beforeOpen\"\r\n                 v-model=\"form\"\r\n                 ref=\"crud\"\r\n                 @row-update=\"rowUpdate\"\r\n                 @row-save=\"rowSave\"\r\n                 @row-del=\"rowDel\"\r\n                 @search-change=\"searchChange\"\r\n                 @search-reset=\"searchReset\"\r\n                 @selection-change=\"selectionChange\"\r\n                 @current-change=\"currentChange\"\r\n                 @size-change=\"sizeChange\"\r\n                 @on-load=\"onLoad\">\r\n        <template slot-scope=\"{row}\" slot=\"userAccount\">\r\n          <el-button\r\n            type=\"text\"\r\n            size=\"mini\"\r\n            @click=\"detailDialog(row)\">\r\n            {{row.userAccount}}\r\n          </el-button>\r\n        </template>\r\n        <template slot=\"menuLeft\">\r\n          <div v-if=\"this.type.prop=='userAccount'\">\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"welcomeEmail(null)\">欢迎邮件\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"mailRecord\">邮件记录\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"mailTemlate\">邮件模板\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"enableBtn\">启用\r\n            </el-button>\r\n            <el-button type=\"warning\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"disableBtn\">禁用\r\n            </el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"handleExport\">导 出\r\n            </el-button>\r\n          </div>\r\n          <div v-if=\"this.type.prop!='userAccount'\">\r\n            <el-button type=\"primary\"\r\n                       size=\"small\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"commonAccountAdd\">新 增\r\n            </el-button>\r\n            <el-button type=\"danger\"\r\n                       size=\"small\"\r\n                       class=\"el-icon-delete\"\r\n                       plain\r\n                       v-if=\"\"\r\n                       @click=\"commonAccountDel\">删 除\r\n            </el-button>\r\n          </div>\r\n        </template>\r\n        <template slot-scope=\"scope\" slot=\"menu\">\r\n          <el-button type=\"text\" size=\"small\" v-if=\"type.prop!=='userAccount'\"\r\n                     @click.native=\"handleUpdate(scope.row)\">编辑\r\n          </el-button>\r\n          <div v-if=\"type.prop=='userAccount'\">\r\n            <el-button type=\"text\" size=\"small\"\r\n                       @click.native=\"handleLockOrUnlock(scope.row)\">\r\n              {{scope.row.accountState==1 ? \"锁定\" : \"解锁\"}}\r\n            </el-button>\r\n            <el-button type=\"text\" size=\"small\"\r\n                       @click.native=\"resetPassword(scope.row)\">重置密码\r\n            </el-button>\r\n            <el-button type=\"text\" size=\"small\"\r\n                       @click.native=\"welcomeEmail(scope.row)\">欢迎邮件\r\n            </el-button>\r\n          </div>\r\n        </template>\r\n        <template slot-scope=\"{disabled,size}\" slot=\"createTimeSearch\">\r\n          <el-date-picker\r\n            v-model=\"createTimeArr\"\r\n            type=\"daterange\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            format=\"yyyy-MM-dd\"\r\n            range-separator=\"-\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\">\r\n          </el-date-picker>\r\n        </template>\r\n        <template slot-scope=\"{disabled,size}\" slot=\"updateTimeSearch\">\r\n          <el-date-picker\r\n            v-model=\"updateTimeArr\"\r\n            type=\"daterange\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            format=\"yyyy-MM-dd\"\r\n            range-separator=\"-\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\">\r\n          </el-date-picker>\r\n        </template>\r\n      </avue-crud>\r\n    </div>\r\n    <user-detail-dialog ref=\"userDetaildialog\"\r\n                        :showDetail=\"showUserDetail\"\r\n                        type=\"enterprise\"\r\n                        @close=\"closeDetailDialog\"/>\r\n    <public-detail-dialog ref=\"publicDetailDialog\"\r\n                          :showPublicDetailDialog=\"showPublicDetail\"\r\n                          @close=\"closeDetailDialog\"/>\r\n    <public-form-dialog ref=\"publicFormDialog\"\r\n                        :publicFormTitle=\"publicFormTitle\"\r\n                        :showPublicFormDialog=\"showPublicForm\"\r\n                        :publicFormData=\"publicFormData\"\r\n                        @close=\"closeFormDialog\"/>\r\n    <resetPassword-dialog ref=\"resetPasswordDialog\"\r\n                          :showResetPasswordDialog=\"showResetPasswordDialog\"\r\n                          :has-email=\"hasEmail\"\r\n                          :has-phone=\"hasPhone\"\r\n                          :account-id=\"accountId\"\r\n                          @close=\"closeResetPasswordDialog\"/>\r\n    <reset-password-dialog ref=\"resetPasswordDialog\"\r\n                           :showResetPasswordDialog=\"showResetPasswordDialog\"\r\n                           :has-email=\"hasEmail\"\r\n                           :has-phone=\"hasPhone\"\r\n                           :account-id=\"accountId\"\r\n                           @close=\"closeResetPasswordDialog\"/>\r\n    <account-export-dialog ref=\"resetPasswordDialog\"\r\n                           type=\"enterprise\"\r\n                           :exportDialogFlag=\"showExportDialog\"\r\n                           :exportColumns=\"exportColumns\"\r\n                           @close=\"closeExportDialog\"/>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\nimport {listPublic, listUser} from \"@/api/contract/userAccount/enterpriseAccount\";\r\nimport {resetLock, update} from \"@/api/contract/userAccount/account\";\r\nimport {sendTemplateMail} from \"@/api/contract/userAccount/mailRecord\";\r\nimport {mapGetters} from \"vuex\";\r\nimport userDetailDialog from \"./userDetailDialog\";\r\nimport publicDetailDialog from \"./publicDetailDialog\";\r\nimport publicFormDialog from \"./publicFormDialog\";\r\nimport resetPasswordDialog from './resetPasswordDialog';\r\nimport accountExportDialog from './accountExportDialog';\r\n\r\nconst TEMPLATE_FILE = {\r\n  welcome: \"Welcome.ftl\",\r\n  resetPassword: \"ResetPassword.ftl\",\r\n};\r\nexport default {\r\n  components: {userDetailDialog, publicDetailDialog, publicFormDialog, resetPasswordDialog, accountExportDialog},\r\n  data() {\r\n    return {\r\n      showExportDialog: false,\r\n      exportColumns: [],\r\n      showResetPasswordDialog: false,\r\n      accountId: \"\",\r\n      hasPhone: false,\r\n      hasEmail: false,\r\n      showUserDetail: false,\r\n      showPublicDetail: false,\r\n      showPublicForm: false,\r\n      publicFormTitle: '',\r\n      publicFormData: {},\r\n      form: {},\r\n      query: {},\r\n      loading: false,\r\n      createTimeArr: [],\r\n      updateTimeArr: [],\r\n      page: {\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        total: 0\r\n      },\r\n      selectionList: [],\r\n      type: {},\r\n      optionTab: {\r\n        column: [{\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n        }, {\r\n          label: '公共账号',\r\n          prop: 'commonAccount',\r\n        }],\r\n      },\r\n      option: {\r\n        height: 'auto',\r\n        calcHeight: 210,\r\n        searchShow: true,\r\n        searchMenuSpan: 6,\r\n        tip: false,\r\n        border: true,\r\n        index: false,\r\n        viewBtn: true,\r\n        selection: true,\r\n        addBtn: false,//添加按钮\r\n        viewBtn: false,//添加按钮\r\n        delBtn: false,//添加按钮\r\n        editBtn: true,//添加按钮\r\n        column: [{\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n          search: true,\r\n          slot: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '邮箱',\r\n          prop: 'email',\r\n          search: true\r\n        }, {\r\n          label: '手机号码',\r\n          prop: 'phone',\r\n          search: true\r\n        }, {\r\n          label: '姓名',\r\n          prop: 'userName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '客户名称',\r\n          prop: 'customerName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '用户状态',\r\n          prop: 'userState',\r\n          search: true\r\n        }, {\r\n          label: '账号状态',\r\n          prop: 'accountState',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '创建时间',\r\n          prop: 'createTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '最后修改时间',\r\n          prop: 'updateTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n        }],\r\n      },\r\n      userAccountColumn: [\r\n        {\r\n          label: \"账号ID\",\r\n          prop: \"accId\",\r\n          hide: true,\r\n          addDisplay: false,\r\n          editDisplay: false,\r\n        }, {\r\n          label: '用户账号',\r\n          prop: 'userAccount',\r\n          search: true,\r\n          slot: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '邮箱',\r\n          prop: 'userEmail',\r\n          search: true\r\n        }, {\r\n          label: '手机号码',\r\n          prop: 'userPhone',\r\n          search: true\r\n        }, {\r\n          label: '姓名',\r\n          prop: 'userName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '客户名称',\r\n          prop: 'customerName',\r\n          search: true,\r\n          editDisabled: true,\r\n        }, {\r\n          label: '用户状态',\r\n          prop: 'userState',\r\n          search: true\r\n        }, {\r\n          label: '账号状态',\r\n          prop: 'accountState',\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n          dicUrl: this.getDicValue(this.CONSTANT.ACC_STATUS),\r\n          props: {\r\n            label: \"dictValue\",\r\n            value: \"dictKey\"\r\n          },\r\n          dataType: 'number'\r\n        }, {\r\n          label: '创建时间',\r\n          prop: 'createTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n        }, {\r\n          label: '最后修改时间',\r\n          prop: 'updateTime',\r\n          searchslot: true,\r\n          search: true,\r\n          editDisabled: true,\r\n          editDisplay: false,\r\n        }],\r\n      publicAccountColumn: [{\r\n        label: 'IP',\r\n        prop: 'ip',\r\n        hide: true,\r\n        search: true,\r\n      }, {\r\n        label: '客户名称',\r\n        prop: 'ip',\r\n        hide: true,\r\n        search: true,\r\n        editDisabled: true,\r\n      }, {\r\n        label: '用户账号',\r\n        prop: 'userAccount',\r\n        slot: true,\r\n        editDisabled: true,\r\n      }, {\r\n        label: '并发',\r\n        prop: 'concurrent',\r\n      }, {\r\n        label: '所属客户',\r\n        prop: 'customers',\r\n      }, {\r\n        label: '联系人',\r\n        prop: 'contacts',\r\n        search: true,\r\n      }, {\r\n        label: '联系人手机号码',\r\n        prop: 'contactsTel',\r\n      }, {\r\n        label: '联系人邮箱',\r\n        prop: 'contactsEmail',\r\n      }, {\r\n        label: '创建时间',\r\n        prop: 'createTime',\r\n        searchslot: true,\r\n        search: true,\r\n      }, {\r\n        label: '最后修改时间',\r\n        prop: 'updateTime',\r\n        searchslot: true,\r\n        search: true,\r\n      }],\r\n      data: [\r\n        {\r\n          userAccount: \"XHCJ0001\",\r\n          userEmail: \"18410379896\",\r\n          userPhone: \"18410379896\",\r\n          nickName: \"\",\r\n          userName: \"\",\r\n          customerName: \"\",\r\n          userState: \"\",\r\n          accountState: \"\",\r\n          createTime: \"\",\r\n          updateTime: \"\"\r\n        },\r\n        {\r\n          userAccount: \"XHCJ0001\",\r\n          userEmail: \"18410379896\",\r\n          userPhone: \"\",\r\n          nickName: \"\",\r\n          userName: \"\",\r\n          customerName: \"\",\r\n          userState: \"\",\r\n          accountState: \"\",\r\n          createTime: \"\",\r\n          updateTime: \"\"\r\n        }\r\n      ],\r\n      templateMailParam: {\r\n        tempFile: \"\",\r\n        receivers: [],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.type = this.optionTab.column[0];\r\n    this.option.column.forEach(item => {\r\n      if (!item.hide) {\r\n        this.exportColumns.push({\r\n          label: item.label,\r\n          prop: item.prop,\r\n        })\r\n      }\r\n    });\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"permission\"]),\r\n    permissionList() {\r\n      return {\r\n        addBtn: this.vaildData(this.permission.personaluser_add, false),\r\n        viewBtn: this.vaildData(this.permission.personaluser_view, false),\r\n        delBtn: this.vaildData(this.permission.personaluser_delete, false),\r\n        editBtn: this.vaildData(this.permission.personaluser_edit, false)\r\n      };\r\n    },\r\n    ids() {\r\n      let ids = [];\r\n      this.selectionList.forEach(ele => {\r\n        ids.push(ele.id);\r\n      });\r\n      return ids.join(\",\");\r\n    }\r\n  },\r\n  methods: {\r\n    closeExportDialog() {\r\n      this.showExportDialog = false;\r\n      this.exportColumns = [];\r\n    },\r\n    closeFormDialog() {\r\n      this.publicFormData = null;\r\n      this.showPublicForm = false;\r\n    },\r\n    handleUpdate(row) {\r\n      this.publicFormTitle = \"编辑公共账号\";\r\n      this.publicFormData = row;\r\n      this.showPublicForm = true;\r\n      console.log(\"formEdit\", \"=========================\")\r\n      console.log(\"publicFormData\", this.publicFormData)\r\n    },\r\n    handleLockOrUnlock(row) {\r\n      let message = row.accountState == 1 ? \"确认锁定该账号吗？\" : \"确认解锁该账号吗\"\r\n      this.$confirm(message, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n\r\n          return remove(row.id);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    resetPassword(row) {\r\n      this.showResetPasswordDialog = true;\r\n      if (typeof row.userPhone == 'string' && row.userPhone.length > 0) {\r\n        this.hasPhone = true;\r\n      }\r\n      if (typeof row.userEmail == 'string' && row.userEmail.length > 0) {\r\n        this.hasEmail = true;\r\n      }\r\n      this.accountId = row.accId;\r\n    },\r\n    closeResetPasswordDialog() {\r\n      this.showResetPasswordDialog = false;\r\n      this.accountId = null;\r\n      this.hasPhone = false;\r\n      this.hasEmail = false;\r\n    },\r\n    detailDialog(row) {\r\n      if (this.type.prop == 'userAccount') {\r\n        this.showUserDetail = true;\r\n      } else {\r\n        this.showPublicDetail = true;\r\n      }\r\n    },\r\n    closeDetailDialog() {\r\n      if (this.type.prop == 'userAccount') {\r\n        this.showUserDetail = false;\r\n      } else {\r\n        this.showPublicDetail = false;\r\n      }\r\n    },\r\n    handleChange(column) {\r\n      this.type = column;\r\n      if (this.type.prop == 'userAccount') {\r\n        this.option.editBtn = true;\r\n      } else {\r\n        this.option.editBtn = false;\r\n      }\r\n      this.onLoad(this.page);\r\n    },\r\n    rowSave(row, done, loading) {\r\n      add(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    rowUpdate(row, index, done, loading) {\r\n      this.$refs.crud.rowUpdate();\r\n      update(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    rowDel(row) {\r\n      this.$confirm(\"确定将选择数据删除?\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return remove(row.id);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    //欢迎邮件\r\n    welcomeEmail(row) {\r\n      let msg = \"是否发送欢迎邮件？\";\r\n      this.templateMailParam.tempFile = TEMPLATE_FILE.welcome;\r\n      this.templateMailParam.receivers = [];\r\n      if (row) {\r\n        this.templateMailParam.receivers.push({\r\n          accId: row.accId,\r\n          email: row.userEmail,\r\n          account: row.accId,\r\n          accountExpire: row.accountExpire,\r\n          initPassword: row.initPassword,\r\n          userName: row.userName,\r\n          productLink: row.productLink,\r\n          orderNum: row.orderNum,\r\n        })\r\n      } else {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        msg = \"是否批量发送欢迎邮件？\";\r\n        this.templateMailParam.receivers = this.selectionList.map(item => {\r\n          return {\r\n            accId: item.accId,\r\n            email: item.userEmail,\r\n            account: item.accId,\r\n            accountExpire: item.accountExpire,\r\n            initPassword: item.initPassword,\r\n            userName: item.userName,\r\n            productLink: item.productLink,\r\n            orderNum: item.orderNum,\r\n          };\r\n        })\r\n      }\r\n      this.$confirm(msg, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          //执行发送欢迎邮件逻辑\r\n          return sendTemplateMail(this.templateMailParam);\r\n        })\r\n        .then(() => {\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.$refs.crud.toggleSelection();\r\n        });\r\n    },\r\n    //邮件记录\r\n    mailRecord() {\r\n      this.$router.push({path: '/contract/userAccount/mailRecord'});\r\n    },\r\n    closeDialog(val) {\r\n      console.log(val);\r\n    },\r\n    //邮件模板\r\n    mailTemlate() {\r\n      this.$router.push({path: '/contract/userAccount/mailTemplate'});\r\n    },\r\n    //启用按钮\r\n    enableBtn() {\r\n      this.openDialog = true;\r\n    },\r\n    //停用\r\n    disableBtn() {\r\n      this.openDialog = true;\r\n    },\r\n    //导出\r\n    handleExport() {\r\n      this.showExportDialog = true;\r\n    },\r\n    //公共账号新增\r\n    commonAccountAdd() {\r\n      this.publicFormTitle = \"新增公共账号\";\r\n      this.publicFormData = null;\r\n      this.showPublicForm = true;\r\n      console.log(\"formAdd\", \"=========================\")\r\n    },\r\n    //公共账号删除\r\n    commonAccountDel() {\r\n      this.$refs.crud.rowDel();\r\n    },\r\n    handleDelete() {\r\n      if (this.selectionList.length === 0) {\r\n        this.$message.warning(\"请选择至少一条数据\");\r\n        return;\r\n      }\r\n      this.$confirm(\"确定将选择数据删除?\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return remove(this.ids);\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n          this.$refs.crud.toggleSelection();\r\n        });\r\n    },\r\n    beforeOpen(done, type) {\r\n      if ([\"edit\", \"view\"].includes(type)) {\r\n        if (this.type.prop == 'userAccount') {\r\n\r\n        } else {\r\n\r\n        }\r\n      }\r\n      done();\r\n    },\r\n    searchReset() {\r\n      this.query = {};\r\n      this.onLoad(this.page);\r\n    },\r\n    searchChange(params, done) {\r\n      this.query = params;\r\n      this.page.currentPage = 1;\r\n      this.onLoad(this.page, params);\r\n      done();\r\n    },\r\n    selectionChange(list) {\r\n      this.selectionList = list;\r\n    },\r\n    selectionClear() {\r\n      this.selectionList = [];\r\n      // this.$refs.crud.toggleSelection();\r\n    },\r\n    currentChange(currentPage) {\r\n      this.page.currentPage = currentPage;\r\n    },\r\n    sizeChange(pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    },\r\n    onLoad(page, params = {}) {\r\n      //this.loading = true;\r\n      if (this.type.prop == 'userAccount') {\r\n        this.option.column = this.userAccountColumn;\r\n        // listUser(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        //   this.option.column = this.userAccountColumn;\r\n        //   const data = res.data.data;\r\n        //   this.page.total = data.total;\r\n        //   this.data = data.records;\r\n        //   this.loading = false;\r\n        //   this.selectionClear();\r\n        // });\r\n      } else {\r\n        this.option.column = this.publicAccountColumn;\r\n        // listPublic(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        //   this.option.column = this.publicAccountColumn;\r\n        //   const data = res.data.data;\r\n        //   this.page.total = data.total;\r\n        //   this.data = data.records;\r\n        //   this.loading = false;\r\n        //   this.selectionClear();\r\n        // });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}