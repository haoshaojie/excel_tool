{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\category-property.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\product\\category-property.vue","mtime":1618367977446},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getDetail, getList, remove} from \"@/api/contract/product/category-property\";\nimport {mapGetters} from \"vuex\";\nimport categoryPropertyDialog from \"./category-property-dialog\";\n\nexport default {\n  name: \"categoryProperty\",\n  components: {categoryPropertyDialog},\n  props: {\n    cateId: {},\n    title: \"\"\n  },\n  data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      propertyBox: false,\n      cateId: 0,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 210,\n        dialogWidth: \"40%\",\n        searchShow: true,\n        searchMenuSpan: 6,\n        // formWidth:\"50%\",\n        align: 'center',\n        tip: false,\n        border: true,\n        index: false,\n        indexLabel: '序号',\n        editBtn: false,\n        addBtn: false,\n        viewBtn: true,\n        viewBtnOrder: 1,\n        selection: true,\n        defaultSort: {\n          prop: 'createTime',\n          order: 'descending'\n        },\n        labelWidth: \"15%\",\n        refreshBtn: false,\n        columnBtn: false,\n        searchShowBtn: false,\n        column: [\n          {\n            label: \"主键id 雪花算法产生\",\n            prop: \"id\",\n            hide: true,\n            display: false,\n            rules: [{\n              required: false,\n              message: \"请输入主键id 雪花算法产生\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"属性编码\",\n            prop: \"propCode\",\n            maxlength: 20,\n            minlength: 1,\n            search: true,\n            // searchOrder: 2,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入属性编码\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"属性名称\",\n            prop: \"propName\",\n            order: 1,\n            maxlength: 20,\n            minlength: 1,\n            searchOrder: 1,\n            search: true,\n            span: 24,\n            rules: [{\n              required: true,\n              message: \"请输入属性名称\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"属性类型\",\n            prop: \"propType\",\n            search: true,\n            span: 24,\n            type: \"radio\",\n            value: 2,\n            dicUrl: this.getDicValue(this.CONSTANT.PROP_TYPE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择属性类型\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"是否必填\",\n            prop: \"isRequired\",\n            hide: true,\n            span: 24,\n            type: \"radio\",\n            value: 1,\n            dicUrl: this.getDicValue(this.CONSTANT.IS_REQUIRED),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            rules: [{\n              required: true,\n              message: \"请选择是否必填\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"备注\",\n            prop: \"remark\",\n            maxlength: 100,\n            minlength: 1,\n            hide: true,\n            span: 24,\n            rules: [{\n              required: false,\n              max: 100,\n              message: \"请输入属性备注\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"表现方式\",\n            prop: \"showType\",\n            span: 24,\n            type: \"select\",\n            dicUrl: this.getDicValue(this.CONSTANT.SHOW_TYPE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            change: ({value}) => {\n              let propertyValueForm = this.findObject(this.option.column, 'propertyValue');\n              propertyValueForm.display = false;\n              if (value == 2) {\n                propertyValueForm.display = true;\n              }\n            },\n            rules: [{\n              required: true,\n              message: \"请选择表现方式\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"属性值\",\n            // labelWidth: \"3%\",\n            prop: 'propertyValue',\n            display: false,\n            type: 'dynamic',\n            span: 24,\n            children: {\n              align: 'center',\n              type: 'form',\n              index: false,\n              calcHeight: 180,\n              gutter: 10,\n              headerAlign: 'center',\n              column: [{\n                type: 'input',\n                // label: '属性值编码',\n                label: '',\n                labelWidth: \"0%\",\n                span: 10,\n                display: true,\n                prop: 'propCode',\n                maxlength: 20,\n                tip: '属性值编码',\n                tipPlacement: 'left',\n                required: true,\n                rules: [\n                  {\n                    required: true,\n                    message: '属性值编码',\n                    trigger: \"blur\"\n                  }\n                ]\n              },\n                {\n                  type: 'input',\n                  // label: '属性值',\n                  label: '',\n                  labelWidth: \"0%\",\n                  span: 10,\n                  display: true,\n                  prop: 'propValue',\n                  tip: '属性值',\n                  rules: [{\n                    required: true,\n                    message: '属性值',\n                    trigger: \"blur\"\n                  }]\n                }]\n            }\n          },\n          {\n            label: \"操作人\",\n            prop: \"createUserName\",\n            span: 24,\n            addDisplay: false, //新增时是否显示\n            editDisplay: false, //编辑时是否显示\n            viewDisplay: true, //详情时是否显示\n            rules: [{\n              required: false,\n              message: \"\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"操作时间\",\n            prop: \"createTime\",\n            span: 24,\n            addDisplay: false, //新增时是否显示\n            editDisplay: false, //编辑时是否显示\n            viewDisplay: true, //详情时是否显示\n            rules: [{\n              required: false,\n              message: \"\",\n              trigger: \"blur\"\n            }]\n          },\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.property_add, false),\n        viewBtn: this.vaildData(this.permission.property_view, false),\n        delBtn: this.vaildData(this.permission.property_delete, false),\n        editBtn: this.vaildData(this.permission.property_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.catePropId);\n      });\n      return ids.join(\",\");\n    },\n  },\n  methods: {\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.catePropId);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      console.log(\"类型包含的属性加载列表数据\" + this.cateId);\n      this.loading = true;\n      // this.cateId = this.$route.query.cateId;\n      params.cateId = this.cateId;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n    goBack() {\n      this.$emit(\"back\");\n    },\n    closeDialog(val) {\n      this.propertyBox = val;\n    },\n    handleAdd() {\n      this.$refs.refPropertyBox.onLoad(this.cateId);\n      this.propertyBox = true;\n    }\n  }\n};\n\n",{"version":3,"sources":["category-property.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"category-property.vue","sourceRoot":"src/views/contract/product","sourcesContent":["<template>\r\n\r\n  <basic-container>\r\n    <template>\r\n      <el-row\r\n        style=\"margin-bottom:20px;\">\r\n        <el-col\r\n          :span=\"16\">\r\n          <el-page-header\r\n            @back=\"goBack\" :content=\"title\"></el-page-header>\r\n        </el-col>\r\n      </el-row>\r\n    </template>\r\n\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" plain @click.stop=\"handleAdd\">添加</el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.property_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n    </avue-crud>\r\n    <category-property-dialog ref=\"refPropertyBox\" :propertyBox=\"propertyBox\" :cateId=\"cateId\" :page=\"page\"\r\n                              @close=\"closeDialog\" @onLoad=\"onLoad\"></category-property-dialog>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getDetail, getList, remove} from \"@/api/contract/product/category-property\";\r\n  import {mapGetters} from \"vuex\";\r\n  import categoryPropertyDialog from \"./category-property-dialog\";\r\n\r\n  export default {\r\n    name: \"categoryProperty\",\r\n    components: {categoryPropertyDialog},\r\n    props: {\r\n      cateId: {},\r\n      title: \"\"\r\n    },\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        propertyBox: false,\r\n        cateId: 0,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 210,\r\n          dialogWidth: \"40%\",\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          // formWidth:\"50%\",\r\n          align: 'center',\r\n          tip: false,\r\n          border: true,\r\n          index: false,\r\n          indexLabel: '序号',\r\n          editBtn: false,\r\n          addBtn: false,\r\n          viewBtn: true,\r\n          viewBtnOrder: 1,\r\n          selection: true,\r\n          defaultSort: {\r\n            prop: 'createTime',\r\n            order: 'descending'\r\n          },\r\n          labelWidth: \"15%\",\r\n          refreshBtn: false,\r\n          columnBtn: false,\r\n          searchShowBtn: false,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              display: false,\r\n              rules: [{\r\n                required: false,\r\n                message: \"请输入主键id 雪花算法产生\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性编码\",\r\n              prop: \"propCode\",\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              search: true,\r\n              // searchOrder: 2,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入属性编码\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性名称\",\r\n              prop: \"propName\",\r\n              order: 1,\r\n              maxlength: 20,\r\n              minlength: 1,\r\n              searchOrder: 1,\r\n              search: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入属性名称\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性类型\",\r\n              prop: \"propType\",\r\n              search: true,\r\n              span: 24,\r\n              type: \"radio\",\r\n              value: 2,\r\n              dicUrl: this.getDicValue(this.CONSTANT.PROP_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择属性类型\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"是否必填\",\r\n              prop: \"isRequired\",\r\n              hide: true,\r\n              span: 24,\r\n              type: \"radio\",\r\n              value: 1,\r\n              dicUrl: this.getDicValue(this.CONSTANT.IS_REQUIRED),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择是否必填\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"备注\",\r\n              prop: \"remark\",\r\n              maxlength: 100,\r\n              minlength: 1,\r\n              hide: true,\r\n              span: 24,\r\n              rules: [{\r\n                required: false,\r\n                max: 100,\r\n                message: \"请输入属性备注\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"表现方式\",\r\n              prop: \"showType\",\r\n              span: 24,\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.SHOW_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              change: ({value}) => {\r\n                let propertyValueForm = this.findObject(this.option.column, 'propertyValue');\r\n                propertyValueForm.display = false;\r\n                if (value == 2) {\r\n                  propertyValueForm.display = true;\r\n                }\r\n              },\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择表现方式\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"属性值\",\r\n              // labelWidth: \"3%\",\r\n              prop: 'propertyValue',\r\n              display: false,\r\n              type: 'dynamic',\r\n              span: 24,\r\n              children: {\r\n                align: 'center',\r\n                type: 'form',\r\n                index: false,\r\n                calcHeight: 180,\r\n                gutter: 10,\r\n                headerAlign: 'center',\r\n                column: [{\r\n                  type: 'input',\r\n                  // label: '属性值编码',\r\n                  label: '',\r\n                  labelWidth: \"0%\",\r\n                  span: 10,\r\n                  display: true,\r\n                  prop: 'propCode',\r\n                  maxlength: 20,\r\n                  tip: '属性值编码',\r\n                  tipPlacement: 'left',\r\n                  required: true,\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '属性值编码',\r\n                      trigger: \"blur\"\r\n                    }\r\n                  ]\r\n                },\r\n                  {\r\n                    type: 'input',\r\n                    // label: '属性值',\r\n                    label: '',\r\n                    labelWidth: \"0%\",\r\n                    span: 10,\r\n                    display: true,\r\n                    prop: 'propValue',\r\n                    tip: '属性值',\r\n                    rules: [{\r\n                      required: true,\r\n                      message: '属性值',\r\n                      trigger: \"blur\"\r\n                    }]\r\n                  }]\r\n              }\r\n            },\r\n            {\r\n              label: \"操作人\",\r\n              prop: \"createUserName\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"操作时间\",\r\n              prop: \"createTime\",\r\n              span: 24,\r\n              addDisplay: false, //新增时是否显示\r\n              editDisplay: false, //编辑时是否显示\r\n              viewDisplay: true, //详情时是否显示\r\n              rules: [{\r\n                required: false,\r\n                message: \"\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.property_add, false),\r\n          viewBtn: this.vaildData(this.permission.property_view, false),\r\n          delBtn: this.vaildData(this.permission.property_delete, false),\r\n          editBtn: this.vaildData(this.permission.property_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.catePropId);\r\n        });\r\n        return ids.join(\",\");\r\n      },\r\n    },\r\n    methods: {\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.catePropId);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        console.log(\"类型包含的属性加载列表数据\" + this.cateId);\r\n        this.loading = true;\r\n        // this.cateId = this.$route.query.cateId;\r\n        params.cateId = this.cateId;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n      goBack() {\r\n        this.$emit(\"back\");\r\n      },\r\n      closeDialog(val) {\r\n        this.propertyBox = val;\r\n      },\r\n      handleAdd() {\r\n        this.$refs.refPropertyBox.onLoad(this.cateId);\r\n        this.propertyBox = true;\r\n      }\r\n    }\r\n  };\r\n\r\n</script>\r\n\r\n<style>\r\n  .cell-blue {\r\n    color: blue !important;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n"]}]}