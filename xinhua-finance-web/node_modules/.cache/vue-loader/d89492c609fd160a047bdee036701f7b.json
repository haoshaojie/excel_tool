{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\user\\mechanismUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\user\\mechanismUser.vue","mtime":1618541026433},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getList, getDetail, add, update, remove, getContractList} from \"@/api/contract/user/orguser\";\nimport {getCustomerList} from \"@/api/contract/customer/orgcustomer\";\nimport {getDeptList} from \"@/api/system/dept\";\nimport {mapGetters} from \"vuex\";\nimport detailOrgUserDialog from \"./detailOrgUserDialog\";\nimport addEmailOrPhone from \"./addEmailOrPhone\";\nimport customerDialog from \"../customer/customerDialog\";\nimport uploadUserDialog from \"./uploadUserDialog\";\nimport exportUserDialog from \"./exportUserDialog\";\nimport addAccountUser from \"./addAccountUser\";\nexport default {\n  components: {\n    addAccountUser,\n    exportUserDialog,\n    uploadUserDialog,\n    customerDialog,\n    addEmailOrPhone,detailOrgUserDialog\n  },\n  mounted(){\n    //初始化机构树\n    getDeptList('000000').then(res => {\n    this.depts=res.data.data;\n});\n  },\n  data() {\n    return {\n      type:'',\n      depts:[],\n      custId: null,\n      contracts: [],\n      createTime: [],\n      addEmailOrPhoneDialogFlag:false,\n      exportDialogFlag:false,\n      uploadUserDialogFlag:false,\n      addAccountUserFlag:false,\n      customerDialogFlag:false,\n      showDetailFlag:false,\n      updateTime: [],\n      dicCreateAccountData: [{\n        label: '全部',\n        value: null\n      }, {\n        label: '否',\n        value: 0\n      }, {\n        label: '是',\n        value: 1\n      }],\n      form: {},\n      query: {},\n      loading: true,\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      selectionList: [],\n      option: {\n        index: false,\n        searchLabelWidth: 100,\n        calcHeight: 210,\n        searchMenuSpan: 6,\n        tip: false,\n        border: true,\n        viewBtn: false,\n        saveBtn:false,\n        addBtn:false,\n        updateBtn:false,\n        cancelBtn:false,\n        menuAlign:'center',\n        align:'center',\n        selection: true,\n        searchShow: true,\n        column: [\n          {\n            label: \"主键id 雪花算法产生\",\n            prop: \"id\",\n            hide: true,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          },\n          {\n            label: \"用户编码\",\n            prop: \"userNo\",\n            search: true,\n            searchOrder: 7,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false,\n            slot:true\n          },\n          {\n            label: \"姓名\",\n            prop: \"userName\",\n            search: true,\n            searchOrder: 10,\n            viewDisplay: false,\n            rules: [{required: true,message: \"请输入姓名\",trigger: \"blur\"},\n              { min: 0, max: 5, message: '最长限5个字', trigger: 'blur' }],\n          },\n          {\n            label: \"性别\",\n            prop: \"userSex\",\n            hide: true,\n            viewDisplay: false,\n            rules: [{\n              required: true,\n              message: \"请选择性别\",\n              trigger: \"blur\"\n            }],\n            type: \"radio\",\n            dicUrl: this.getDicValue(this.CONSTANT.SEX),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n          },\n          {\n            label: '客户名称',\n            prop: 'addCustName',\n            formslot:true,\n            hide: true,\n            rules:[{\n              required: true, message:`客户名称不能为空`, trigger: 'blur'\n            }]\n\n          },\n          {\n            label: '部门',\n            prop: \"custOrg\",\n            hide: true,\n            rules: [{ min: 0, max: 10, message: '最长限10个字', trigger: 'blur' }],\n          },\n          {\n            label: \"邮箱\",\n            prop: \"userEmail\",\n            search: true,\n            searchOrder: 9,\n            formslot:true,\n            rules:[{ min: 0, max: 100, message: '最长限100个字', trigger: 'blur' }],\n\n\n          },\n          {\n            label: \"手机号\",\n            prop: \"userPhone\",\n            search: true,\n            searchOrder: 8,\n            formslot:true,\n\n          },\n          {\n            label: \"客户编码\",\n            prop: \"custCode\",\n            search: true,\n            searchOrder: 6,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          },\n          {\n            label: \"客户名称\",\n            prop: \"custName\",\n            search: true,\n            searchOrder: 5,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false,\n            rules:[\n              {required: true,message: \"请选择客户名称\",trigger: \"blur\"}\n            ]\n          },\n          {\n            label: \"用户类型\",\n            prop: \"userType\",\n            search: true,\n            searchOrder: 4,\n            viewDisplay: false,\n            type: \"select\",\n            searchMultiple: true,\n            dicUrl: this.getDicValue(this.CONSTANT.USER_TYPE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n          },\n          {\n            label: \"用户描述\",\n            prop: \"userDesc\",\n            type: \"textarea\",\n            hide: true,\n            span: 24,\n            rules:[{ min: 0, max: 100, message: '最长限100个字', trigger: 'blur' }],\n          },\n          {\n            label: \"固定电话\",\n            prop: \"userTele\",\n            hide: true,\n            rules:[{ min: 0, max: 20, message: '最长限20个字', trigger: 'blur' }],\n\n          },\n          {\n            label: \"传真\",\n            prop: \"userFax\",\n            hide: true,\n            rules:[{ min: 0, max: 20, message: '最长限20个字', trigger: 'blur' }],\n\n          },\n          {\n            label: \"客户经理\",\n            prop: \"custManager\",\n            hide: true,\n            type: \"select\",\n            dicData: [],\n            props: {\n              label: \"custManager\",\n              value: \"id\"\n            },\n            change: ({value,column}) => {\n              if (!value){\n                this.form.custOrgName=null;\n              }\n              if (column.dicData){\n                var contract=column.dicData.find(item=>{\n                  return item.id==value;\n                });\n                if (contract){\n                  this.depts.find(dic=>{\n                    if (dic.id==contract.custOrg){\n                      this.form.custOrgName=dic.deptName;\n                    }\n                  })\n                } ;\n              }\n\n            },\n\n          },\n          {\n            label: \"所属机构\",\n            prop: \"custOrgName\",\n            hide: true,\n            detail:true\n          },\n          {\n            label: \"是否生成账号\",\n            prop: \"isCreateAccount\",\n            labelWidth: 100,\n            type: 'select',\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false,\n            dicData: [{\n              label: '否',\n              value: 0\n            }, {\n              label: '是',\n              value: 1\n            }],\n          },\n          {\n            label: '是否生成账号',\n            prop: 'isCreateAccountQuery',\n            searchOrder: 3,\n            searchslot: true,\n            search: true,\n            hide: true,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false\n          },\n          {\n            label: \"创建时间\",\n            prop: \"createTime\",\n            searchslot: true,\n            type: 'date',\n            format: 'yyyy-MM-dd',\n            valueFormat: 'yyyy-MM-dd',\n            search: true,\n            span: 12,\n            searchOrder: 2,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false,\n          }, {\n            label: \"最后修改时间\",\n            prop: \"updateTime\",\n            searchOrder: 1,\n            searchslot: true,\n            type: 'date',\n            format: 'yyyy-MM-dd',\n            valueFormat: 'yyyy-MM-dd',\n            search: true,\n            span: 12,\n            addDisplay: false,\n            editDisplay: false,\n            viewDisplay: false,\n          }\n        ],\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.orguser_add, false),\n        viewBtn: this.vaildData(this.permission.orguser_view, false),\n        delBtn: this.vaildData(this.permission.orguser_delete, false),\n        editBtn: this.vaildData(this.permission.orguser_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    rowSave(row, done, loading) {\n      add(row).then(() => {\n        done();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      update(row).then(() => {\n        done();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      this.type=type;\n      var _that=this;\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.form = res.data.data;\n          //添加编辑时展示的客户名称\n          this.form.addCustName=this.form.custName;\n          // this.detailManagerName(this.form.custManager);\n          //加载客户经理下拉树\n          getContractList(_that.form.custId).then(res => {\n            this.option.column.find(item=>{\n              if (item.prop=='custManager'){\n                var manager = res.data.data;\n                item.dicData=manager;\n                //加载机构名称\n                if (manager){\n                  var contract=manager.find(item=>{\n                    return item.id==_that.form.custManager;\n                  });\n                  if (contract){\n                    this.depts.find(dic=>{\n                      if (dic.id==contract.custOrg){\n                        _that.form.custOrgName=dic.deptName;\n                      }\n                    })\n                  } ;\n                }\n              }\n            })\n          });\n        });\n\n        console.log(_that.form)\n\n      }else {\n        this.form.userPhone=null;\n        this.form.userEmail=null;\n      }\n      done();\n    },\n    searchReset() {\n      this.createTime=[];\n      this.updateTime=[];\n      this.query = {};\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      if (params.userType) {\n        params.userTypes = params.userType;\n        params.userType = null;\n      }\n      if (this.form.isCreateAccount != null) {\n        params.isCreateAccount = this.form.isCreateAccount;\n      }\n      if (this.updateTime) {\n        this.query.updateTimeStartTime = this.updateTime[0];\n        this.query.updateTimeEndTime = this.updateTime[1];\n      }\n      if (this.createTime) {\n        this.query.createStartTime = this.createTime[0];\n        this.query.createEndTime = this.createTime[1];\n      }\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n\n    },\n    detailDialog(row){\n      this.showDetailFlag=true;\n      this.$refs.detailOrgUserDialog.initData(row.id);\n    },\n    addPhone(field,label){\n\n      this.$refs.addEmailOrPhone.openType({\n        'field':field,\n        'label':label,\n        'value':this.form[field]\n      })\n      this.addEmailOrPhoneDialogFlag=true;\n    },\n    cancelEmailOrPhoneDialog(){\n      this.addEmailOrPhoneDialogFlag=false;\n    },\n    acceptEmailAndPhone(obj){\n      this.form[obj.field]=obj.arrValue;\n    },\n    cancelDetail(){\n      this.showDetailFlag=false;\n    },\n    //客户弹窗\n    addSuperUnit() {\n      this.customerDialogFlag = true\n    },\n    cancelCustomerDialog(){\n      this.customerDialogFlag = false\n    },\n    //接受上级单位\n    acceptSuperUnit(row) {\n      this.form.addCustName = row.custName;\n      this.form.custId = row.id;\n      this.form.custManager=\"\";\n      this.form.custOrgName=\"\";\n      this.detailManagerName(row.id)\n    },\n    restMange(){\n      this.form.custManager=\"\";\n    },\n    detailManagerName(custId){\n      getContractList(custId).then(res => {\n        //加载联系人下拉\n        this.option.column.find(item=>{\n          if (item.dicData){\n            item.dicData=[];\n            item.dicData=res.data.data;\n            if (res.data.data.length==1){\n              this.form.custManager=res.data.data[0].id\n\n            }\n          }\n        })\n      })\n    },\n    handleUpload(){\n      this.uploadUserDialogFlag=true;\n    },\n    cancelUploadUserDialog(){\n      this.uploadUserDialogFlag=false;\n    },\n    handleExport(){\n     this.exportDialogFlag=true;\n      this.$refs.exportUserDialog.accept(this.query);\n    },\n    cancelExportDialog(){\n      this.exportDialogFlag=false;\n    },\n    addAccount(){\n      this.addAccountUserFlag=true;\n    },\n    cancelAddAccountUserDialog(){\n      this.addAccountUserFlag=false;\n    },\n    handleAdd(){\n      this.$refs.crud.rowAdd();\n    },\n    handleEdit (row, index) {\n      this.$refs.crud.rowEdit(row, index);\n    },\n  }\n};\n",{"version":3,"sources":["mechanismUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mechanismUser.vue","sourceRoot":"src/views/contract/user","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @row-del=\"rowDel\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n\r\n        <el-button type=\"primary\" size=\"small\"\r\n                   icon=\"el-icon-plus\" @click=\"handleAdd\"\r\n                    >新增</el-button>\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.orguser_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n        <el-button type=\"success\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-upload2\"\r\n                   @click=\"handleUpload\">导入\r\n        </el-button>\r\n        <el-button type=\"warning\"\r\n                   size=\"small\"\r\n                   plain\r\n                   icon=\"el-icon-download\"\r\n                   @click=\"handleExport\">导出\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menuForm\">\r\n        <el-button type=\"primary\" icon=\"el-icon-s-check\" size=\"small\"   @click=\"addAccount \">生成账号</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-check\" size=\"small\"  v-if=\"type=='add'\" @click=\"$refs.crud.rowSave()\">保存</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-check\" size=\"small\"  v-if=\"type=='edit'\" @click=\"$refs.crud.rowUpdate()\">修改</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-close\" size=\"small\"  @click=\"$refs.crud.closeDialog()\">取消</el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"userNo\">\r\n        <el-button\r\n          type=\"text\"\r\n          size=\"mini\"\r\n          @click=\"detailDialog(row)\">\r\n          {{row.userNo}}\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"{row}\" slot=\"isCreateAccountQuerySearch\">\r\n        <el-radio-group v-model=\"form.isCreateAccount\">\r\n          <el-radio v-for=\"item in dicCreateAccountData \" :key=\"item.value\"\r\n                    :value=\"item.value\"\r\n                    :label=\"item.value\"\r\n          >{{item.label}}\r\n          </el-radio>\r\n        </el-radio-group>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"createTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"createTime\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"updateTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"updateTime\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"userPhoneForm\">\r\n        <div>\r\n          <el-input  v-model=\"form.userPhone\" disabled placeholder=\"请添加手机号\" style=\"width: 100%;\">\r\n            <el-button slot=\"append\" icon=\"el-icon-plus\" size=\"mini\" @click=\"addPhone('userPhone','手机号')\" style=\"width: 10%;\">请添加手机号</el-button>\r\n          </el-input>\r\n        </div>\r\n      </template>\r\n\r\n      <template slot-scope=\"\" slot=\"addCustNameForm\">\r\n        <div>\r\n          <el-input  v-model=\"form.addCustName\"   disabled placeholder=\"请选择客户\"   style=\"width: 100%;\">\r\n            <el-button slot=\"append\" icon=\"el-icon-plus\" size=\"mini\" @click=\"addSuperUnit\" style=\"width: 10%;\">请选择客户</el-button>\r\n          </el-input>\r\n        </div>\r\n      </template>\r\n      <template slot-scope=\"\" slot=\"userEmailForm\">\r\n        <div>\r\n          <el-input  v-model=\"form.userEmail\" disabled placeholder=\"请添加邮件\" style=\"width: 100%;\">\r\n            <el-button  slot=\"append\" icon=\"el-icon-plus\" size=\"mini\" @click=\"addPhone('userEmail','邮件')\" style=\"width: 10%;\">请添加邮件</el-button>\r\n          </el-input>\r\n\r\n        </div>\r\n      </template>\r\n    </avue-crud>\r\n    <add-email-or-phone ref=\"addEmailOrPhone\" :emailOrPhoneData=\"emailOrPhoneData\" :addEmailOrPhoneDialogFlag=\"addEmailOrPhoneDialogFlag\"  @cancelEmailOrPhoneDialog=\"cancelEmailOrPhoneDialog\" @accept=\"acceptEmailAndPhone\" ></add-email-or-phone>\r\n    <detail-org-user-dialog ref=\"detailOrgUserDialog\"  :showDetailFlag=\"showDetailFlag\" @cancel=\"cancelDetail\" ></detail-org-user-dialog>\r\n    <customer-dialog ref=\"customerDialog\" :customerDialogFlag=\"customerDialogFlag\" @acceptSuperUnit=\"acceptSuperUnit\" @cancelCustomerDialog=\"cancelCustomerDialog\" ></customer-dialog>\r\n    <upload-user-dialog  ref=\"uploadUserDialog\" :uploadUserDialogFlag=\"uploadUserDialogFlag\" @cancelUploadUserDialog=\"cancelUploadUserDialog\"></upload-user-dialog>\r\n    <export-user-dialog ref=\"exportUserDialog\" :exportDialogFlag=\"exportDialogFlag\" @cancel=\"cancelExportDialog\"></export-user-dialog>\r\n    <add-account-user ref=\"addAccountUser\" :addAccountUserFlag=\"addAccountUserFlag\" @cancelDialog=\"cancelAddAccountUserDialog\"></add-account-user>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove, getContractList} from \"@/api/contract/user/orguser\";\r\n  import {getCustomerList} from \"@/api/contract/customer/orgcustomer\";\r\n  import {getDeptList} from \"@/api/system/dept\";\r\n  import {mapGetters} from \"vuex\";\r\n  import detailOrgUserDialog from \"./detailOrgUserDialog\";\r\n  import addEmailOrPhone from \"./addEmailOrPhone\";\r\n  import customerDialog from \"../customer/customerDialog\";\r\n  import uploadUserDialog from \"./uploadUserDialog\";\r\n  import exportUserDialog from \"./exportUserDialog\";\r\n  import addAccountUser from \"./addAccountUser\";\r\n  export default {\r\n    components: {\r\n      addAccountUser,\r\n      exportUserDialog,\r\n      uploadUserDialog,\r\n      customerDialog,\r\n      addEmailOrPhone,detailOrgUserDialog\r\n    },\r\n    mounted(){\r\n      //初始化机构树\r\n      getDeptList('000000').then(res => {\r\n      this.depts=res.data.data;\r\n  });\r\n    },\r\n    data() {\r\n      return {\r\n        type:'',\r\n        depts:[],\r\n        custId: null,\r\n        contracts: [],\r\n        createTime: [],\r\n        addEmailOrPhoneDialogFlag:false,\r\n        exportDialogFlag:false,\r\n        uploadUserDialogFlag:false,\r\n        addAccountUserFlag:false,\r\n        customerDialogFlag:false,\r\n        showDetailFlag:false,\r\n        updateTime: [],\r\n        dicCreateAccountData: [{\r\n          label: '全部',\r\n          value: null\r\n        }, {\r\n          label: '否',\r\n          value: 0\r\n        }, {\r\n          label: '是',\r\n          value: 1\r\n        }],\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        selectionList: [],\r\n        option: {\r\n          index: false,\r\n          searchLabelWidth: 100,\r\n          calcHeight: 210,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          border: true,\r\n          viewBtn: false,\r\n          saveBtn:false,\r\n          addBtn:false,\r\n          updateBtn:false,\r\n          cancelBtn:false,\r\n          menuAlign:'center',\r\n          align:'center',\r\n          selection: true,\r\n          searchShow: true,\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"用户编码\",\r\n              prop: \"userNo\",\r\n              search: true,\r\n              searchOrder: 7,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              slot:true\r\n            },\r\n            {\r\n              label: \"姓名\",\r\n              prop: \"userName\",\r\n              search: true,\r\n              searchOrder: 10,\r\n              viewDisplay: false,\r\n              rules: [{required: true,message: \"请输入姓名\",trigger: \"blur\"},\r\n                { min: 0, max: 5, message: '最长限5个字', trigger: 'blur' }],\r\n            },\r\n            {\r\n              label: \"性别\",\r\n              prop: \"userSex\",\r\n              hide: true,\r\n              viewDisplay: false,\r\n              rules: [{\r\n                required: true,\r\n                message: \"请选择性别\",\r\n                trigger: \"blur\"\r\n              }],\r\n              type: \"radio\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.SEX),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n            },\r\n            {\r\n              label: '客户名称',\r\n              prop: 'addCustName',\r\n              formslot:true,\r\n              hide: true,\r\n              rules:[{\r\n                required: true, message:`客户名称不能为空`, trigger: 'blur'\r\n              }]\r\n\r\n            },\r\n            {\r\n              label: '部门',\r\n              prop: \"custOrg\",\r\n              hide: true,\r\n              rules: [{ min: 0, max: 10, message: '最长限10个字', trigger: 'blur' }],\r\n            },\r\n            {\r\n              label: \"邮箱\",\r\n              prop: \"userEmail\",\r\n              search: true,\r\n              searchOrder: 9,\r\n              formslot:true,\r\n              rules:[{ min: 0, max: 100, message: '最长限100个字', trigger: 'blur' }],\r\n\r\n\r\n            },\r\n            {\r\n              label: \"手机号\",\r\n              prop: \"userPhone\",\r\n              search: true,\r\n              searchOrder: 8,\r\n              formslot:true,\r\n\r\n            },\r\n            {\r\n              label: \"客户编码\",\r\n              prop: \"custCode\",\r\n              search: true,\r\n              searchOrder: 6,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"客户名称\",\r\n              prop: \"custName\",\r\n              search: true,\r\n              searchOrder: 5,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              rules:[\r\n                {required: true,message: \"请选择客户名称\",trigger: \"blur\"}\r\n              ]\r\n            },\r\n            {\r\n              label: \"用户类型\",\r\n              prop: \"userType\",\r\n              search: true,\r\n              searchOrder: 4,\r\n              viewDisplay: false,\r\n              type: \"select\",\r\n              searchMultiple: true,\r\n              dicUrl: this.getDicValue(this.CONSTANT.USER_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n            },\r\n            {\r\n              label: \"用户描述\",\r\n              prop: \"userDesc\",\r\n              type: \"textarea\",\r\n              hide: true,\r\n              span: 24,\r\n              rules:[{ min: 0, max: 100, message: '最长限100个字', trigger: 'blur' }],\r\n            },\r\n            {\r\n              label: \"固定电话\",\r\n              prop: \"userTele\",\r\n              hide: true,\r\n              rules:[{ min: 0, max: 20, message: '最长限20个字', trigger: 'blur' }],\r\n\r\n            },\r\n            {\r\n              label: \"传真\",\r\n              prop: \"userFax\",\r\n              hide: true,\r\n              rules:[{ min: 0, max: 20, message: '最长限20个字', trigger: 'blur' }],\r\n\r\n            },\r\n            {\r\n              label: \"客户经理\",\r\n              prop: \"custManager\",\r\n              hide: true,\r\n              type: \"select\",\r\n              dicData: [],\r\n              props: {\r\n                label: \"custManager\",\r\n                value: \"id\"\r\n              },\r\n              change: ({value,column}) => {\r\n                if (!value){\r\n                  this.form.custOrgName=null;\r\n                }\r\n                if (column.dicData){\r\n                  var contract=column.dicData.find(item=>{\r\n                    return item.id==value;\r\n                  });\r\n                  if (contract){\r\n                    this.depts.find(dic=>{\r\n                      if (dic.id==contract.custOrg){\r\n                        this.form.custOrgName=dic.deptName;\r\n                      }\r\n                    })\r\n                  } ;\r\n                }\r\n\r\n              },\r\n\r\n            },\r\n            {\r\n              label: \"所属机构\",\r\n              prop: \"custOrgName\",\r\n              hide: true,\r\n              detail:true\r\n            },\r\n            {\r\n              label: \"是否生成账号\",\r\n              prop: \"isCreateAccount\",\r\n              labelWidth: 100,\r\n              type: 'select',\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n              dicData: [{\r\n                label: '否',\r\n                value: 0\r\n              }, {\r\n                label: '是',\r\n                value: 1\r\n              }],\r\n            },\r\n            {\r\n              label: '是否生成账号',\r\n              prop: 'isCreateAccountQuery',\r\n              searchOrder: 3,\r\n              searchslot: true,\r\n              search: true,\r\n              hide: true,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              searchslot: true,\r\n              type: 'date',\r\n              format: 'yyyy-MM-dd',\r\n              valueFormat: 'yyyy-MM-dd',\r\n              search: true,\r\n              span: 12,\r\n              searchOrder: 2,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n            }, {\r\n              label: \"最后修改时间\",\r\n              prop: \"updateTime\",\r\n              searchOrder: 1,\r\n              searchslot: true,\r\n              type: 'date',\r\n              format: 'yyyy-MM-dd',\r\n              valueFormat: 'yyyy-MM-dd',\r\n              search: true,\r\n              span: 12,\r\n              addDisplay: false,\r\n              editDisplay: false,\r\n              viewDisplay: false,\r\n            }\r\n          ],\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.orguser_add, false),\r\n          viewBtn: this.vaildData(this.permission.orguser_view, false),\r\n          delBtn: this.vaildData(this.permission.orguser_delete, false),\r\n          editBtn: this.vaildData(this.permission.orguser_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      rowSave(row, done, loading) {\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        this.type=type;\r\n        var _that=this;\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.form = res.data.data;\r\n            //添加编辑时展示的客户名称\r\n            this.form.addCustName=this.form.custName;\r\n            // this.detailManagerName(this.form.custManager);\r\n            //加载客户经理下拉树\r\n            getContractList(_that.form.custId).then(res => {\r\n              this.option.column.find(item=>{\r\n                if (item.prop=='custManager'){\r\n                  var manager = res.data.data;\r\n                  item.dicData=manager;\r\n                  //加载机构名称\r\n                  if (manager){\r\n                    var contract=manager.find(item=>{\r\n                      return item.id==_that.form.custManager;\r\n                    });\r\n                    if (contract){\r\n                      this.depts.find(dic=>{\r\n                        if (dic.id==contract.custOrg){\r\n                          _that.form.custOrgName=dic.deptName;\r\n                        }\r\n                      })\r\n                    } ;\r\n                  }\r\n                }\r\n              })\r\n            });\r\n          });\r\n\r\n          console.log(_that.form)\r\n\r\n        }else {\r\n          this.form.userPhone=null;\r\n          this.form.userEmail=null;\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.createTime=[];\r\n        this.updateTime=[];\r\n        this.query = {};\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        if (params.userType) {\r\n          params.userTypes = params.userType;\r\n          params.userType = null;\r\n        }\r\n        if (this.form.isCreateAccount != null) {\r\n          params.isCreateAccount = this.form.isCreateAccount;\r\n        }\r\n        if (this.updateTime) {\r\n          this.query.updateTimeStartTime = this.updateTime[0];\r\n          this.query.updateTimeEndTime = this.updateTime[1];\r\n        }\r\n        if (this.createTime) {\r\n          this.query.createStartTime = this.createTime[0];\r\n          this.query.createEndTime = this.createTime[1];\r\n        }\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n\r\n      },\r\n      detailDialog(row){\r\n        this.showDetailFlag=true;\r\n        this.$refs.detailOrgUserDialog.initData(row.id);\r\n      },\r\n      addPhone(field,label){\r\n\r\n        this.$refs.addEmailOrPhone.openType({\r\n          'field':field,\r\n          'label':label,\r\n          'value':this.form[field]\r\n        })\r\n        this.addEmailOrPhoneDialogFlag=true;\r\n      },\r\n      cancelEmailOrPhoneDialog(){\r\n        this.addEmailOrPhoneDialogFlag=false;\r\n      },\r\n      acceptEmailAndPhone(obj){\r\n        this.form[obj.field]=obj.arrValue;\r\n      },\r\n      cancelDetail(){\r\n        this.showDetailFlag=false;\r\n      },\r\n      //客户弹窗\r\n      addSuperUnit() {\r\n        this.customerDialogFlag = true\r\n      },\r\n      cancelCustomerDialog(){\r\n        this.customerDialogFlag = false\r\n      },\r\n      //接受上级单位\r\n      acceptSuperUnit(row) {\r\n        this.form.addCustName = row.custName;\r\n        this.form.custId = row.id;\r\n        this.form.custManager=\"\";\r\n        this.form.custOrgName=\"\";\r\n        this.detailManagerName(row.id)\r\n      },\r\n      restMange(){\r\n        this.form.custManager=\"\";\r\n      },\r\n      detailManagerName(custId){\r\n        getContractList(custId).then(res => {\r\n          //加载联系人下拉\r\n          this.option.column.find(item=>{\r\n            if (item.dicData){\r\n              item.dicData=[];\r\n              item.dicData=res.data.data;\r\n              if (res.data.data.length==1){\r\n                this.form.custManager=res.data.data[0].id\r\n\r\n              }\r\n            }\r\n          })\r\n        })\r\n      },\r\n      handleUpload(){\r\n        this.uploadUserDialogFlag=true;\r\n      },\r\n      cancelUploadUserDialog(){\r\n        this.uploadUserDialogFlag=false;\r\n      },\r\n      handleExport(){\r\n       this.exportDialogFlag=true;\r\n        this.$refs.exportUserDialog.accept(this.query);\r\n      },\r\n      cancelExportDialog(){\r\n        this.exportDialogFlag=false;\r\n      },\r\n      addAccount(){\r\n        this.addAccountUserFlag=true;\r\n      },\r\n      cancelAddAccountUserDialog(){\r\n        this.addAccountUserFlag=false;\r\n      },\r\n      handleAdd(){\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      handleEdit (row, index) {\r\n        this.$refs.crud.rowEdit(row, index);\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}