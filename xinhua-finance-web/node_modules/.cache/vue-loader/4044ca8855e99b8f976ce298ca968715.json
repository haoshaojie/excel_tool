{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\page\\index\\top\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\page\\index\\top\\index.vue","mtime":1618367977397},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport { fullscreenToggel, listenfullscreen } from \"@/util/util\";\r\nimport topLock from \"./top-lock\";\r\nimport topMenu from \"./top-menu\";\r\nimport topSearch from \"./top-search\";\r\nimport topTheme from \"./top-theme\";\r\nimport topLogs from \"./top-logs\";\r\nimport topColor from \"./top-color\";\r\nimport topLang from \"./top-lang\";\r\nimport logo from \"../logo\";\r\nimport { setTheme } from \"@/util/util\";\r\nexport default {\r\n  components: {\r\n    topLock,\r\n    topMenu,\r\n    topSearch,\r\n    topTheme,\r\n    topLogs,\r\n    topColor,\r\n    topLang,\r\n    logo\r\n  },\r\n  name: \"top\",\r\n  data() {\r\n    return {};\r\n  },\r\n  filters: {},\r\n  created() {},\r\n  mounted() {\r\n    if(!this.showTheme){\r\n        setTheme(\"theme-white\");\r\n    }\r\n    listenfullscreen(this.setScreen);\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      showDebug: state => state.common.showDebug,\r\n      showTheme: state => state.common.showTheme,\r\n      showLock: state => state.common.showLock,\r\n      showFullScren: state => state.common.showFullScren,\r\n      showCollapse: state => state.common.showCollapse,\r\n      showSearch: state => state.common.showSearch,\r\n      showMenu: state => state.common.showMenu,\r\n      showColor: state => state.common.showColor,\r\n      showLanguage:state=>state.common.showLanguage\r\n    }),\r\n    ...mapGetters([\r\n      \"userInfo\",\r\n      \"isFullScren\",\r\n      \"tagWel\",\r\n      \"tagList\",\r\n      \"isCollapse\",\r\n      \"tag\",\r\n      \"logsLen\",\r\n      \"logsFlag\"\r\n    ])\r\n  },\r\n  methods: {\r\n    handleScreen() {\r\n      fullscreenToggel();\r\n    },\r\n    setCollapse() {\r\n      this.$store.commit(\"SET_COLLAPSE\");\r\n    },\r\n    setScreen() {\r\n      this.$store.commit(\"SET_FULLSCREN\");\r\n    },\r\n    logout() {\r\n      this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\r\n        confirmButtonText: this.$t(\"submitText\"),\r\n        cancelButtonText: this.$t(\"cancelText\"),\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        this.$store.dispatch(\"LogOut\").then(() => {\r\n          this.$router.push({ path: \"/login\" });\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\r\n  <div class=\"avue-top\">\r\n    <logo></logo>\r\n    <div class=\"top-bar__left\" v-if=\"false\">\r\n      <div class=\"avue-breadcrumb\"\r\n           :class=\"[{ 'avue-breadcrumb--active': isCollapse }]\"\r\n           v-if=\"showCollapse\">\r\n        <i class=\"icon-navicon\"\r\n           @click=\"setCollapse\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"top-bar__title\">\r\n      <div class=\"top-bar__item top-bar__item--show\"\r\n           v-if=\"showMenu\">\r\n        <top-menu></top-menu>\r\n      </div>\r\n      <span class=\"top-bar__item\"\r\n            v-if=\"showSearch\">\r\n        <top-search></top-search>\r\n      </span>\r\n    </div>\r\n    <div class=\"top-bar__right\">\r\n      <el-tooltip v-if=\"showColor\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.color')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-color></top-color>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showDebug\"\r\n                  effect=\"dark\"\r\n                  :content=\"logsFlag?$t('navbar.bug'):logsLen+$t('navbar.bugs')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-logs></top-logs>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showLock\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.lock')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <top-lock></top-lock>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showTheme\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.theme')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-theme></top-theme>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showLanguage\"\r\n                  effect=\"dark\"\r\n                  :content=\"$t('navbar.language')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item top-bar__item--show\">\r\n          <top-lang></top-lang>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showFullScren\"\r\n                  effect=\"dark\"\r\n                  :content=\"isFullScren?$t('navbar.screenfullF'):$t('navbar.screenfull')\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <i :class=\"isFullScren?'icon-tuichuquanping':'icon-quanping'\"\r\n             @click=\"handleScreen\"></i>\r\n        </div>\r\n      </el-tooltip>\r\n      <img class=\"top-bar__img\"\r\n           :src=\"userInfo.avatar\">\r\n      <el-dropdown>\r\n        <span class=\"el-dropdown-link\">\r\n          {{$t('navbar.hello')}},{{userInfo.userName}}\r\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item>\r\n            <router-link to=\"/\">{{$t('navbar.dashboard')}}</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item>\r\n            <router-link to=\"/info/index\">{{$t('navbar.userinfo')}}</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item @click.native=\"logout\"\r\n                            divided>{{$t('navbar.logOut')}}</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport { fullscreenToggel, listenfullscreen } from \"@/util/util\";\r\nimport topLock from \"./top-lock\";\r\nimport topMenu from \"./top-menu\";\r\nimport topSearch from \"./top-search\";\r\nimport topTheme from \"./top-theme\";\r\nimport topLogs from \"./top-logs\";\r\nimport topColor from \"./top-color\";\r\nimport topLang from \"./top-lang\";\r\nimport logo from \"../logo\";\r\nimport { setTheme } from \"@/util/util\";\r\nexport default {\r\n  components: {\r\n    topLock,\r\n    topMenu,\r\n    topSearch,\r\n    topTheme,\r\n    topLogs,\r\n    topColor,\r\n    topLang,\r\n    logo\r\n  },\r\n  name: \"top\",\r\n  data() {\r\n    return {};\r\n  },\r\n  filters: {},\r\n  created() {},\r\n  mounted() {\r\n    if(!this.showTheme){\r\n        setTheme(\"theme-white\");\r\n    }\r\n    listenfullscreen(this.setScreen);\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      showDebug: state => state.common.showDebug,\r\n      showTheme: state => state.common.showTheme,\r\n      showLock: state => state.common.showLock,\r\n      showFullScren: state => state.common.showFullScren,\r\n      showCollapse: state => state.common.showCollapse,\r\n      showSearch: state => state.common.showSearch,\r\n      showMenu: state => state.common.showMenu,\r\n      showColor: state => state.common.showColor,\r\n      showLanguage:state=>state.common.showLanguage\r\n    }),\r\n    ...mapGetters([\r\n      \"userInfo\",\r\n      \"isFullScren\",\r\n      \"tagWel\",\r\n      \"tagList\",\r\n      \"isCollapse\",\r\n      \"tag\",\r\n      \"logsLen\",\r\n      \"logsFlag\"\r\n    ])\r\n  },\r\n  methods: {\r\n    handleScreen() {\r\n      fullscreenToggel();\r\n    },\r\n    setCollapse() {\r\n      this.$store.commit(\"SET_COLLAPSE\");\r\n    },\r\n    setScreen() {\r\n      this.$store.commit(\"SET_FULLSCREN\");\r\n    },\r\n    logout() {\r\n      this.$confirm(this.$t(\"logoutTip\"), this.$t(\"tip\"), {\r\n        confirmButtonText: this.$t(\"submitText\"),\r\n        cancelButtonText: this.$t(\"cancelText\"),\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        this.$store.dispatch(\"LogOut\").then(() => {\r\n          this.$router.push({ path: \"/login\" });\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}