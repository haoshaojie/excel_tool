{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\userAccount\\personaluser.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\userAccount\\personaluser.vue","mtime":1618541026440},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {getList, getPersonalDetail} from \"@/api/contract/userAccount/personaluser\";\r\nimport {resetLock, update} from \"@/api/contract/userAccount/account\";\r\nimport {mapGetters} from \"vuex\";\r\nimport userDetailDialog from \"./userDetailDialog\";\r\nimport resetPasswordDialog from './resetPasswordDialog';\r\nimport accountExportDialog from './accountExportDialog';\r\n\r\nexport default {\r\n  components: {\r\n    userDetailDialog,\r\n    resetPasswordDialog,\r\n    accountExportDialog\r\n  },\r\n  data() {\r\n    return {\r\n      showExportDialog: false,\r\n      exportColumns: [],\r\n      showDetail: false,\r\n      accPersonalDetail: {},\r\n      showResetPasswordDialog: false,\r\n      accountId: \"\",\r\n      hasPhone: false,\r\n      hasEmail: false,\r\n      form: {},\r\n      query: {},\r\n      loading: true,\r\n      page: {\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        total: 0\r\n      },\r\n      selectionList: [],\r\n      createTimeArr: [],\r\n      updateTimeArr: [],\r\n      option: {\r\n        height: 'auto',\r\n        calcHeight: 210,\r\n        searchShow: true,\r\n        searchMenuSpan: 6,\r\n        tip: false,\r\n        border: true,\r\n        index: false,\r\n        viewBtn: false,\r\n        selection: true,\r\n        addBtn: false,\r\n        editBtn: true,\r\n        delBtn: false,\r\n        column: [\r\n          {\r\n            label: \"账号ID\",\r\n            prop: \"accId\",\r\n            hide: true,\r\n            addDisplay: false,\r\n            editDisplay: false,\r\n          },\r\n          {\r\n            label: \"手机号码\",\r\n            prop: \"userPhone\",\r\n            search: true,\r\n            rules: [{\r\n              required: true,\r\n              message: \"请输入手机号\",\r\n              trigger: \"blur\"\r\n            }]\r\n          },\r\n          {\r\n            label: \"邮箱\",\r\n            prop: \"userEmail\",\r\n            search: true,\r\n            rules: [{\r\n              required: true,\r\n              message: \"请输入邮箱\",\r\n              trigger: \"blur\"\r\n            }]\r\n          },\r\n          {\r\n            label: \"姓名\",\r\n            prop: \"userName\",\r\n            editDisabled: true,\r\n          },\r\n          {\r\n            label: \"注册渠道\",\r\n            prop: \"regAppChannelType\",\r\n            search: true,\r\n            type: \"select\",\r\n            dicUrl: this.getDicValue(this.CONSTANT.REGAPP_CHANNEL_TYPE),\r\n            props: {\r\n              label: \"dictValue\",\r\n              value: \"dictKey\"\r\n            },\r\n            order: 6,\r\n            editDisabled: true,\r\n          },\r\n          {\r\n            label: \"注册时间\",\r\n            prop: \"createTime\",\r\n            searchslot: true,\r\n            search: true,\r\n            editDisabled: true,\r\n          },\r\n          {\r\n            label: \"账号状态\",\r\n            prop: \"accStatus\",\r\n            search: true,\r\n            type: \"select\",\r\n            dicUrl: this.getDicValue(this.CONSTANT.ACC_STATUS),\r\n            props: {\r\n              label: \"dictValue\",\r\n              value: \"dictKey\"\r\n            },\r\n            order: 6,\r\n            editDisabled: true,\r\n            dataType: 'number'\r\n          },\r\n          {\r\n            label: \"修改时间\",\r\n            prop: \"updateTime\",\r\n            searchslot: true,\r\n            search: true,\r\n            display: false,\r\n            hide: true\r\n          },\r\n        ]\r\n      },\r\n      data: [{\r\n        \"userNickname\": \"XHCJ0001\",\r\n        \"email\": \"18410379896\",\r\n        \"phone\": \"18410379896\",\r\n        nickName: \"\",\r\n        userName: \"\",\r\n        customerName: \"\",\r\n        userState: \"\",\r\n        accountState: \"\",\r\n        createTime: \"\",\r\n        updateTime: \"\"\r\n      }]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"permission\"]),\r\n    permissionList() {\r\n      return {\r\n        addBtn: this.vaildData(this.permission.personaluser_add, false),\r\n        viewBtn: this.vaildData(this.permission.personaluser_view, false),\r\n        delBtn: this.vaildData(this.permission.personaluser_delete, false),\r\n        editBtn: this.vaildData(this.permission.personaluser_edit, false)\r\n      };\r\n    },\r\n    ids() {\r\n      let ids = [];\r\n      this.selectionList.forEach(ele => {\r\n        ids.push(ele.id);\r\n      });\r\n      return ids.join(\",\");\r\n    }\r\n  },\r\n  created() {\r\n    this.option.column.forEach(item => {\r\n      if (!item.hide) {\r\n        this.exportColumns.push({\r\n          label: item.label,\r\n          prop: item.prop,\r\n        })\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    queryPersonalDetail(accId) {\r\n      if (accId && accId.length > 0) {\r\n        getPersonalDetail(accId).then(res => {\r\n          this.accPersonalDetail = res.data.data;\r\n          this.showDetail = true;\r\n        }, error => {\r\n          this.showDetail = false;\r\n          window.console.log(error);\r\n        });\r\n      }\r\n    },\r\n    showAccountDetail(row) {\r\n      this.queryPersonalDetail(row.accId)\r\n    },\r\n    closeDetailDialog() {\r\n      this.showDetail = false;\r\n    },\r\n    closeExportDialog() {\r\n      this.showExportDialog = false;\r\n      this.exportColumns = [];\r\n    },\r\n    handleLockOrUnlock(row) {\r\n      let message = \"\", flag = false;\r\n      if (row.accStatus == 1) {\r\n        message = \"确认锁定该账号吗？\";\r\n        flag = true;\r\n      } else if (row.accStatus == 2) {\r\n        message = \"确认解锁该账号吗\";\r\n        flag = false;\r\n      } else {\r\n        return\r\n      }\r\n      this.$confirm(message, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return resetLock({\r\n            flag: flag,\r\n            accId: row.accId,\r\n          });\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    resetPassword(row) {\r\n      this.showResetPasswordDialog = true;\r\n      if (typeof row.userPhone == 'string' && row.userPhone.length > 0) {\r\n        this.hasPhone = true;\r\n      }\r\n      if (typeof row.userEmail == 'string' && row.userEmail.length > 0) {\r\n        this.hasEmail = true;\r\n      }\r\n      this.accountId = row.accId;\r\n    },\r\n    closeResetPasswordDialog() {\r\n      this.showResetPasswordDialog = false;\r\n      this.accountId = null;\r\n      this.hasPhone = false;\r\n      this.hasEmail = false;\r\n    },\r\n    rowUpdate(row, index, done, loading) {\r\n      update(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    handleExport() {\r\n      this.showExportDialog = true;\r\n    },\r\n    beforeOpen(done, type) {\r\n      if ([\"edit\", \"view\"].includes(type)) {\r\n        console.log(\"detailForm\", this.form)\r\n        getPersonalDetail(this.form.accId).then(res => {\r\n          done();\r\n          this.form = res.data.data;\r\n        }, error => {\r\n          window.console.log(error);\r\n          this.onLoad(this.page);\r\n        });\r\n      } else {\r\n        done();\r\n      }\r\n    },\r\n    searchReset() {\r\n      this.query = {};\r\n      this.createTimeArr = [];\r\n      this.updateTimeArr = [];\r\n      this.onLoad(this.page);\r\n    },\r\n    searchChange(params, done) {\r\n      this.query = params;\r\n      if (this.createTimeArr) {\r\n        this.query.startRegistTime = this.createTimeArr[0];\r\n        this.query.endRegistTime = this.createTimeArr[1];\r\n      }\r\n      if (this.updateTimeArr) {\r\n        this.query.startUpdateTime = this.updateTimeArr[0];\r\n        this.query.endUpdateTime = this.updateTimeArr[1];\r\n      }\r\n      this.page.currentPage = 1;\r\n      this.onLoad(this.page, params);\r\n      done();\r\n    },\r\n    selectionChange(list) {\r\n      this.selectionList = list;\r\n    },\r\n    selectionClear() {\r\n      this.selectionList = [];\r\n      this.$refs.crud.toggleSelection();\r\n    },\r\n    currentChange(currentPage) {\r\n      this.page.currentPage = currentPage;\r\n    },\r\n    sizeChange(pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    },\r\n    onLoad(page, params = {}) {\r\n      this.loading = true;\r\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        const data = res.data.data;\r\n        this.page.total = data.total;\r\n        this.data = data.records;\r\n        this.loading = false;\r\n        this.selectionClear();\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["personaluser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"personaluser.vue","sourceRoot":"src/views/contract/userAccount","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :search.sync=\"search\"\r\n               :data=\"data\"\r\n               :page.sync=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @on-load=\"onLoad\">\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"primary\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-download\"\r\n                   plain\r\n                   v-if=\"\"\r\n                   @click=\"handleExport\">导 出\r\n        </el-button>\r\n      </template>\r\n      <template slot-scope=\"scope\" slot=\"menu\">\r\n        <el-button type=\"text\" size=\"small\" @click.native=\"handleLockOrUnlock(scope.row)\">\r\n          {{scope.row.accStatus==1 ? \"锁定\":\"\"}}\r\n          {{scope.row.accStatus==2 ? \"解锁\":\"\"}}\r\n        </el-button>\r\n        <el-button type=\"text\" size=\"small\" @click.native=\"resetPassword(scope.row)\">重置密码</el-button>\r\n        <el-button type=\"text\" size=\"small\" @click.native=\"showAccountDetail(scope.row)\">详情</el-button>\r\n      </template>\r\n      <template slot-scope=\"{disabled,size}\" slot=\"createTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"createTimeArr\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot-scope=\"{disabled,size}\" slot=\"updateTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"updateTimeArr\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n    </avue-crud>\r\n    <user-detail-dialog ref=\"userDetaildialog\" type=\"personal\"\r\n                        :showDetail=\"showDetail\"\r\n                        :personal-account-detail=\"accPersonalDetail\"\r\n                        @close=\"closeDetailDialog\"/>\r\n    <reset-password-dialog ref=\"resetPasswordDialog\"\r\n                           :showResetPasswordDialog=\"showResetPasswordDialog\"\r\n                           :has-email=\"hasEmail\"\r\n                           :has-phone=\"hasPhone\"\r\n                           :account-id=\"accountId\"\r\n                           @close=\"closeResetPasswordDialog\"/>\r\n    <account-export-dialog ref=\"resetPasswordDialog\"\r\n                           type=\"personal\"\r\n                           :exportDialogFlag=\"showExportDialog\"\r\n                           :exportColumns=\"exportColumns\"\r\n                           @close=\"closeExportDialog\"/>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\nimport {getList, getPersonalDetail} from \"@/api/contract/userAccount/personaluser\";\r\nimport {resetLock, update} from \"@/api/contract/userAccount/account\";\r\nimport {mapGetters} from \"vuex\";\r\nimport userDetailDialog from \"./userDetailDialog\";\r\nimport resetPasswordDialog from './resetPasswordDialog';\r\nimport accountExportDialog from './accountExportDialog';\r\n\r\nexport default {\r\n  components: {\r\n    userDetailDialog,\r\n    resetPasswordDialog,\r\n    accountExportDialog\r\n  },\r\n  data() {\r\n    return {\r\n      showExportDialog: false,\r\n      exportColumns: [],\r\n      showDetail: false,\r\n      accPersonalDetail: {},\r\n      showResetPasswordDialog: false,\r\n      accountId: \"\",\r\n      hasPhone: false,\r\n      hasEmail: false,\r\n      form: {},\r\n      query: {},\r\n      loading: true,\r\n      page: {\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        total: 0\r\n      },\r\n      selectionList: [],\r\n      createTimeArr: [],\r\n      updateTimeArr: [],\r\n      option: {\r\n        height: 'auto',\r\n        calcHeight: 210,\r\n        searchShow: true,\r\n        searchMenuSpan: 6,\r\n        tip: false,\r\n        border: true,\r\n        index: false,\r\n        viewBtn: false,\r\n        selection: true,\r\n        addBtn: false,\r\n        editBtn: true,\r\n        delBtn: false,\r\n        column: [\r\n          {\r\n            label: \"账号ID\",\r\n            prop: \"accId\",\r\n            hide: true,\r\n            addDisplay: false,\r\n            editDisplay: false,\r\n          },\r\n          {\r\n            label: \"手机号码\",\r\n            prop: \"userPhone\",\r\n            search: true,\r\n            rules: [{\r\n              required: true,\r\n              message: \"请输入手机号\",\r\n              trigger: \"blur\"\r\n            }]\r\n          },\r\n          {\r\n            label: \"邮箱\",\r\n            prop: \"userEmail\",\r\n            search: true,\r\n            rules: [{\r\n              required: true,\r\n              message: \"请输入邮箱\",\r\n              trigger: \"blur\"\r\n            }]\r\n          },\r\n          {\r\n            label: \"姓名\",\r\n            prop: \"userName\",\r\n            editDisabled: true,\r\n          },\r\n          {\r\n            label: \"注册渠道\",\r\n            prop: \"regAppChannelType\",\r\n            search: true,\r\n            type: \"select\",\r\n            dicUrl: this.getDicValue(this.CONSTANT.REGAPP_CHANNEL_TYPE),\r\n            props: {\r\n              label: \"dictValue\",\r\n              value: \"dictKey\"\r\n            },\r\n            order: 6,\r\n            editDisabled: true,\r\n          },\r\n          {\r\n            label: \"注册时间\",\r\n            prop: \"createTime\",\r\n            searchslot: true,\r\n            search: true,\r\n            editDisabled: true,\r\n          },\r\n          {\r\n            label: \"账号状态\",\r\n            prop: \"accStatus\",\r\n            search: true,\r\n            type: \"select\",\r\n            dicUrl: this.getDicValue(this.CONSTANT.ACC_STATUS),\r\n            props: {\r\n              label: \"dictValue\",\r\n              value: \"dictKey\"\r\n            },\r\n            order: 6,\r\n            editDisabled: true,\r\n            dataType: 'number'\r\n          },\r\n          {\r\n            label: \"修改时间\",\r\n            prop: \"updateTime\",\r\n            searchslot: true,\r\n            search: true,\r\n            display: false,\r\n            hide: true\r\n          },\r\n        ]\r\n      },\r\n      data: [{\r\n        \"userNickname\": \"XHCJ0001\",\r\n        \"email\": \"18410379896\",\r\n        \"phone\": \"18410379896\",\r\n        nickName: \"\",\r\n        userName: \"\",\r\n        customerName: \"\",\r\n        userState: \"\",\r\n        accountState: \"\",\r\n        createTime: \"\",\r\n        updateTime: \"\"\r\n      }]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"permission\"]),\r\n    permissionList() {\r\n      return {\r\n        addBtn: this.vaildData(this.permission.personaluser_add, false),\r\n        viewBtn: this.vaildData(this.permission.personaluser_view, false),\r\n        delBtn: this.vaildData(this.permission.personaluser_delete, false),\r\n        editBtn: this.vaildData(this.permission.personaluser_edit, false)\r\n      };\r\n    },\r\n    ids() {\r\n      let ids = [];\r\n      this.selectionList.forEach(ele => {\r\n        ids.push(ele.id);\r\n      });\r\n      return ids.join(\",\");\r\n    }\r\n  },\r\n  created() {\r\n    this.option.column.forEach(item => {\r\n      if (!item.hide) {\r\n        this.exportColumns.push({\r\n          label: item.label,\r\n          prop: item.prop,\r\n        })\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    queryPersonalDetail(accId) {\r\n      if (accId && accId.length > 0) {\r\n        getPersonalDetail(accId).then(res => {\r\n          this.accPersonalDetail = res.data.data;\r\n          this.showDetail = true;\r\n        }, error => {\r\n          this.showDetail = false;\r\n          window.console.log(error);\r\n        });\r\n      }\r\n    },\r\n    showAccountDetail(row) {\r\n      this.queryPersonalDetail(row.accId)\r\n    },\r\n    closeDetailDialog() {\r\n      this.showDetail = false;\r\n    },\r\n    closeExportDialog() {\r\n      this.showExportDialog = false;\r\n      this.exportColumns = [];\r\n    },\r\n    handleLockOrUnlock(row) {\r\n      let message = \"\", flag = false;\r\n      if (row.accStatus == 1) {\r\n        message = \"确认锁定该账号吗？\";\r\n        flag = true;\r\n      } else if (row.accStatus == 2) {\r\n        message = \"确认解锁该账号吗\";\r\n        flag = false;\r\n      } else {\r\n        return\r\n      }\r\n      this.$confirm(message, {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          return resetLock({\r\n            flag: flag,\r\n            accId: row.accId,\r\n          });\r\n        })\r\n        .then(() => {\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        });\r\n    },\r\n    resetPassword(row) {\r\n      this.showResetPasswordDialog = true;\r\n      if (typeof row.userPhone == 'string' && row.userPhone.length > 0) {\r\n        this.hasPhone = true;\r\n      }\r\n      if (typeof row.userEmail == 'string' && row.userEmail.length > 0) {\r\n        this.hasEmail = true;\r\n      }\r\n      this.accountId = row.accId;\r\n    },\r\n    closeResetPasswordDialog() {\r\n      this.showResetPasswordDialog = false;\r\n      this.accountId = null;\r\n      this.hasPhone = false;\r\n      this.hasEmail = false;\r\n    },\r\n    rowUpdate(row, index, done, loading) {\r\n      update(row).then(() => {\r\n        done();\r\n        this.onLoad(this.page);\r\n        this.$message({\r\n          type: \"success\",\r\n          message: \"操作成功!\"\r\n        });\r\n      }, error => {\r\n        window.console.log(error);\r\n        loading();\r\n      });\r\n    },\r\n    handleExport() {\r\n      this.showExportDialog = true;\r\n    },\r\n    beforeOpen(done, type) {\r\n      if ([\"edit\", \"view\"].includes(type)) {\r\n        console.log(\"detailForm\", this.form)\r\n        getPersonalDetail(this.form.accId).then(res => {\r\n          done();\r\n          this.form = res.data.data;\r\n        }, error => {\r\n          window.console.log(error);\r\n          this.onLoad(this.page);\r\n        });\r\n      } else {\r\n        done();\r\n      }\r\n    },\r\n    searchReset() {\r\n      this.query = {};\r\n      this.createTimeArr = [];\r\n      this.updateTimeArr = [];\r\n      this.onLoad(this.page);\r\n    },\r\n    searchChange(params, done) {\r\n      this.query = params;\r\n      if (this.createTimeArr) {\r\n        this.query.startRegistTime = this.createTimeArr[0];\r\n        this.query.endRegistTime = this.createTimeArr[1];\r\n      }\r\n      if (this.updateTimeArr) {\r\n        this.query.startUpdateTime = this.updateTimeArr[0];\r\n        this.query.endUpdateTime = this.updateTimeArr[1];\r\n      }\r\n      this.page.currentPage = 1;\r\n      this.onLoad(this.page, params);\r\n      done();\r\n    },\r\n    selectionChange(list) {\r\n      this.selectionList = list;\r\n    },\r\n    selectionClear() {\r\n      this.selectionList = [];\r\n      this.$refs.crud.toggleSelection();\r\n    },\r\n    currentChange(currentPage) {\r\n      this.page.currentPage = currentPage;\r\n    },\r\n    sizeChange(pageSize) {\r\n      this.page.pageSize = pageSize;\r\n    },\r\n    onLoad(page, params = {}) {\r\n      this.loading = true;\r\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n        const data = res.data.data;\r\n        this.page.total = data.total;\r\n        this.data = data.records;\r\n        this.loading = false;\r\n        this.selectionClear();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}