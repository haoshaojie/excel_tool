{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\useragreement.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\views\\contract\\contract\\useragreement.vue","mtime":1618541026411},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getList, getDetail, add, update, remove} from \"@/api/contract/contract/useragreement\";\nimport {mapGetters} from \"vuex\";\nimport {fileType} from \"@/util/util\";\nimport userProtocolFilePerview from \"./userProtocolFilePerview\";\n\nexport default {\n  components: {userProtocolFilePerview},\n  data() {\n    return {\n      form: {},\n      query: {},\n      loading: true,\n      openDialog: false,\n      //协议文件列表\n      protocolFileList: [],\n      page: {\n        pageSize: 10,\n        currentPage: 1,\n        total: 0\n      },\n      agreementSignTime: [],\n      agreementTimeArrInit: [],\n      createTime: [],\n      selectionList: [],\n      option: {\n        height: 'auto',\n        calcHeight: 210,\n        searchShow: true,\n        searchMenuSpan: 6,\n        tip: false,\n        editBtn: true,\n        border: true,\n        index: false,\n        viewBtn: true,\n        viewBtnText: '查看合约',\n        delBtn: false,\n        selection: true,\n        labelWidth: 130,\n        menu: true,//是否显示操作菜单栏\n        menuWidth: 180,//操作菜单栏的宽度\n        column: [\n          {\n            label: \"主键id 雪花算法产生\",\n            prop: \"id\",\n            hide: true,\n            display: false, //在查看，新增，编辑页面是否显示\n            rules: [{\n              required: true,\n              message: \"请输入主键id 雪花算法产生\",\n              trigger: \"blur\"\n            }]\n          },\n          {\n            label: \"协议编码\",\n            prop: \"agreementNo\",\n            display: false, //在查看，新增，编辑页面是否显示\n            rules: [{\n              required: true,\n              message: \"请输入协议编码\",\n              trigger: \"blur\"\n            }],\n            slot: true\n          },\n          {\n            label: \"协议名称\",\n            span: 12,\n            prop: \"agreementName\",\n            search: true,\n            display: true,\n            showWordLimit: true,\n            maxlength: \"30\",\n            rules: [\n              {required: true, message: \"请输入协议名称\", trigger: \"blur\"},\n              {min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur'}\n            ],\n            order: 7\n          },\n          {\n            label: \"协议类型\",\n            span: 12,\n            prop: \"agreementType\",\n            search: true,\n            type: \"select\",\n            dicUrl: this.getDicValue(this.CONSTANT.AGREEMENT_TYPE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            order: 6\n          },\n          {\n            label: \"用户协议文件\",\n            hide: true,\n            display: true, //在查看，新增，编辑页面是否显示\n            prop: \"protocolFile\",\n            type: \"upload\",\n            showFileList: true,\n            multiple: true,\n            span: 24,\n            limit: 10,\n            order: 2,\n            tip: ' 仅支持上传doc/docx/pdf/zip/rar/png/jpg文件,文件个数不超过10个,单文件大小不超过10M',\n            accept: '.doc,.docx,.pdf,.zip,.rar,.jpg,.png',\n            action: '/api/cnfic-resource/oss/file/putFile',\n            propsHttp: {\n              res: 'data',\n              name: \"originalName\",\n              url: \"link\"\n            }\n          },\n          {\n            label: \"协议内容\",\n            span: 24,\n            prop: \"agreementContent\",\n            type: \"textarea\",\n            showWordLimit: true,\n            hide: true,\n            minRows: 3,\n            maxRows: 5,\n            maxlength: 5000,\n            order: 1\n          },\n          {\n            label: \"协议状态\",\n            search: true,\n            display: false, //在查看，新增，编辑页面是否显示\n            prop: \"agreementState\",\n            type: \"select\",\n            dicUrl: this.getDicValue(this.CONSTANT.AGREEMENT_STATE),\n            props: {\n              label: \"dictValue\",\n              value: \"dictKey\"\n            },\n            width: 80,\n          },\n          {\n            label: \"金额(元)\",\n            prop: \"amount\",\n            order: 5,\n            span: 12,\n            rules: [\n              {\n                pattern: /(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/,\n                message: '请输入正确格式,可保留两位小数'\n              }\n            ],\n          },\n          {\n            label: \"期限(月)\",\n            prop: \"termOfMonth\",\n            display: false,\n            width: 80,\n          },\n          {\n            label: \"有效期\",\n            prop: 'agreementTimeArr',\n            type: 'daterange',\n            format: 'yyyy-MM-dd',\n            valueFormat: 'yyyy-MM-dd',\n            search: false,\n            hide: true,\n            slot: true,\n            span: 12,\n            order: 3\n          },\n          {\n            label: \"签订时间\",\n            prop: \"agreementSignTime\",\n            searchslot: true,\n            type: 'date',\n            format: 'yyyy-MM-dd',\n            valueFormat: 'yyyy-MM-dd',\n            search: true,\n            span: 12,\n            order: 4\n          },\n          {\n            label: \"创建时间\",\n            prop: \"createTime\",\n            searchslot: true,\n            search: true,\n            display: false\n          },\n          {\n            label: '用户协议文件',\n            prop: 'userProtocolFile',\n            display: false,\n            slot: true\n          },\n        ]\n      },\n      data: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"permission\"]),\n    permissionList() {\n      return {\n        addBtn: this.vaildData(this.permission.useragreement_add, false),\n        viewBtn: this.vaildData(this.permission.useragreement_view, false),\n        delBtn: this.vaildData(this.permission.useragreement_delete, false),\n        editBtn: this.vaildData(this.permission.useragreement_edit, false)\n      };\n    },\n    ids() {\n      let ids = [];\n      this.selectionList.forEach(ele => {\n        ids.push(ele.id);\n      });\n      return ids.join(\",\");\n    }\n  },\n  methods: {\n    uploadBefore(file, done, loading, column) {\n      //如果你想修改file文件,由于上传的file是只读文件，必须复制新的file才可以修改名字，完后赋值到done函数里,如果不修改的话直接写done()即可\n      if ((file.size / 1024) < (1024 * 10)) {\n        if (fileType(file.name, this)) {\n          done();\n        } else {\n          loading();\n        }\n      } else {\n        loading();\n        this.$message.warning(\"附件大小限10M以内\");\n      }\n    },\n    handleView: function (row, index) {\n      this.$refs.crud.rowView(row, index);\n    },\n    rowSave(row, done, loading) {\n      if (row.agreementTimeArr.length == 2) {\n        row.agreementStartTime = row.agreementTimeArr[0];\n        row.agreementEndTime = row.agreementTimeArr[1];\n      }\n      row.protocolFile.forEach(item => {\n        item.fileName = item.label;\n        item.fileUrl = item.value;\n      });\n      add(row).then(() => {\n        done();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowUpdate(row, index, done, loading) {\n      if (row.agreementTimeArr.length == 2) {\n        row.agreementStartTime = row.agreementTimeArr[0];\n        row.agreementEndTime = row.agreementTimeArr[1];\n      }\n      row.protocolFile.forEach(item => {\n        item.fileName = item.label;\n        item.fileUrl = item.value;\n      });\n      update(row).then(() => {\n        done();\n        this.onLoad(this.page);\n        this.$message({\n          type: \"success\",\n          message: \"操作成功!\"\n        });\n      }, error => {\n        window.console.log(error);\n        loading();\n      });\n    },\n    rowDel(row) {\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(row.id);\n        })\n        .then(() => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n        });\n    },\n    viewAgreementDocument(row) {\n      getDetail(row.id).then(res => {\n        this.protocolFileList = res.data.data.protocolFile;\n        console.log(11, this.protocolFileList);\n        this.openDialog = true;\n      })\n    },\n    closeDialog(val) {\n      this.openDialog = val;\n    },\n    handleDelete() {\n      if (this.selectionList.length === 0) {\n        this.$message.warning(\"请选择至少一条数据\");\n        return;\n      }\n      this.$confirm(\"确定将选择数据删除?\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          return remove(this.ids);\n        })\n        .then((res) => {\n          this.onLoad(this.page);\n          this.$message({\n            type: \"success\",\n            message: \"操作成功!\"\n          });\n          this.$refs.crud.toggleSelection();\n        });\n    },\n    beforeOpen(done, type) {\n      if ([\"edit\", \"view\"].includes(type)) {\n        getDetail(this.form.id).then(res => {\n          this.agreementTimeArrInit[0] = res.data.data.agreementStartTime;\n          this.agreementTimeArrInit[1] = res.data.data.agreementEndTime;\n          res.data.data.protocolFile.forEach(item => {\n            item.label = item.fileName;\n            item.value = item.fileUrl;\n          });\n          this.form = res.data.data;\n          this.form.agreementTimeArr = this.agreementTimeArrInit;\n        });\n      }\n      done();\n    },\n    searchReset() {\n      this.query = {};\n      this.agreementSignTime = '';\n      this.createTime = '';\n      this.onLoad(this.page);\n    },\n    searchChange(params, done) {\n      this.query = params;\n      if (this.agreementSignTime) {\n        this.query.agreementSignStartTime = this.agreementSignTime[0];\n        this.query.agreementSignEndTime = this.agreementSignTime[1];\n      }\n      if (this.createTime) {\n        this.query.createStartTime = this.createTime[0];\n        this.query.createEndTime = this.createTime[1];\n      }\n      this.page.currentPage = 1;\n      this.onLoad(this.page, params);\n      done();\n    },\n    selectionChange(list) {\n      this.selectionList = list;\n    },\n    selectionClear() {\n      this.selectionList = [];\n      this.$refs.crud.toggleSelection();\n    },\n    currentChange(currentPage) {\n      this.page.currentPage = currentPage;\n    },\n    sizeChange(pageSize) {\n      this.page.pageSize = pageSize;\n    },\n    refreshChange() {\n      this.onLoad(this.page, this.query);\n    },\n    onLoad(page, params = {}) {\n      this.loading = true;\n      getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\n        const data = res.data.data;\n        this.page.total = data.total;\n        this.data = data.records;\n        this.loading = false;\n        this.selectionClear();\n      });\n    },\n  }\n};\n",{"version":3,"sources":["useragreement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"useragreement.vue","sourceRoot":"src/views/contract/contract","sourcesContent":["<template>\r\n  <basic-container>\r\n    <avue-crud :option=\"option\"\r\n               :table-loading=\"loading\"\r\n               :data=\"data\"\r\n               :page=\"page\"\r\n               :permission=\"permissionList\"\r\n               :before-open=\"beforeOpen\"\r\n               v-model=\"form\"\r\n               ref=\"crud\"\r\n               @row-update=\"rowUpdate\"\r\n               @row-save=\"rowSave\"\r\n               @search-change=\"searchChange\"\r\n               @search-reset=\"searchReset\"\r\n               @selection-change=\"selectionChange\"\r\n               @current-change=\"currentChange\"\r\n               @size-change=\"sizeChange\"\r\n               @refresh-change=\"refreshChange\"\r\n               :upload-before=\"uploadBefore\"\r\n               :upload-delete=\"uploadDelete\"\r\n               @on-load=\"onLoad\">\r\n      <template slot-scope=\"{disabled,size}\" slot=\"createTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"createTime\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot-scope=\"{disabled,size}\" slot=\"agreementSignTimeSearch\">\r\n        <el-date-picker\r\n          v-model=\"agreementSignTime\"\r\n          type=\"daterange\"\r\n          value-format=\"yyyy-MM-dd\"\r\n          format=\"yyyy-MM-dd\"\r\n          range-separator=\"-\"\r\n          start-placeholder=\"开始日期\"\r\n          end-placeholder=\"结束日期\">\r\n        </el-date-picker>\r\n      </template>\r\n      <template slot=\"menuLeft\">\r\n        <el-button type=\"danger\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-delete\"\r\n                   plain\r\n                   v-if=\"permission.useragreement_delete\"\r\n                   @click=\"handleDelete\">删 除\r\n        </el-button>\r\n      </template>\r\n      <template slot=\"userProtocolFile\" slot-scope=\"scope\">\r\n        <span v-if=\"scope.row.protocolFile !== undefined && scope.row.protocolFile.length >0 \">\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   icon=\"el-icon-document-copy\"\r\n                   v-if=\"permission.useragreement_view\"\r\n                   @click.stop=\"viewAgreementDocument(scope.row)\">\r\n          查看协议文件\r\n        </el-button>\r\n        </span>\r\n      </template>\r\n      <template slot=\"agreementNo\" slot-scope=\"scope\">\r\n        <el-button type=\"text\"\r\n                   size=\"small\"\r\n                   v-if=\"permission.useragreement_view\"\r\n                   class=\"agreementNoClass\"\r\n                   @click.stop=\"handleView(scope.row, index)\">{{scope.row.agreementNo}}\r\n        </el-button>\r\n      </template>\r\n    </avue-crud>\r\n    <userProtocolFilePerview :openDialog=\"openDialog\" :protocolFileList=\"protocolFileList\"\r\n                             @close=\"closeDialog\"></userProtocolFilePerview>\r\n  </basic-container>\r\n</template>\r\n\r\n<script>\r\n  import {getList, getDetail, add, update, remove} from \"@/api/contract/contract/useragreement\";\r\n  import {mapGetters} from \"vuex\";\r\n  import {fileType} from \"@/util/util\";\r\n  import userProtocolFilePerview from \"./userProtocolFilePerview\";\r\n\r\n  export default {\r\n    components: {userProtocolFilePerview},\r\n    data() {\r\n      return {\r\n        form: {},\r\n        query: {},\r\n        loading: true,\r\n        openDialog: false,\r\n        //协议文件列表\r\n        protocolFileList: [],\r\n        page: {\r\n          pageSize: 10,\r\n          currentPage: 1,\r\n          total: 0\r\n        },\r\n        agreementSignTime: [],\r\n        agreementTimeArrInit: [],\r\n        createTime: [],\r\n        selectionList: [],\r\n        option: {\r\n          height: 'auto',\r\n          calcHeight: 210,\r\n          searchShow: true,\r\n          searchMenuSpan: 6,\r\n          tip: false,\r\n          editBtn: true,\r\n          border: true,\r\n          index: false,\r\n          viewBtn: true,\r\n          viewBtnText: '查看合约',\r\n          delBtn: false,\r\n          selection: true,\r\n          labelWidth: 130,\r\n          menu: true,//是否显示操作菜单栏\r\n          menuWidth: 180,//操作菜单栏的宽度\r\n          column: [\r\n            {\r\n              label: \"主键id 雪花算法产生\",\r\n              prop: \"id\",\r\n              hide: true,\r\n              display: false, //在查看，新增，编辑页面是否显示\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入主键id 雪花算法产生\",\r\n                trigger: \"blur\"\r\n              }]\r\n            },\r\n            {\r\n              label: \"协议编码\",\r\n              prop: \"agreementNo\",\r\n              display: false, //在查看，新增，编辑页面是否显示\r\n              rules: [{\r\n                required: true,\r\n                message: \"请输入协议编码\",\r\n                trigger: \"blur\"\r\n              }],\r\n              slot: true\r\n            },\r\n            {\r\n              label: \"协议名称\",\r\n              span: 12,\r\n              prop: \"agreementName\",\r\n              search: true,\r\n              display: true,\r\n              showWordLimit: true,\r\n              maxlength: \"30\",\r\n              rules: [\r\n                {required: true, message: \"请输入协议名称\", trigger: \"blur\"},\r\n                {min: 1, max: 30, message: '长度在 1 到 30 个字符', trigger: 'blur'}\r\n              ],\r\n              order: 7\r\n            },\r\n            {\r\n              label: \"协议类型\",\r\n              span: 12,\r\n              prop: \"agreementType\",\r\n              search: true,\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.AGREEMENT_TYPE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              order: 6\r\n            },\r\n            {\r\n              label: \"用户协议文件\",\r\n              hide: true,\r\n              display: true, //在查看，新增，编辑页面是否显示\r\n              prop: \"protocolFile\",\r\n              type: \"upload\",\r\n              showFileList: true,\r\n              multiple: true,\r\n              span: 24,\r\n              limit: 10,\r\n              order: 2,\r\n              tip: ' 仅支持上传doc/docx/pdf/zip/rar/png/jpg文件,文件个数不超过10个,单文件大小不超过10M',\r\n              accept: '.doc,.docx,.pdf,.zip,.rar,.jpg,.png',\r\n              action: '/api/cnfic-resource/oss/file/putFile',\r\n              propsHttp: {\r\n                res: 'data',\r\n                name: \"originalName\",\r\n                url: \"link\"\r\n              }\r\n            },\r\n            {\r\n              label: \"协议内容\",\r\n              span: 24,\r\n              prop: \"agreementContent\",\r\n              type: \"textarea\",\r\n              showWordLimit: true,\r\n              hide: true,\r\n              minRows: 3,\r\n              maxRows: 5,\r\n              maxlength: 5000,\r\n              order: 1\r\n            },\r\n            {\r\n              label: \"协议状态\",\r\n              search: true,\r\n              display: false, //在查看，新增，编辑页面是否显示\r\n              prop: \"agreementState\",\r\n              type: \"select\",\r\n              dicUrl: this.getDicValue(this.CONSTANT.AGREEMENT_STATE),\r\n              props: {\r\n                label: \"dictValue\",\r\n                value: \"dictKey\"\r\n              },\r\n              width: 80,\r\n            },\r\n            {\r\n              label: \"金额(元)\",\r\n              prop: \"amount\",\r\n              order: 5,\r\n              span: 12,\r\n              rules: [\r\n                {\r\n                  pattern: /(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/,\r\n                  message: '请输入正确格式,可保留两位小数'\r\n                }\r\n              ],\r\n            },\r\n            {\r\n              label: \"期限(月)\",\r\n              prop: \"termOfMonth\",\r\n              display: false,\r\n              width: 80,\r\n            },\r\n            {\r\n              label: \"有效期\",\r\n              prop: 'agreementTimeArr',\r\n              type: 'daterange',\r\n              format: 'yyyy-MM-dd',\r\n              valueFormat: 'yyyy-MM-dd',\r\n              search: false,\r\n              hide: true,\r\n              slot: true,\r\n              span: 12,\r\n              order: 3\r\n            },\r\n            {\r\n              label: \"签订时间\",\r\n              prop: \"agreementSignTime\",\r\n              searchslot: true,\r\n              type: 'date',\r\n              format: 'yyyy-MM-dd',\r\n              valueFormat: 'yyyy-MM-dd',\r\n              search: true,\r\n              span: 12,\r\n              order: 4\r\n            },\r\n            {\r\n              label: \"创建时间\",\r\n              prop: \"createTime\",\r\n              searchslot: true,\r\n              search: true,\r\n              display: false\r\n            },\r\n            {\r\n              label: '用户协议文件',\r\n              prop: 'userProtocolFile',\r\n              display: false,\r\n              slot: true\r\n            },\r\n          ]\r\n        },\r\n        data: []\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapGetters([\"permission\"]),\r\n      permissionList() {\r\n        return {\r\n          addBtn: this.vaildData(this.permission.useragreement_add, false),\r\n          viewBtn: this.vaildData(this.permission.useragreement_view, false),\r\n          delBtn: this.vaildData(this.permission.useragreement_delete, false),\r\n          editBtn: this.vaildData(this.permission.useragreement_edit, false)\r\n        };\r\n      },\r\n      ids() {\r\n        let ids = [];\r\n        this.selectionList.forEach(ele => {\r\n          ids.push(ele.id);\r\n        });\r\n        return ids.join(\",\");\r\n      }\r\n    },\r\n    methods: {\r\n      uploadBefore(file, done, loading, column) {\r\n        //如果你想修改file文件,由于上传的file是只读文件，必须复制新的file才可以修改名字，完后赋值到done函数里,如果不修改的话直接写done()即可\r\n        if ((file.size / 1024) < (1024 * 10)) {\r\n          if (fileType(file.name, this)) {\r\n            done();\r\n          } else {\r\n            loading();\r\n          }\r\n        } else {\r\n          loading();\r\n          this.$message.warning(\"附件大小限10M以内\");\r\n        }\r\n      },\r\n      handleView: function (row, index) {\r\n        this.$refs.crud.rowView(row, index);\r\n      },\r\n      rowSave(row, done, loading) {\r\n        if (row.agreementTimeArr.length == 2) {\r\n          row.agreementStartTime = row.agreementTimeArr[0];\r\n          row.agreementEndTime = row.agreementTimeArr[1];\r\n        }\r\n        row.protocolFile.forEach(item => {\r\n          item.fileName = item.label;\r\n          item.fileUrl = item.value;\r\n        });\r\n        add(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowUpdate(row, index, done, loading) {\r\n        if (row.agreementTimeArr.length == 2) {\r\n          row.agreementStartTime = row.agreementTimeArr[0];\r\n          row.agreementEndTime = row.agreementTimeArr[1];\r\n        }\r\n        row.protocolFile.forEach(item => {\r\n          item.fileName = item.label;\r\n          item.fileUrl = item.value;\r\n        });\r\n        update(row).then(() => {\r\n          done();\r\n          this.onLoad(this.page);\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"操作成功!\"\r\n          });\r\n        }, error => {\r\n          window.console.log(error);\r\n          loading();\r\n        });\r\n      },\r\n      rowDel(row) {\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(row.id);\r\n          })\r\n          .then(() => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n          });\r\n      },\r\n      viewAgreementDocument(row) {\r\n        getDetail(row.id).then(res => {\r\n          this.protocolFileList = res.data.data.protocolFile;\r\n          console.log(11, this.protocolFileList);\r\n          this.openDialog = true;\r\n        })\r\n      },\r\n      closeDialog(val) {\r\n        this.openDialog = val;\r\n      },\r\n      handleDelete() {\r\n        if (this.selectionList.length === 0) {\r\n          this.$message.warning(\"请选择至少一条数据\");\r\n          return;\r\n        }\r\n        this.$confirm(\"确定将选择数据删除?\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        })\r\n          .then(() => {\r\n            return remove(this.ids);\r\n          })\r\n          .then((res) => {\r\n            this.onLoad(this.page);\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"操作成功!\"\r\n            });\r\n            this.$refs.crud.toggleSelection();\r\n          });\r\n      },\r\n      beforeOpen(done, type) {\r\n        if ([\"edit\", \"view\"].includes(type)) {\r\n          getDetail(this.form.id).then(res => {\r\n            this.agreementTimeArrInit[0] = res.data.data.agreementStartTime;\r\n            this.agreementTimeArrInit[1] = res.data.data.agreementEndTime;\r\n            res.data.data.protocolFile.forEach(item => {\r\n              item.label = item.fileName;\r\n              item.value = item.fileUrl;\r\n            });\r\n            this.form = res.data.data;\r\n            this.form.agreementTimeArr = this.agreementTimeArrInit;\r\n          });\r\n        }\r\n        done();\r\n      },\r\n      searchReset() {\r\n        this.query = {};\r\n        this.agreementSignTime = '';\r\n        this.createTime = '';\r\n        this.onLoad(this.page);\r\n      },\r\n      searchChange(params, done) {\r\n        this.query = params;\r\n        if (this.agreementSignTime) {\r\n          this.query.agreementSignStartTime = this.agreementSignTime[0];\r\n          this.query.agreementSignEndTime = this.agreementSignTime[1];\r\n        }\r\n        if (this.createTime) {\r\n          this.query.createStartTime = this.createTime[0];\r\n          this.query.createEndTime = this.createTime[1];\r\n        }\r\n        this.page.currentPage = 1;\r\n        this.onLoad(this.page, params);\r\n        done();\r\n      },\r\n      selectionChange(list) {\r\n        this.selectionList = list;\r\n      },\r\n      selectionClear() {\r\n        this.selectionList = [];\r\n        this.$refs.crud.toggleSelection();\r\n      },\r\n      currentChange(currentPage) {\r\n        this.page.currentPage = currentPage;\r\n      },\r\n      sizeChange(pageSize) {\r\n        this.page.pageSize = pageSize;\r\n      },\r\n      refreshChange() {\r\n        this.onLoad(this.page, this.query);\r\n      },\r\n      onLoad(page, params = {}) {\r\n        this.loading = true;\r\n        getList(page.currentPage, page.pageSize, Object.assign(params, this.query)).then(res => {\r\n          const data = res.data.data;\r\n          this.page.total = data.total;\r\n          this.data = data.records;\r\n          this.loading = false;\r\n          this.selectionClear();\r\n        });\r\n      },\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .agreementNoClass {\r\n    font-weight: normal;\r\n  }\r\n</style>\r\n"]}]}