{"remainingRequest":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\page\\index\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\src\\page\\index\\index.vue","mtime":1618367977394},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\东方通\\source\\b_zwj\\xinhua-finance-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from \"vuex\";\r\nimport tags from \"./tags\";\r\nimport top from \"./top/\";\r\nimport sidebar from \"./sidebar/\";\r\nimport admin from \"@/util/admin\";\r\n// import { validatenull } from \"@/util/validate\";\r\n// import { calcDate } from \"@/util/date.js\";\r\n// import { getStore } from \"@/util/store.js\";\r\nexport default {\r\n  components: {\r\n    top,\r\n    tags,\r\n    sidebar\r\n  },\r\n  name: \"index\",\r\n  data() {\r\n    return {\r\n      //刷新token锁\r\n      refreshLock: false,\r\n      //刷新token的时间\r\n      refreshTime: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    //实时检测刷新token\r\n    this.refreshToken();\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  computed: mapGetters([\"isLock\", \"isCollapse\", \"website\"]),\r\n  props: [],\r\n  methods: {\r\n    showCollapse() {\r\n      this.$store.commit(\"SET_COLLAPSE\");\r\n    },\r\n    // 屏幕检测\r\n    init() {\r\n      this.$store.commit(\"SET_SCREEN\", admin.getScreen());\r\n      window.onresize = () => {\r\n        setTimeout(() => {\r\n          this.$store.commit(\"SET_SCREEN\", admin.getScreen());\r\n        }, 0);\r\n      };\r\n    },\r\n    // 10分钟检测一次token\r\n    refreshToken() {\r\n      /*this.refreshTime = setInterval(() => {\r\n        const token = getStore({\r\n          name: \"token\",\r\n          debug: true\r\n        });\r\n        const date = calcDate(token.datetime, new Date().getTime());\r\n        if (validatenull(date)) return;\r\n        if (!(date.seconds >= this.website.tokenTime) && !this.refreshLock) {\r\n          this.refreshLock = true;\r\n          this.$store\r\n            .dispatch(\"RefreshToken\")\r\n            .then(() => {\r\n              this.refreshLock = false;\r\n            })\r\n            .catch(() => {\r\n              this.refreshLock = false;\r\n            });\r\n        }\r\n      }, 10000);*/\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/index","sourcesContent":["<template>\r\n  <div class=\"avue-contail\"\r\n       :class=\"{'avue--collapse':isCollapse}\">\r\n    <div class=\"avue-header\">\r\n      <!-- 顶部导航栏 -->\r\n      <top />\r\n    </div>\r\n\r\n    <div class=\"avue-layout\">\r\n      <div class=\"avue-left\">\r\n        <!-- 左侧导航栏 -->\r\n        <sidebar />\r\n      </div>\r\n      <div class=\"avue-main\">\r\n        <!-- 顶部标签卡 -->\r\n        <tags />\r\n        <!-- 主体视图层 -->\r\n        <el-scrollbar style=\"height:100%\">\r\n          <keep-alive>\r\n            <router-view class=\"avue-view\"\r\n                         v-if=\"$route.meta.keepAlive\" />\r\n          </keep-alive>\r\n          <router-view class=\"avue-view\"\r\n                       v-if=\"!$route.meta.keepAlive\" />\r\n        </el-scrollbar>\r\n\r\n      </div>\r\n    </div>\r\n    <!-- <el-footer class=\"avue-footer\">\r\n      <img src=\"/svg/logo.svg\"\r\n           alt=\"\"\r\n           class=\"logo\">\r\n      <p class=\"copyright\">© 2018 Avue designed by smallwei</p>\r\n    </el-footer> -->\r\n    <div class=\"avue-shade\"\r\n         @click=\"showCollapse\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport tags from \"./tags\";\r\nimport top from \"./top/\";\r\nimport sidebar from \"./sidebar/\";\r\nimport admin from \"@/util/admin\";\r\n// import { validatenull } from \"@/util/validate\";\r\n// import { calcDate } from \"@/util/date.js\";\r\n// import { getStore } from \"@/util/store.js\";\r\nexport default {\r\n  components: {\r\n    top,\r\n    tags,\r\n    sidebar\r\n  },\r\n  name: \"index\",\r\n  data() {\r\n    return {\r\n      //刷新token锁\r\n      refreshLock: false,\r\n      //刷新token的时间\r\n      refreshTime: \"\"\r\n    };\r\n  },\r\n  created() {\r\n    //实时检测刷新token\r\n    this.refreshToken();\r\n  },\r\n  mounted() {\r\n    this.init();\r\n  },\r\n  computed: mapGetters([\"isLock\", \"isCollapse\", \"website\"]),\r\n  props: [],\r\n  methods: {\r\n    showCollapse() {\r\n      this.$store.commit(\"SET_COLLAPSE\");\r\n    },\r\n    // 屏幕检测\r\n    init() {\r\n      this.$store.commit(\"SET_SCREEN\", admin.getScreen());\r\n      window.onresize = () => {\r\n        setTimeout(() => {\r\n          this.$store.commit(\"SET_SCREEN\", admin.getScreen());\r\n        }, 0);\r\n      };\r\n    },\r\n    // 10分钟检测一次token\r\n    refreshToken() {\r\n      /*this.refreshTime = setInterval(() => {\r\n        const token = getStore({\r\n          name: \"token\",\r\n          debug: true\r\n        });\r\n        const date = calcDate(token.datetime, new Date().getTime());\r\n        if (validatenull(date)) return;\r\n        if (!(date.seconds >= this.website.tokenTime) && !this.refreshLock) {\r\n          this.refreshLock = true;\r\n          this.$store\r\n            .dispatch(\"RefreshToken\")\r\n            .then(() => {\r\n              this.refreshLock = false;\r\n            })\r\n            .catch(() => {\r\n              this.refreshLock = false;\r\n            });\r\n        }\r\n      }, 10000);*/\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}